const male-gold-miner = 579
const female-gold-miner = 581

const wood-threshold = 300
const food-threshold = 300
const gold-threshold = 300

const min-wood-percent = 10
const min-food-percent = 10
const min-gold-percent = 10

#do once
  set name to "Artemis"
  set up basics
  
  assign 8 builders to town-center-foundation
  assign 2 builders to barracks
  assign 2 builders to archery-range
  assign 2 builders to stable
#end do

load "templates/basic_diplomacy.aoe2ai"

#template unit-names
  {before}archer-line{after}
  {before}skirmisher-line{after}
  {before}knight-line{after}
  {before}scout-cavalry-line{after}
  {before}militiaman-line{after}
  {before}spearman-line{after}
#end template

#template units-with-ranged-blacksmith-benefit
  {before}archer-line{after}
  {before}skirmisher-line{after}
#end template

#template units-with-cavalry-blacksmith-benefit
  {before}knight-line{after}
  {before}scout-cavalry-line{after}
#end template

#template units-with-infantry-blacksmith-benefit
  {before}militiaman-line{after}
  {before}spearman-line{after}
#end template

#template units-with-thumb-ring-benefit
  {before}archer-line{after}
  {before}skirmisher-line{after}
#end template

#template units-with-ballistics-benefit
  {before}archer-line{after}
  {before}skirmisher-line{after}
#end template

#template units-with-bloodlines-and-husbandry-benefit
  {before}knight-line{after}
  {before}scout-cavalry-line{after}
#end template

#template reset-unit-scores
  insert unit-names(before="goal ",after="-score = 0")
#end template

#template clear-production-goals
  insert unit-names(before="goal ",after="-production = 0")
  goal battering-ram-line-production = 0
#end template

const critical-research-available-modifier = 5000
const critical-research-completed-modifier = 5010

const important-research-available-modifier = 100
const important-research-completed-modifier = 110

const medium-research-available-modifier = 50
const medium-research-completed-modifier = 60

const low-research-available-modifier = 10
const low-research-completed-modifier = 20

const small-investment-modifier = 10
const medium-investment-modifier = 20
const large-investment-modifier = 30

const minor-counter-detect-units = 5
const minor-counter-modifier = 50
const major-counter-detect-units = 10
const major-counter-modifier = 100

const trash-bias = 5

insert reset-unit-scores
#if current-age == feudal-age
  goal archer-line-score += 5
#end if
insert clear-production-goals

// ranged blacksmith availability scoring

#if research-completed feudal-age and not research-available ri-fletching and up-research-status c: ri-fletching < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed feudal-age and not research-available ri-padded-archer-armor and up-research-status c: ri-padded-archer-armor < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed castle-age and not research-available ri-bodkin-arrow and up-research-status c: ri-bodkin-arrow < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed castle-age and not research-available ri-leather-archer-armor and up-research-status c: ri-leather-archer-armor < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed imperial-age and not research-available ri-bracer and up-research-status c: ri-bracer < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed imperial-age and not research-available ri-ring-archer-armor and up-research-status c: ri-ring-archer-armor < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

// cavalry blacksmith availability scoring

#if research-completed feudal-age and not research-available ri-scale-barding and up-research-status c: ri-scale-barding < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed castle-age and not research-available ri-chain-barding and up-research-status c: ri-chain-barding < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed imperial-age and not research-available ri-plate-barding and up-research-status c: ri-plate-barding < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

// infantry blacksmith availability scoring

#if research-completed feudal-age and not research-available ri-scale-mail and up-research-status c: ri-scale-mail < research-pending
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed castle-age and not research-available ri-chain-mail and up-research-status c: ri-chain-mail < research-pending
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if not civ-selected romans
  #if research-completed imperial-age and not research-available ri-plate-mail and up-research-status c: ri-plate-mail < research-pending
    insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
  #end if
#end if

// cavalry+infantry blacksmith availability scoring

#if research-completed feudal-age and not research-available ri-forging and up-research-status c: ri-forging < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed castle-age and not research-available ri-iron-casting and up-research-status c: ri-iron-casting < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed imperial-age and not research-available ri-blast-furnace and up-research-status c: ri-blast-furnace < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

// ranged blacksmith completed scoring

#if research-completed ri-fletching
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-padded-archer-armor
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-bodkin-arrow
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-leather-archer-armor
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-bracer
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-ring-archer-armor
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// cavalry blacksmith completed scoring

#if research-completed ri-scale-barding
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-chain-barding
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-plate-barding
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// infantry blacksmith completed scoring

#if research-completed ri-scale-mail
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-chain-mail
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-plate-mail
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// cavalry+infantry blacksmith completed scoring

#if research-completed ri-forging
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-iron-casting
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-blast-furnace
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// other techs - ranged

// thumb ring
#if not civ-selected briton
  #if research-completed castle-age and not research-available ri-thumb-ring and up-research-status c: ri-thumb-ring < research-pending
    insert units-with-thumb-ring-benefit(before="goal ",after="-score -= medium-research-available-modifier")
  #end if
  #if research-completed ri-thumb-ring
    insert units-with-thumb-ring-benefit(before="goal ",after="-score += small-investment-modifier")
  #end if
#end if

// ballistics
#if research-completed castle-age and not research-available ri-ballistics and up-research-status c: ri-ballistics < research-pending
  insert units-with-ballistics-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if
#if research-completed ri-ballistics
  insert units-with-ballistics-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// crossbow
#if research-completed castle-age and not research-available ri-crossbow and up-research-status c: ri-crossbow < research-pending
  goal archer-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-crossbow
  goal archer-line-score += small-investment-modifier
#end if

// arbalest
#if research-completed imperial-age and not research-available ri-arbalest and up-research-status c: ri-arbalest < research-pending
  goal archer-line-score -= important-research-available-modifier
#end if
#if research-completed ri-arbalest
  goal archer-line-score += medium-investment-modifier
#end if

// elite skirmisher
#if research-completed castle-age and not research-available ri-elite-skirmisher and up-research-status c: ri-elite-skirmisher < research-pending
  goal skirmisher-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-elite-skirmisher
  goal skirmisher-line-score += small-investment-modifier
#end if

// other techs - cavalry

// bloodlines
#if not civ-selected frankish
  #if research-completed feudal-age and not research-available ri-bloodlines and up-research-status c: ri-bloodlines < research-pending
    insert units-with-bloodlines-and-husbandry-benefit(before="goal ",after="-score -= important-research-available-modifier")
  #end if
  #if research-completed ri-bloodlines
    insert units-with-bloodlines-and-husbandry-benefit(before="goal ",after="-score += small-investment-modifier")
  #end if
#end if

// husbandry
#if research-completed feudal-age and not research-available ri-husbandry and up-research-status c: ri-husbandry < research-pending
  insert units-with-bloodlines-and-husbandry-benefit(before="goal ",after="-score -= medium-research-available-modifier")
#end if
#if research-completed ri-husbandry
  insert units-with-bloodlines-and-husbandry-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// cavalier
#if research-completed imperial-age and not research-available ri-cavalier and up-research-status c: ri-cavalier < research-pending
  goal knight-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-cavalier
  goal knight-line-score += medium-investment-modifier
#end if

// paladin
#if research-completed ri-cavalier and research-completed imperial-age and not research-available ri-paladin and up-research-status c: ri-paladin < research-pending
  goal knight-line-score -= medium-research-available-modifier
#end if
#if research-completed ri-paladin
  goal knight-line-score += large-investment-modifier
#end if

// light cavalry
#if research-completed castle-age and not research-available ri-light-cavalry and up-research-status c: ri-light-cavalry < research-pending
  goal scout-cavalry-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-light-cavalry
  goal scout-cavalry-line-score += small-investment-modifier
#end if

#if not civ-selected lithuanians and not civ-selected poles
  // hussar
  #if research-completed ri-light-cavalry and research-completed imperial-age and not research-available ri-hussar and up-research-status c: ri-hussar < research-pending
    goal scout-cavalry-line-score -= critical-research-available-modifier
  #end if
  #if research-completed ri-hussar
    goal scout-cavalry-line-score += large-investment-modifier
  #end if
#else
  // winged hussar
  #if research-completed ri-light-cavalry and research-completed imperial-age and not research-available ri-winged-hussar and up-research-status c: ri-winged-hussar < research-pending
    goal scout-cavalry-line-score -= critical-research-available-modifier
  #end if
  #if research-completed ri-winged-hussar
    goal scout-cavalry-line-score += large-investment-modifier
  #end if
#end if

// other techs - infantry

#if not civ-selected gothic
  // supplies
  #if research-completed feudal-age and not research-available ri-supplies and up-research-status c: ri-supplies < research-pending
    goal militiaman-line-score -= important-research-available-modifier
  #end if
  #if research-completed ri-supplies
    goal militiaman-line-score += small-investment-modifier
  #end if
  
  // gambesons
  #if research-completed ri-supplies and research-completed castle-age and not research-available ri-gambesons and up-research-status c: ri-gambesons < research-pending
    goal militiaman-line-score -= medium-research-available-modifier
  #end if
  #if research-completed ri-gambesons
    goal militiaman-line-score += small-investment-modifier
    insert units-with-bloodlines-and-husbandry-benefit(before="goal ",after="-score += small-investment-modifier")
  #end if
#end if

// squires
#if research-completed castle-age and not research-available ri-squires and up-research-status c: ri-squires < research-pending
  goal militiaman-line-score -= low-research-available-modifier
#end if
#if research-completed ri-squires
  goal militiaman-line-score += small-investment-modifier
#end if

// arson
#if research-completed castle-age and not research-available ri-arson and up-research-status c: ri-arson < research-pending
  goal militiaman-line-score -= low-research-available-modifier
#end if
#if research-completed ri-arson
  goal militiaman-line-score += small-investment-modifier
#end if

// man at arms
#if research-completed feudal-age and not research-available ri-man-at-arms and up-research-status c: ri-man-at-arms < research-pending
  goal militiaman-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-man-at-arms
  goal militiaman-line-score += small-investment-modifier
#end if

// long swordsman
#if research-completed ri-man-at-arms and research-completed castle-age and not research-available ri-long-swordsman and up-research-status c: ri-long-swordsman < research-pending
  goal militiaman-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-long-swordsman
  goal militiaman-line-score += small-investment-modifier
#end if

// two handed swordsman
#if not civ-selected romans
  #if research-completed ri-long-swordsman and research-completed imperial-age and not research-available ri-two-handed-swordsman and up-research-status c: ri-two-handed-swordsman < research-pending
    goal militiaman-line-score -= critical-research-available-modifier
  #end if
  #if research-completed ri-two-handed-swordsman
    goal militiaman-line-score += medium-investment-modifier
  #end if
#end if

// champion
#if not civ-selected romans
  #if research-completed ri-two-handed-swordsman and research-completed imperial-age and not research-available ri-champion and up-research-status c: ri-champion < research-pending
    goal militiaman-line-score -= critical-research-available-modifier
  #end if
  #if research-completed ri-champion
    goal militiaman-line-score += large-investment-modifier
  #end if
#end if

// legionary
#if civ-selected romans
  #if research-completed ri-long-swordsman and research-completed imperial-age and not research-available ri-legionary and up-research-status c: ri-legionary < research-pending
    goal militiaman-line-score -= critical-research-available-modifier
  #end if
  #if research-completed ri-legionary
    goal militiaman-line-score += large-investment-modifier
  #end if
#end if

// pikeman
#if research-completed castle-age and not research-available ri-pikeman and up-research-status c: ri-pikeman < research-pending
  goal spearman-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-pikeman
  goal spearman-line-score += small-investment-modifier
#end if

// halberdier
#if research-completed ri-pikeman and research-completed imperial-age and not research-available ri-halberdier and up-research-status c: ri-halberdier < research-pending
  goal spearman-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-halberdier
  goal spearman-line-score += large-investment-modifier
#end if

// trash bias

goal spearman-line-score -= trash-bias
goal skirmisher-line-score -= trash-bias
goal scout-cavalry-line-score -= trash-bias

// counters

// skirmishers
#if players-unit-type-count target-player skirmisher-line >= 5
  goal archer-line-score -= major-counter-modifier
  goal spearman-line-score -= major-counter-modifier
  goal knight-line-score += major-counter-modifier
  goal scout-cavalry-line-score += major-counter-modifier
#end if

// archers
#if players-unit-type-count target-player archer-line >= 5
  goal militiaman-line-score -= minor-counter-modifier
  goal spearman-line-score -= major-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
  goal knight-line-score += minor-counter-modifier
  goal scout-cavalry-line-score += minor-counter-modifier
#end if

// cavalry archers
#if players-unit-type-count target-player cavalry-archer-line >= 5
  goal militiaman-line-score -= minor-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
#end if

// elephant archers
#if players-unit-type-count target-player elephant-archer-line >= 3
  goal archer-line-score -= minor-counter-modifier
  goal militiaman-line-score -= minor-counter-modifier
  goal skirmisher-line-score += minor-counter-modifier
#end if

// hand cannoneers
#if players-unit-type-count target-player hand-cannoneer >= 5
  goal militiaman-line -= major-counter-modifier
  goal spearman-line -= major-counter-modifier
  goal archer-line += major-counter-modifier
  goal skirmisher-line += major-counter-modifier
#end if

// militia
#if players-unit-type-count target-player militiaman-line >= 5
  goal skirmisher-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// spearman
#if players-unit-type-count target-player spearman-line >= 5
  goal knight-line-score -= major-counter-modifier
  goal scout-cavalry-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
#end if

// eagles
#if players-unit-type-count target-player eagle-warrior-line >= 5
  goal skirmisher-line-score -= minor-counter-modifier
  goal archer-line-score -= minor-counter-modifier
  goal militiaman-line-score += major-counter-modifier
#end if

// scouts
#if players-unit-type-count target-player scout-cavalry-line >= 5
  goal skirmisher-line-score -= major-counter-modifier
  goal archer-line-score -= minor-counter-modifier
  goal spearman-line-score += major-counter-modifier
#end if

// knights
#if players-unit-type-count target-player knight-line >= 3
  goal skirmisher-line-score -= major-counter-modifier
  goal archer-line-score -= minor-counter-modifier
  goal spearman-line-score += major-counter-modifier
#end if

// camels
#if players-unit-type-count target-player camel-line >= 3
  goal skirmisher-line-score -= minor-counter-modifier
  goal knight-line-score -= minor-counter-modifier
  goal scout-cavalry-line-score -= major-counter-modifier
#end if

// battle elephants
#if players-unit-type-count target-player battle-elephant-line >= 3
  goal skirmisher-line-score -= major-counter-modifier
  goal archer-line-score -= minor-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal spearman-line += major-counter-modifier
#end if

// steppe lancers
#if players-unit-type-count target-player steppe-lancer-line >= 3
  goal skirmisher-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
  goal spearman-line-score += major-counter-modifier
#end if

// mangonels
#if players-unit-type-count target-player mangonel-line >= 3
  goal skirmisher-line-score -= major-counter-modifier
  goal archer-line-score -= minor-counter-modifier
  goal knight-line-score += major-counter-modifier
  goal scout-cavalry-line-score += major-counter-modifier
#end if

// scorpions
#if players-unit-type-count target-player scorpion-line >= 3
  goal archer-line-score -= major-counter-modifier
  goal skirmisher-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal spearman-line-score -= major-counter-modifier
  goal knight-line-score += major-counter-modifier
  goal scout-cavalry-line-score += major-counter-modifier
#end if

// monks
#if players-unit-type-count target-player monk-set >= 5
  goal knight-line-score -= major-counter-modifier
  goal scout-cavalry-line-score += major-counter-modifier
  goal archer-line-score += major-counter-modifier
  goal skirmisher-line-score += minor-counter-modifier
#end if

// counters - UU

// jaguar warriors
#if players-unit-type-count target-player jaguar-man-line >= 3
  goal spearman-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// ratha
#if players-unit-type-count target-player ratha-set >= 3
  goal spearman-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
#end if

// camel archers
#if players-unit-type-count target-player camel-archer-line >= 3
  goal militiaman-line-score -= major-counter-modifier
  goal spearman-line-score += major-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
#end if

// hussite wagons
#if players-unit-type-count target-player hussite-wagon-line >= 3
  goal archer-line-score -= major-counter-modifier
#end if

// longbows
#if players-unit-type-count target-player longbowman-line >= 3
  goal spearman-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
  goal knight-line-score += major-counter-modifier
  goal scout-cavalry-line-score += major-counter-modifier
#end if

// konnik
#if players-unit-type-count target-player konnik-set >= 3
  goal spearman-line-score -= minor-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score -= major-counter-modifier
#end if

// coustillier
#if players-unit-type-count target-player coustillier-line >= 3
  goal spearman-line-score -= minor-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score -= major-counter-modifier
#end if

// arambai
// not sure I care.

// cataphract
#if players-unit-type-count target-player cataphract-line >= 3
  goal spearman-line-score -= minor-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score += minor-counter-modifier
#end if

// woad raiders
#if players-unit-type-count target-player woad-raider-line >= 3
  goal spearman-line-score -= minor-counter-modifier
  goal militiaman-line-score -= minor-counter-modifier
  goal archer-line-score += major-counter-modifier
  goal knight-line-score += minor-counter-modifier
  goal scout-cavalry-line-score += minor-counter-modifier
#end if

// chu ko nu
#if players-unit-type-count target-player chu-ko-nu-line >= 3
  goal spearman-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
  goal skirmisher-line-score += minor-counter-modifier
#end if

// kipchak
#if players-unit-type-count target-player kipchak-set >= 3
  goal spearman-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
#end if

// urumi swordsman
#if players-unit-type-count target-player urumi-swordsman-line >= 3
  goal spearman-line-score -= minor-counter-modifier
  goal militiaman-line-score -= minor-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// shotel warriors
#if players-unit-type-count target-player shotel-warrior-line >= 3
  goal spearman-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// throwing axe people
#if players-unit-type-count target-player throwing-axeman-line >= 3
  goal spearman-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// huskarls
#if players-unit-type-count target-player huskarl-set >= 3
  goal archer-line-score -= major-counter-modifier
  goal skirmisher-line-score -= major-counter-modifier
  goal knight-line-score += minor-counter-modifier
  goal scout-cavalry-line-score += minor-counter-modifier
#end if

// Qi'Tara
#if players-unit-type-count target-player chakram-thrower-line >= 3
  goal spearman-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// ghulam
#if players-unit-type-count target-player ghulam-line >= 3
  goal archer-line-score -= major-counter-modifier
  goal skirmisher-line-score -= minor-counter-modifier
  goal knight-line-score += minor-counter-modifier
  goal scout-cavalry-line-score += minor-counter-modifier
#end if

// tarkan
#if players-unit-type-count target-player tarkan-line >= 3
  goal archer-line-score -= major-counter-modifier
  goal skirmisher-line-score -= major-counter-modifier
  goal spearman-line-score += major-counter-modifier
#end if

// kamayuk
#if players-unit-type-count target-player kamayuk-line >= 3
  goal knight-line-score -= major-counter-modifier
  goal scout-cavalry-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// genoese crossbows
#if players-unit-type-count target-player genoese-crossbowman-line >= 3
  goal knight-line-score -= major-counter-modifier
  goal scout-cavalry-line-score -= major-counter-modifier
  goal archer-line-score += minor-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
#end if

// samurai
#if players-unit-type-count target-player samurai-line >= 3
  goal archer-line-score += minor-counter-modifier
#end if

// ballista elephant
#if players-unit-type-count target-player ballista-elephant-line >= 3
  goal spearman-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score -= major-counter-modifier
  goal knight-line-score += major-counter-modifier
  goal scout-cavalry-line-score += major-counter-modifier
#end if

// war wagon
#if players-unit-type-count target-player war-wagon-line >= 3
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score -= major-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
#end if

// leitis
#if players-unit-type-count target-player leitis-line >= 3
  goal militiaman-line-score -= major-counter-modifier
  goal knight-line-score -= major-counter-modifier
  goal spearman-line-score += major-counter-modifier
#end if

// magyar huszar
#if players-unit-type-count target-player magyar-huszar-line >= 3
  goal skirmisher-line-score -= major-counter-modifier
  goal archer-line-score -= minor-counter-modifier
  goal spearman-line-score += major-counter-modifier
#end if

// karambit warrior
#if players-unit-type-count target-player karambit-warrior-line >= 3
  goal archer-line-score += minor-counter-modifier
  goal knight-line-score += minor-counter-modifier
#end if

// gbeto
#if players-unit-type-count target-player gbeto-line >= 3
  goal spearman-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// plumed archer
#if players-unit-type-count target-player plumed-archer-line >= 3
  goal archer-line-score -= minor-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal spearman-line-score -= major-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
  goal knight-line-score += major-counter-modifier
  goal scout-cavalry-line-score += major-counter-modifier
#end if

// mangudai
#if players-unit-type-count target-player mangudai-line >= 3
  goal archer-line-score -= minor-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal spearman-line-score -= minor-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
#end if

// war elephant
#if players-unit-type-count target-player war-elephant-line >= 3
  goal militiaman-line-score -= major-counter-modifier
  goal spearman-line-score += minor-counter-modifier
#end if

// obuch
#if players-unit-type-count target-player obuch-line >= 3
  goal militiaman-line-score -= minor-counter-modifier
  goal spearman-line-score -= minor-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// organ gun
// not sure I care.

// centurion
#if players-unit-type-count target-player centurion-line >= 3
  goal militiaman-line-score -= minor-counter-modifier
  goal spearman-line-score += major-counter-modifier
#end if

// mameluke
#if players-unit-type-count target-player mameluke-line >= 3
  goal knight-line-score -= minor-counter-modifier
  goal scout-cavalry-line-score -= minor-counter-modifier
  goal archer-line-score += major-counter-modifier
  goal spearman-line-score += minor-counter-modifier
#end if

// serjeant
#if players-unit-type-count target-player serjeant-set >= 3
  goal archer-line-score += minor-counter-modifier
#end if

// boyar
#if players-unit-type-count target-player boyar-line >= 3
  goal skirmisher-line-score -= major-counter-modifier
  goal spearman-line-score += major-counter-modifier
#end if

// conquistador
#if players-unit-type-count target-player conquistador-line >= 3
  goal militiaman-line-score -= major-counter-modifier
  goal spearman-line-score -= minor-counter-modifier
  goal skirmisher-line-score += minor-counter-modifier
#end if

// keshik
#if players-unit-type-count target-player keshik-line >= 3
  goal skirmisher-line-score -= major-counter-modifier
  goal spearman-line-score += major-counter-modifier
#end if

// teutonic knight
#if players-unit-type-count target-player teutonic-knight-line >= 3
  goal militiaman-line-score -= major-counter-modifier
  goal spearman-line-score -= major-counter-modifier
  goal knight-line-score -= minor-counter-modifier
  goal scout-cavalry-line-score -= minor-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// janissary
#if players-unit-type-count target-player janissary-line >= 3
  goal militiaman-line-score -= major-counter-modifier
  goal spearman-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// rattan archers
#if players-unit-type-count target-player rattan-archer-line >= 3
  goal archer-line-score -= major-counter-modifier
  goal militiaman-line-score -= major-counter-modifier
  goal spearman-line-score -= major-counter-modifier
  goal knight-line-score += major-counter-modifier
  goal scout-cavalry-line-score += major-counter-modifier
  goal skirmisher-line-score += major-counter-modifier
#end if

// berserks
#if players-unit-type-count target-player berserk-line >= 3
  goal militiaman-line-score -= minor-counter-modifier
  goal spearman-line-score -= major-counter-modifier
  goal archer-line-score += major-counter-modifier
#end if

// filter off impossible units

#template tank-score-if-not-available
  #if not unit-available {unit}
    goal {unit}-score = -99999
  #end if
#end template

insert unit-names(before="insert tank-score-if-not-available(unit=\"",after="\")")

// get top unit

goal top-unit-score = -99999
goal top-unit = -1
goal second-unit-score = -99999
goal second-unit = -1

#template find-top-fragment
  #if up-compare-goal {unit}-score g:> top-unit-score
    @up-modify-goal top-unit-score g:= {unit}-score
    goal top-unit = {unit}
  #else if up-compare-goal {unit}-score g:> second-unit-score and not goal top-unit {unit}
    @up-modify-goal second-unit-score g:= {unit}-score
    goal second-unit = {unit}
  #end if
#end template

#template find-top-unit
  insert unit-names(before="insert find-top-fragment(unit=\"",after="\")")
#end template

insert find-top-unit

// now for the actual bot that plays the game

#do once
  goal production-scale = 2
#end do

goal halt-production = 0

#template train-unit-internal
  #if goal production-scale {number} and up-pending-objects c: {unit} < {number}
    train {unit}
  #end if
#end template

#template train-unit
  #if goal halt-production 0
    insert train-unit-internal(unit="{unit}",number=1)
    insert train-unit-internal(unit="{unit}",number=2)
    insert train-unit-internal(unit="{unit}",number=3)
    insert train-unit-internal(unit="{unit}",number=4)
    insert train-unit-internal(unit="{unit}",number=5)
    insert train-unit-internal(unit="{unit}",number=6)
    insert train-unit-internal(unit="{unit}",number=7)
    insert train-unit-internal(unit="{unit}",number=8)
  #end if
#end template

#template build-production-building
  goal temp = 0
  @up-get-fact building-type-count-total {building} temp
  #if up-compare-goal temp g:< production-scale
    build {building}
  #end if
#end template

#template research-with-halt
  build 1 {building}
  #if research-available {research} and building-type-count {building} >= 1 and up-research-status c: {research} < research-pending
    research {research}
    goal halt-production = 1
  #end if
#end template

#do once
  #if current-age == dark-age
    goal production-scale = 0
  #else if current-age == feudal-age
    goal production-scale = 2
  #else if current-age == castle-age
    goal production-scale = 3
  #else if current-age == imperial-age
    goal production-scale = 5
  #end if
#end do

manage scouting
do basic targeting
micro sheep
lure boars
#if game-time < 600
  push deer
#end if

#if building-type-count-total town-center == 0
  build 1 town-center
#end if

build lumber camps
#if building-type-count-total lumber-camp >= 1
  build mills
#end if
build houses

#if wood-amount >= 200
  build farms
#end if

#if strategic-number sn-gold-gatherer-percentage > 0
  #when
    build gold mining camps
  #then
    sn-camp-max-distance += 1
  #end when
#end if

#if strategic-number sn-stone-gatherer-percentage > 0
  #when
    build stone mining camps
  #then
    sn-camp-max-distance += 1
  #end when
#end if

research feudal-age
research castle-age
research imperial-age

#if current-age-time >= 120
  research ri-horse-collar
  research ri-heavy-plow
  research ri-crop-rotation
  research ri-double-bit-axe
  research ri-bow-saw
  research ri-two-man-saw
  
  goal gold-miners = 0
  goal temp = 0
  @up-get-fact unit-type-count male-gold-miner gold-miners
  @up-get-fact unit-type-count female-gold-miner temp
  @up-modify-goal gold-miners g:+ temp
  #if up-compare-goal gold-miners c:>= 12
    research ri-gold-mining
  #end if
  #if up-compare-goal gold-miners c:>= 20
    research ri-gold-shaft-mining
  #end if
  
  #if unit-type-count villager >= 50
    research ri-wheel-barrow
  #end if
  #if unit-type-count villager >= 80
    research ri-hand-cart
  #end if
#end if

#if current-age == imperial-age
  train 120 villager with 30 trade
#else
  train 120 villager
#end if
#if game-time > 60
  research ri-loom
#end if

// it's unit decision time

#template make-unit-if-top
  #if goal top-unit {unit} or goal second-unit {unit} and current-age >= castle-age
    goal {unit}-production = 1
  #end if
#end template

#if unit-available battering-ram-line and unit-type-count-total battering-ram-line < 10 and up-pending-objects c: battering-ram-line == 0 and military-population >= 20
  goal battering-ram-line-production = 1
#else
  insert unit-names(before="insert make-unit-if-top(unit=\"",after="\")")
#end if

// it's research time

#template do-common-ranged-upgrades-for-unit
  insert research-with-halt(research="ri-fletching",building="blacksmith")
  insert research-with-halt(research="ri-bodkin-arrow",building="blacksmith")
  insert research-with-halt(research="ri-bracer",building="blacksmith")
  #if unit-type-count-total {unit} >= {other_tech_threshold} or current-age == imperial-age
    insert research-with-halt(research="ri-padded-archer-armor",building="blacksmith")
    insert research-with-halt(research="ri-leather-archer-armor",building="blacksmith")
  #end if
  #if unit-type-count-total {unit} >= {other_tech_threshold}
    insert research-with-halt(research="ri-thumb-ring",building="archery-range")
    insert research-with-halt(research="ri-ballistics",building="university")
    insert research-with-halt(research="ri-ring-archer-armor",building="blacksmith")
  #end if
#end template

#template do-common-cavalry-upgrades-for-unit
  insert research-with-halt(research="ri-bloodlines",building="stable")
  insert research-with-halt(research="ri-forging",building="blacksmith")
  insert research-with-halt(research="ri-iron-casting",building="blacksmith")
  insert research-with-halt(research="ri-blast-furnace",building="blacksmith")
  #if unit-type-count-total {unit} >= {other_tech_threshold}
    insert research-with-halt(research="ri-scale-barding",building="blacksmith")
    insert research-with-halt(research="ri-chain-barding",building="blacksmith")
    insert research-with-halt(research="ri-plate-barding",building="blacksmith")
    insert research-with-halt(research="ri-husbandry",building="stable")
  #end if
#end template

#template do-common-infantry-upgrades-for-unit
  insert research-with-halt(research="ri-forging",building="blacksmith")
  insert research-with-halt(research="ri-iron-casting",building="blacksmith")
  insert research-with-halt(research="ri-blast-furnace",building="blacksmith")
  #if unit-type-count-total {unit} >= {other_tech_threshold}
    insert research-with-halt(research="ri-scale-mail",building="blacksmith")
    insert research-with-halt(research="ri-chain-mail",building="blacksmith")
    insert research-with-halt(research="ri-plate-mail",building="blacksmith")
    insert research-with-halt(research="ri-squires",building="barracks")
    insert research-with-halt(research="ri-arson",building="barracks")
  #end if
#end template

#if unit-type-count-total archer-line >= 4 and (goal archer-line-production 1 or unit-type-count-total archer-line >= 20)
  insert research-with-halt(research="ri-crossbow",building="archery-range")
  insert research-with-halt(research="ri-arbalest",building="archery-range")
  insert do-common-ranged-upgrades-for-unit(unit="archer-line",other_tech_threshold="15")
#end if

#if unit-type-count-total skirmisher-line >= 4 and (goal skirmisher-line-production 1 or unit-type-count-total skirmisher-line >= 20)
  insert research-with-halt(research="ri-elite-skirmisher",building="archery-range")
  insert do-common-ranged-upgrades-for-unit(unit="skirmisher-line",other_tech_threshold="15")
#end if

#if unit-type-count-total knight-line >= 4 and (goal knight-line-production 1 or unit-type-count-total knight-line >= 10)
  insert research-with-halt(research="ri-cavalier",building="stable")
  #if unit-type-count-total knight-line >= 20
    insert research-with-halt(research="ri-paladin",building="stable")
  #end if
  insert do-common-cavalry-upgrades-for-unit(unit="knight-line",other_tech_threshold="10")
#end if

#if unit-type-count-total scout-cavalry-line >= 4 and (goal scout-cavalry-line-production 1 or unit-type-count-total scout-cavalry-line >= 15)
  insert research-with-halt(research="ri-light-cavalry",building="stable")
  insert research-with-halt(research="ri-hussar",building="stable")
  insert do-common-cavalry-upgrades-for-unit(unit="scout-cavalry-line",other_tech_threshold="15")
#end if

#if unit-type-count-total militiaman-line >= 4 and (goal militiaman-line-production 1 or unit-type-count-total militiaman-line >= 15)
  insert research-with-halt(research="ri-man-at-arms",building="barracks")
  #if unit-type-count-total militiaman-line >= 10
    insert research-with-halt(research="ri-supplies",building="barracks")
    insert research-with-halt(research="ri-gambesons",building="barracks")
  #end if
  insert research-with-halt(research="ri-long-swordsman",building="barracks")
  insert research-with-halt(research="ri-two-handed-swordsman",building="barracks")
  insert research-with-halt(research="ri-champion",building="barracks")
  insert research-with-halt(research="ri-legionary",building="barracks")
  insert do-common-infantry-upgrades-for-unit(unit="militiaman-line",other_tech_threshold="15")
#end if

#if unit-type-count-total spearman-line >= 4 and (goal spearman-line-production 1 or unit-type-count-total spearman-line >= 15)
  insert research-with-halt(research="ri-pikeman",building="barracks")
  insert research-with-halt(research="ri-halberdier",building="barracks")
  insert do-common-infantry-upgrades-for-unit(unit="spearman-line",other_tech_threshold="15")
#end if

#if unit-type-count battering-ram-line >= 5
  research ri-capped-ram
  research ri-siege-ram
#end if

goal unit-wood = 8 // default for random buildings
goal unit-food = 18 // default for villagers
goal unit-gold = 0

#if goal battering-ram-line-production 1
  build 1 blacksmith
  //insert build-production-building(building="siege-workshop")
  build 1 siege-workshop
  insert train-unit(unit="battering-ram-line")
  //goal unit-wood += 35
  //goal unit-gold += 17
  goal unit-wood += 12
  goal unit-gold += 6
#end if

#if goal skirmisher-line-production 1
  build 1 barracks
  insert build-production-building(building="archery-range")
  insert train-unit(unit="skirmisher-line")
  goal unit-wood += 13
  goal unit-food += 11
#end if

#if goal archer-line-production 1
  build 1 barracks
  insert build-production-building(building="archery-range")
  insert train-unit(unit="archer-line")
  goal unit-wood += 6
  goal unit-gold += 11
#end if

#if goal knight-line-production 1
  build 1 barracks
  insert build-production-building(building="stable")
  insert train-unit(unit="knight-line")
  goal unit-food += 18
  goal unit-gold += 20
#end if

#if goal scout-cavalry-line-production 1
  build 1 barracks
  insert build-production-building(building="stable")
  insert train-unit(unit="scout-cavalry-line")
  goal unit-food += 24
#end if

#if goal militiaman-line-production 1
  insert build-production-building(building="barracks")
  insert train-unit(unit="militiaman-line")
  goal unit-food += 26
  goal unit-gold += 8
#end if

#if goal spearman-line-production 1
  insert build-production-building(building="barracks")
  insert train-unit(unit="spearman-line")
  goal unit-wood += 9
  goal unit-food += 15
#end if

// adjust for farm cost
goal temp = 0
@up-modify-goal temp g:= unit-food
@up-modify-goal temp c:/ 6
@up-modify-goal unit-wood g:+ temp

goal unit-resource-total = 0
@up-modify-goal unit-resource-total g:+ unit-wood
@up-modify-goal unit-resource-total g:+ unit-food
@up-modify-goal unit-resource-total g:+ unit-gold

@up-modify-goal unit-wood c:* 100
@up-modify-goal unit-food c:* 100
@up-modify-goal unit-gold c:* 100

@up-modify-goal unit-wood g:/ unit-resource-total
@up-modify-goal unit-food g:/ unit-resource-total
@up-modify-goal unit-gold g:/ unit-resource-total

@up-modify-sn sn-wood-gatherer-percentage g:= unit-wood
@up-modify-sn sn-food-gatherer-percentage g:= unit-food
@up-modify-sn sn-gold-gatherer-percentage g:= unit-gold

#if current-age-time >= 120
  build 1 market
  #if gold-amount < 2000
    sell wood when wood > 2000
    sell food when food > 2000
  #end if
  build 1 university
  build 1 monastery
  train 1 monk
#end if

#if up-research-status c: feudal-age < research-pending
  distribute villagers 20 80 0 0
#end if

#if up-research-status c: feudal-age == research-pending
  build 1 barracks
  distribute villagers 60 30 10 0
#end if

#if current-age >= feudal-age
  #do once
    goal wood-adjustment = 0
    goal food-adjustment = 0
    goal gold-adjustment = 0
  #end do

  #repeat every 60 seconds
    #if wood-amount > wood-threshold
      #if food-amount > food-threshold
        #if gold-amount > gold-threshold
          // do nothing, all above thresholds.
        #else
          chat to self "eco adjustment: wood food -> gold"
          @up-modify-goal wood-adjustment c:- 2
          @up-modify-goal food-adjustment c:- 2
          @up-modify-goal gold-adjustment c:+ 4
        #end if
      #else
        #if gold-amount > gold-threshold
          chat to self "eco adjustment: wood gold -> food"
          @up-modify-goal wood-adjustment c:- 2
          @up-modify-goal gold-adjustment c:- 2
          @up-modify-goal food-adjustment c:+ 4
        #else
          chat to self "eco adjustment: wood -> food gold"
          @up-modify-goal wood-adjustment c:- 4
          @up-modify-goal food-adjustment c:+ 2
          @up-modify-goal gold-adjustment c:+ 2
        #end if
      #end if
    #else
      #if food-amount > food-threshold
        #if gold-amount > gold-threshold
          chat to self "eco adjustment: food gold -> wood"
          @up-modify-goal food-adjustment c:- 2
          @up-modify-goal gold-adjustment c:- 2
          @up-modify-goal wood-adjustment c:+ 4
        #else
          chat to self "eco adjustment: food -> wood gold"
          @up-modify-goal food-adjustment c:- 4
          @up-modify-goal wood-adjustment c:+ 2
          @up-modify-goal gold-adjustment c:+ 2
        #end if
      #else
        #if gold-amount > gold-threshold
          chat to self "eco adjustment: gold -> wood food"
          @up-modify-goal gold-adjustment c:- 4
          @up-modify-goal wood-adjustment c:+ 2
          @up-modify-goal food-adjustment c:+ 2
        #else
          // do nothing, all below thresholds.
        #end if
      #end if
    #end if
  #end repeat

  @up-modify-sn sn-wood-gatherer-percentage g:+ wood-adjustment
  @up-modify-sn sn-food-gatherer-percentage g:+ food-adjustment
  @up-modify-sn sn-gold-gatherer-percentage g:+ gold-adjustment

  #if strategic-number sn-wood-gatherer-percentage < min-wood-percent
    goal wood-adjustment += 2
    goal food-adjustment -= 1
    goal gold-adjustment -= 1
  #end if

  #if strategic-number sn-food-gatherer-percentage < min-food-percent
    goal food-adjustment += 2
    goal wood-adjustment -= 1
    goal gold-adjustment -= 1
  #end if

  #if strategic-number sn-gold-gatherer-percentage < min-gold-percent
    goal gold-adjustment += 2
    goal wood-adjustment -= 1
    goal food-adjustment -= 1
  #end if

  //chat sn to all "wood: %d" sn-wood-gatherer-percentage
  //chat sn to all "food: %d" sn-food-gatherer-percentage
  //chat sn to all "gold: %d" sn-gold-gatherer-percentage
#end if

goal my-military-population = 0
goal their-military-population = 0
@up-get-fact military-population 0 my-military-population
@up-get-player-fact target-player military-population 0 their-military-population

#if military-population >= 5 and up-compare-goal my-military-population g:> their-military-population
  sn-number-attack-groups = 200
#else
  sn-number-attack-groups = 0
#end if

#template keep-away
  #if unit-type-count {unit} >= 1
    keep {unit} 12 tiles away from enemy town-center
    keep {unit} 15 tiles away from enemy castle
  #end if
#end template

#if military-population < 40
  insert unit-names(before="insert keep-away(unit=\"",after="\")")
#end if

#if current-age >= feudal-age
  #do once
    scout enemy
  #end do
#end if

#if town-under-attack and military-population < 15
  @up-gather-inside c: archery-range c: 1
  @up-gather-inside c: barracks c: 1
  @up-gather-inside c: stable c: 1
#end if   

#if military-population >= 15 or up-compare-goal my-military-population g:> their-military-population
  @up-gather-inside c: archery-range c: 0
  @up-gather-inside c: barracks c: 0
  @up-gather-inside c: stable c: 0
#end if

auto expand town size to 30
