const object-data-train-site = 56
const object-data-train-time = 57

const male-gold-miner = 579
const female-gold-miner = 581

const wood-threshold = 300
const food-threshold = 300
const gold-threshold = 300

const min-wood-percent = 10
const min-food-percent = 10
const min-gold-percent = 10

#do once
  set name to "Artemis"
  set up basics
  
  assign 8 builders to town-center-foundation
  assign 2 builders to barracks
  assign 2 builders to archery-range
  assign 2 builders to stable
  
  goal temp = 0
#end do

load "templates/basic_diplomacy.aoe2ai"

#template unit-names
  {before}archer-line{after}
  {before}skirmisher-line{after}
  {before}knight-line{after}
  {before}scout-cavalry-line{after}
  {before}militiaman-line{after}
  {before}spearman-line{after}
#end template

#template units-that-are-trash
  {before}skirmisher-line{after}
  {before}scout-cavalry-line{after}
  {before}spearman-line{after}
#end template

#template units-with-ranged-blacksmith-benefit
  {before}archer-line{after}
  {before}skirmisher-line{after}
#end template

#template units-with-cavalry-blacksmith-benefit
  {before}knight-line{after}
  {before}scout-cavalry-line{after}
#end template

#template units-with-infantry-blacksmith-benefit
  {before}militiaman-line{after}
  {before}spearman-line{after}
#end template

#template units-with-thumb-ring-benefit
  {before}archer-line{after}
  {before}skirmisher-line{after}
#end template

#template units-with-ballistics-benefit
  {before}archer-line{after}
  {before}skirmisher-line{after}
#end template

#template units-with-bloodlines-and-husbandry-benefit
  {before}knight-line{after}
  {before}scout-cavalry-line{after}
#end template

#template units-with-arson-benefit
  {before}militiaman-line{after}
  {before}spearman-line{after}
#end template

#template units-with-squires-benefit
  {before}militiaman-line{after}
  {before}spearman-line{after}
#end template

#template reset-unit-scores
  insert unit-names(before="goal ",after="-score = 0")
#end template

#template clear-production-goals
  goal villager-production = 0
  insert unit-names(before="goal ",after="-production = 0")
  goal battering-ram-line-production = 0
  goal armored-elephant-line-production = 0
#end template

#template modify-score-for-player-unit
  goal score-modifier = 0
  @up-get-player-fact {player} unit-type-count {unit} score-modifier
  @up-modify-goal score-modifier c:* {severity}
  @up-modify-goal score-modifier c:/ 15
  @up-modify-goal {score_goal} g:{sign} score-modifier
#end template

#template do-unit-countered-score
  insert modify-score-for-player-unit(player="target-player",unit="{unit}",score_goal="{score_goal}",sign="-",severity="{severity}")
#end template

#template do-unit-counter-score
  insert modify-score-for-player-unit(player="target-player",unit="{unit}",score_goal="{score_goal}",sign="+",severity="{severity}")
#end template

const critical-research-available-modifier = 99999
const important-research-available-modifier = 30
const medium-research-available-modifier = 20
const low-research-available-modifier = 10

const small-investment-modifier = 2
const medium-investment-modifier = 4
const large-investment-modifier = 8

const minor-counter-modifier = 10
const major-counter-modifier = 20

const trash-bias = 10

insert reset-unit-scores

goal archer-line-score += 5
insert units-that-are-trash(before="goal ",after="-score -= trash-bias")

insert clear-production-goals

// ranged blacksmith availability scoring

#if research-completed feudal-age and not research-available ri-fletching and up-research-status c: ri-fletching < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed feudal-age and not research-available ri-padded-archer-armor and up-research-status c: ri-padded-archer-armor < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed castle-age and not research-available ri-bodkin-arrow and up-research-status c: ri-bodkin-arrow < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed castle-age and not research-available ri-leather-archer-armor and up-research-status c: ri-leather-archer-armor < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed imperial-age and not research-available ri-bracer and up-research-status c: ri-bracer < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed imperial-age and not research-available ri-ring-archer-armor and up-research-status c: ri-ring-archer-armor < research-pending
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

// cavalry blacksmith availability scoring

#if research-completed feudal-age and not research-available ri-scale-barding and up-research-status c: ri-scale-barding < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed castle-age and not research-available ri-chain-barding and up-research-status c: ri-chain-barding < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed imperial-age and not research-available ri-plate-barding and up-research-status c: ri-plate-barding < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

// infantry blacksmith availability scoring

#if research-completed feudal-age and not research-available ri-scale-mail and up-research-status c: ri-scale-mail < research-pending
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed castle-age and not research-available ri-chain-mail and up-research-status c: ri-chain-mail < research-pending
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if not civ-selected romans
  #if research-completed imperial-age and not research-available ri-plate-mail and up-research-status c: ri-plate-mail < research-pending
    insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
  #end if
#end if

// cavalry+infantry blacksmith availability scoring

#if research-completed feudal-age and not research-available ri-forging and up-research-status c: ri-forging < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed castle-age and not research-available ri-iron-casting and up-research-status c: ri-iron-casting < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

#if research-completed imperial-age and not research-available ri-blast-furnace and up-research-status c: ri-blast-furnace < research-pending
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if

// ranged blacksmith completed scoring

#if research-completed ri-fletching
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-padded-archer-armor
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-bodkin-arrow
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-leather-archer-armor
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-bracer
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-ring-archer-armor
  insert units-with-ranged-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// cavalry blacksmith completed scoring

#if research-completed ri-scale-barding
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-chain-barding
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-plate-barding
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// infantry blacksmith completed scoring

#if research-completed ri-scale-mail
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-chain-mail
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-plate-mail
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// cavalry+infantry blacksmith completed scoring

#if research-completed ri-forging
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-iron-casting
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

#if research-completed ri-blast-furnace
  insert units-with-cavalry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
  insert units-with-infantry-blacksmith-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// other techs - ranged

// thumb ring
#if not civ-selected briton
  #if research-completed castle-age and not research-available ri-thumb-ring and up-research-status c: ri-thumb-ring < research-pending
    insert units-with-thumb-ring-benefit(before="goal ",after="-score -= medium-research-available-modifier")
  #end if
  #if research-completed ri-thumb-ring
    insert units-with-thumb-ring-benefit(before="goal ",after="-score += small-investment-modifier")
  #end if
#end if

// ballistics
#if research-completed castle-age and not research-available ri-ballistics and up-research-status c: ri-ballistics < research-pending
  insert units-with-ballistics-benefit(before="goal ",after="-score -= important-research-available-modifier")
#end if
#if research-completed ri-ballistics
  insert units-with-ballistics-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// crossbow
#if research-completed castle-age and not research-available ri-crossbow and up-research-status c: ri-crossbow < research-pending
  goal archer-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-crossbow
  goal archer-line-score += small-investment-modifier
#end if

// arbalest
#if research-completed imperial-age and not research-available ri-arbalest and up-research-status c: ri-arbalest < research-pending
  goal archer-line-score -= important-research-available-modifier
#end if
#if research-completed ri-arbalest
  goal archer-line-score += medium-investment-modifier
#end if

// elite skirmisher
#if research-completed castle-age and not research-available ri-elite-skirmisher and up-research-status c: ri-elite-skirmisher < research-pending
  goal skirmisher-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-elite-skirmisher
  goal skirmisher-line-score += small-investment-modifier
#end if

// other techs - cavalry

// bloodlines
#if not civ-selected frankish
  #if research-completed feudal-age and not research-available ri-bloodlines and up-research-status c: ri-bloodlines < research-pending
    insert units-with-bloodlines-and-husbandry-benefit(before="goal ",after="-score -= important-research-available-modifier")
  #end if
  #if research-completed ri-bloodlines
    insert units-with-bloodlines-and-husbandry-benefit(before="goal ",after="-score += small-investment-modifier")
  #end if
#end if

// husbandry
#if research-completed feudal-age and not research-available ri-husbandry and up-research-status c: ri-husbandry < research-pending
  insert units-with-bloodlines-and-husbandry-benefit(before="goal ",after="-score -= medium-research-available-modifier")
#end if
#if research-completed ri-husbandry
  insert units-with-bloodlines-and-husbandry-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// cavalier
#if research-completed imperial-age and not research-available ri-cavalier and up-research-status c: ri-cavalier < research-pending
  goal knight-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-cavalier
  goal knight-line-score += medium-investment-modifier
#end if

// paladin
#if research-completed ri-cavalier and research-completed imperial-age and not research-available ri-paladin and up-research-status c: ri-paladin < research-pending
  goal knight-line-score -= medium-research-available-modifier
#end if
#if research-completed ri-paladin
  goal knight-line-score += large-investment-modifier
#end if

// light cavalry
#if research-completed castle-age and not research-available ri-light-cavalry and up-research-status c: ri-light-cavalry < research-pending
  goal scout-cavalry-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-light-cavalry
  goal scout-cavalry-line-score += small-investment-modifier
#end if

#if not civ-selected lithuanians and not civ-selected poles
  // hussar
  #if research-completed ri-light-cavalry and research-completed imperial-age and not research-available ri-hussar and up-research-status c: ri-hussar < research-pending
    goal scout-cavalry-line-score -= critical-research-available-modifier
  #end if
  #if research-completed ri-hussar
    goal scout-cavalry-line-score += large-investment-modifier
  #end if
#else
  // winged hussar
  #if research-completed ri-light-cavalry and research-completed imperial-age and not research-available ri-winged-hussar and up-research-status c: ri-winged-hussar < research-pending
    goal scout-cavalry-line-score -= critical-research-available-modifier
  #end if
  #if research-completed ri-winged-hussar
    goal scout-cavalry-line-score += large-investment-modifier
  #end if
#end if

// other techs - infantry

#if not civ-selected gothic
  // supplies
  #if research-completed feudal-age and not research-available ri-supplies and up-research-status c: ri-supplies < research-pending
    goal militiaman-line-score -= important-research-available-modifier
  #end if
  #if research-completed ri-supplies
    goal militiaman-line-score += small-investment-modifier
  #end if
  
  // gambesons
  #if research-completed ri-supplies and research-completed castle-age and not research-available ri-gambesons and up-research-status c: ri-gambesons < research-pending
    goal militiaman-line-score -= medium-research-available-modifier
  #end if
  #if research-completed ri-gambesons
    goal militiaman-line-score += small-investment-modifier
  #end if
#end if

// squires
#if research-completed castle-age and not research-available ri-squires and up-research-status c: ri-squires < research-pending
  insert units-with-squires-benefit(before="goal ",after="-score -= low-research-available-modifier")
#end if
#if research-completed ri-squires
  insert units-with-squires-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// arson
#if research-completed castle-age and not research-available ri-arson and up-research-status c: ri-arson < research-pending
  insert units-with-arson-benefit(before="goal ",after="-score -= low-research-available-modifier")
#end if
#if research-completed ri-arson
  insert units-with-arson-benefit(before="goal ",after="-score += small-investment-modifier")
#end if

// man at arms
#if research-completed feudal-age and not research-available ri-man-at-arms and up-research-status c: ri-man-at-arms < research-pending
  goal militiaman-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-man-at-arms
  goal militiaman-line-score += small-investment-modifier
#end if

// long swordsman
#if research-completed ri-man-at-arms and research-completed castle-age and not research-available ri-long-swordsman and up-research-status c: ri-long-swordsman < research-pending
  goal militiaman-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-long-swordsman
  goal militiaman-line-score += small-investment-modifier
#end if

// two handed swordsman
#if not civ-selected romans
  #if research-completed ri-long-swordsman and research-completed imperial-age and not research-available ri-two-handed-swordsman and up-research-status c: ri-two-handed-swordsman < research-pending
    goal militiaman-line-score -= critical-research-available-modifier
  #end if
  #if research-completed ri-two-handed-swordsman
    goal militiaman-line-score += medium-investment-modifier
  #end if
#end if

// champion
#if not civ-selected romans
  #if research-completed ri-two-handed-swordsman and research-completed imperial-age and not research-available ri-champion and up-research-status c: ri-champion < research-pending
    goal militiaman-line-score -= critical-research-available-modifier
  #end if
  #if research-completed ri-champion
    goal militiaman-line-score += large-investment-modifier
  #end if
#end if

// legionary
#if civ-selected romans
  #if research-completed ri-long-swordsman and research-completed imperial-age and not research-available ri-legionary and up-research-status c: ri-legionary < research-pending
    goal militiaman-line-score -= critical-research-available-modifier
  #end if
  #if research-completed ri-legionary
    goal militiaman-line-score += large-investment-modifier
  #end if
#end if

// pikeman
#if research-completed castle-age and not research-available ri-pikeman and up-research-status c: ri-pikeman < research-pending
  goal spearman-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-pikeman
  goal spearman-line-score += small-investment-modifier
#end if

// halberdier
#if research-completed ri-pikeman and research-completed imperial-age and not research-available ri-halberdier and up-research-status c: ri-halberdier < research-pending
  goal spearman-line-score -= critical-research-available-modifier
#end if
#if research-completed ri-halberdier
  goal spearman-line-score += large-investment-modifier
#end if

// counters

// skirmishers
insert do-unit-countered-score(score_goal="archer-line-score",unit="skirmisher-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="skirmisher-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="skirmisher-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="skirmisher-line",severity="major-counter-modifier")

// archers
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="archer-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="archer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="archer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="archer-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="archer-line",severity="minor-counter-modifier")

// cavalry archers
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="cavalry-archer-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="cavalry-archer-line",severity="major-counter-modifier")

// elephant archers
insert do-unit-countered-score(score_goal="archer-line-score",unit="elephant-archer-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="elephant-archer-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="elephant-archer-line",severity="minor-counter-modifier")

// hand cannoneers
insert do-unit-countered-score(score_goal="militiaman-line",unit="hand-cannoneer",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line",unit="hand-cannoneer",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line",unit="hand-cannoneer",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line",unit="hand-cannoneer",severity="major-counter-modifier")

// militia
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="militiaman-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="militiaman-line",severity="major-counter-modifier")

// spearman
insert do-unit-countered-score(score_goal="knight-line-score",unit="spearman-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="scout-cavalry-line-score",unit="spearman-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="spearman-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="spearman-line",severity="major-counter-modifier")

// eagles
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="eagle-warrior-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="archer-line-score",unit="eagle-warrior-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="militiaman-line-score",unit="eagle-warrior-line",severity="major-counter-modifier")

// scouts
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="scout-cavalry-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="archer-line-score",unit="scout-cavalry-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="scout-cavalry-line",severity="major-counter-modifier")

// knights
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="knight-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="archer-line-score",unit="knight-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="knight-line",severity="major-counter-modifier")

// camels
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="camel-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="knight-line-score",unit="camel-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="scout-cavalry-line-score",unit="camel-line",severity="major-counter-modifier")

// battle elephants
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="battle-elephant-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="archer-line-score",unit="battle-elephant-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="battle-elephant-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line",unit="battle-elephant-line",severity="major-counter-modifier")

// steppe lancers
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="steppe-lancer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="steppe-lancer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="steppe-lancer-line",severity="major-counter-modifier")

// mangonels
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="mangonel-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="archer-line-score",unit="mangonel-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="mangonel-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="mangonel-line",severity="major-counter-modifier")

// scorpions
insert do-unit-countered-score(score_goal="archer-line-score",unit="scorpion-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="scorpion-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="scorpion-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="scorpion-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="scorpion-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="scorpion-line",severity="major-counter-modifier")

// monks
insert do-unit-countered-score(score_goal="knight-line-score",unit="monk-set",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="monk-set",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="monk-set",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="monk-set",severity="minor-counter-modifier")

// counters - UU

// jaguar warriors
insert do-unit-countered-score(score_goal="spearman-line-score",unit="jaguar-man-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="jaguar-man-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="jaguar-man-line",severity="major-counter-modifier")

// ratha
insert do-unit-countered-score(score_goal="spearman-line-score",unit="ratha-set",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="ratha-set",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="ratha-set",severity="major-counter-modifier")

// camel archers
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="camel-archer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="camel-archer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="camel-archer-line",severity="major-counter-modifier")

// hussite wagons
insert do-unit-countered-score(score_goal="archer-line-score",unit="hussite-wagon-line",severity="major-counter-modifier")

// longbows
insert do-unit-countered-score(score_goal="spearman-line-score",unit="longbowman-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="longbowman-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="longbowman-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="longbowman-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="longbowman-line",severity="major-counter-modifier")

// konnik
insert do-unit-countered-score(score_goal="spearman-line-score",unit="konnik-set",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="konnik-set",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="archer-line-score",unit="konnik-set",severity="major-counter-modifier")

// coustillier
insert do-unit-countered-score(score_goal="spearman-line-score",unit="coustillier-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="coustillier-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="archer-line-score",unit="coustillier-line",severity="major-counter-modifier")

// arambai
// not sure I care.

// cataphract
insert do-unit-countered-score(score_goal="spearman-line-score",unit="cataphract-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="cataphract-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="cataphract-line",severity="minor-counter-modifier")

// woad raiders
insert do-unit-countered-score(score_goal="spearman-line-score",unit="woad-raider-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="woad-raider-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="woad-raider-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="woad-raider-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="woad-raider-line",severity="minor-counter-modifier")

// chu ko nu
insert do-unit-countered-score(score_goal="spearman-line-score",unit="chu-ko-nu-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="chu-ko-nu-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="chu-ko-nu-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="chu-ko-nu-line",severity="minor-counter-modifier")

// kipchak
insert do-unit-countered-score(score_goal="spearman-line-score",unit="kipchak-set",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="kipchak-set",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="kipchak-set",severity="major-counter-modifier")

// urumi swordsman
insert do-unit-countered-score(score_goal="spearman-line-score",unit="urumi-swordsman-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="urumi-swordsman-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="urumi-swordsman-line",severity="major-counter-modifier")

// shotel warriors
insert do-unit-countered-score(score_goal="spearman-line-score",unit="shotel-warrior-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="shotel-warrior-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="shotel-warrior-line",severity="major-counter-modifier")

// throwing axe people
insert do-unit-countered-score(score_goal="spearman-line-score",unit="throwing-axeman-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="throwing-axeman-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="throwing-axeman-line",severity="major-counter-modifier")

// huskarls
insert do-unit-countered-score(score_goal="archer-line-score",unit="huskarl-set",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="huskarl-set",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="huskarl-set",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="huskarl-set",severity="minor-counter-modifier")

// Qi'Tara
insert do-unit-countered-score(score_goal="spearman-line-score",unit="chakram-thrower-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="chakram-thrower-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="chakram-thrower-line",severity="major-counter-modifier")

// ghulam
insert do-unit-countered-score(score_goal="archer-line-score",unit="ghulam-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="ghulam-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="ghulam-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="ghulam-line",severity="minor-counter-modifier")

// tarkan
insert do-unit-countered-score(score_goal="archer-line-score",unit="tarkan-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="tarkan-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="tarkan-line",severity="major-counter-modifier")

// kamayuk
insert do-unit-countered-score(score_goal="knight-line-score",unit="kamayuk-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="scout-cavalry-line-score",unit="kamayuk-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="kamayuk-line",severity="major-counter-modifier")

// genoese crossbows
insert do-unit-countered-score(score_goal="knight-line-score",unit="genoese-crossbowman-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="scout-cavalry-line-score",unit="genoese-crossbowman-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="genoese-crossbowman-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="genoese-crossbowman-line",severity="major-counter-modifier")

// samurai
insert do-unit-counter-score(score_goal="archer-line-score",unit="samurai-line",severity="minor-counter-modifier")

// ballista elephant
insert do-unit-countered-score(score_goal="spearman-line-score",unit="ballista-elephant-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="ballista-elephant-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="archer-line-score",unit="ballista-elephant-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="ballista-elephant-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="ballista-elephant-line",severity="major-counter-modifier")

// war wagon
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="war-wagon-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="archer-line-score",unit="war-wagon-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="war-wagon-line",severity="major-counter-modifier")

// leitis
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="leitis-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="knight-line-score",unit="leitis-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="leitis-line",severity="major-counter-modifier")

// magyar huszar
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="magyar-huszar-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="archer-line-score",unit="magyar-huszar-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="magyar-huszar-line",severity="major-counter-modifier")

// karambit warrior
insert do-unit-counter-score(score_goal="archer-line-score",unit="karambit-warrior-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="karambit-warrior-line",severity="minor-counter-modifier")

// gbeto
insert do-unit-countered-score(score_goal="spearman-line-score",unit="gbeto-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="gbeto-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="gbeto-line",severity="major-counter-modifier")

// plumed archer
insert do-unit-countered-score(score_goal="archer-line-score",unit="plumed-archer-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="plumed-archer-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="plumed-archer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="plumed-archer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="plumed-archer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="plumed-archer-line",severity="major-counter-modifier")

// mangudai
insert do-unit-countered-score(score_goal="archer-line-score",unit="mangudai-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="mangudai-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="mangudai-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="mangudai-line",severity="major-counter-modifier")

// war elephant
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="war-elephant-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="war-elephant-line",severity="minor-counter-modifier")

// obuch
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="obuch-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="obuch-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="obuch-line",severity="major-counter-modifier")

// organ gun
// not sure I care.

// centurion
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="centurion-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="centurion-line",severity="major-counter-modifier")

// mameluke
insert do-unit-countered-score(score_goal="knight-line-score",unit="mameluke-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="scout-cavalry-line-score",unit="mameluke-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="mameluke-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="mameluke-line",severity="minor-counter-modifier")

// serjeant
insert do-unit-counter-score(score_goal="archer-line-score",unit="serjeant-set",severity="minor-counter-modifier")

// boyar
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="boyar-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="boyar-line",severity="major-counter-modifier")

// conquistador
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="conquistador-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="conquistador-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="conquistador-line",severity="minor-counter-modifier")

// keshik
insert do-unit-countered-score(score_goal="skirmisher-line-score",unit="keshik-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="spearman-line-score",unit="keshik-line",severity="major-counter-modifier")

// teutonic knight
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="teutonic-knight-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="teutonic-knight-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="knight-line-score",unit="teutonic-knight-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="scout-cavalry-line-score",unit="teutonic-knight-line",severity="minor-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="teutonic-knight-line",severity="major-counter-modifier")

// janissary
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="janissary-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="janissary-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="janissary-line",severity="major-counter-modifier")

// rattan archers
insert do-unit-countered-score(score_goal="archer-line-score",unit="rattan-archer-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="rattan-archer-line",severity="major-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="rattan-archer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="knight-line-score",unit="rattan-archer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="scout-cavalry-line-score",unit="rattan-archer-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="skirmisher-line-score",unit="rattan-archer-line",severity="major-counter-modifier")

// berserks
insert do-unit-countered-score(score_goal="militiaman-line-score",unit="berserk-line",severity="minor-counter-modifier")
insert do-unit-countered-score(score_goal="spearman-line-score",unit="berserk-line",severity="major-counter-modifier")
insert do-unit-counter-score(score_goal="archer-line-score",unit="berserk-line",severity="major-counter-modifier")

// filter off impossible units

#template tank-score-if-not-available
  #if not unit-available {unit}
    goal {unit}-score = -99999
  #end if
#end template

insert unit-names(before="insert tank-score-if-not-available(unit=\"",after="\")")

// get top unit

goal top-unit-score = -99999
goal top-unit = -1
goal second-unit-score = -99999
goal second-unit = -1

#template find-top-fragment
  #if up-compare-goal {unit}-score g:> top-unit-score
    @up-modify-goal top-unit-score g:= {unit}-score
    goal top-unit = {unit}
  #else if up-compare-goal {unit}-score g:> second-unit-score and not goal top-unit {unit}
    @up-modify-goal second-unit-score g:= {unit}-score
    goal second-unit = {unit}
  #end if
#end template

#template find-top-unit
  insert unit-names(before="insert find-top-fragment(unit=\"",after="\")")
#end template

insert find-top-unit

// now for the actual bot that plays the game

#do once
  goal production-scale = 2
#end do

goal halt-production = 0

#template train-unit-internal
  #if goal {unit}-production {number} and up-pending-objects c: {unit} < {number}
    train {unit}
  #end if
#end template

#template train-unit
  #if goal halt-production 0
    insert train-unit-internal(unit="{unit}",number=1)
    insert train-unit-internal(unit="{unit}",number=2)
    insert train-unit-internal(unit="{unit}",number=3)
    insert train-unit-internal(unit="{unit}",number=4)
    insert train-unit-internal(unit="{unit}",number=5)
    insert train-unit-internal(unit="{unit}",number=6)
    insert train-unit-internal(unit="{unit}",number=7)
    insert train-unit-internal(unit="{unit}",number=8)
  #end if
#end template

#template build-production-building-internal
  #if goal {production_goal} {amount}
    #if up-can-build 0 g: {building_id_goal} and up-object-type-count-total g: {building_id_goal} < {amount}
      @up-build place-normal 0 g: {building_id_goal}
    #end if
  #end if
#end template

#template build-production-building
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=1)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=2)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=3)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=4)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=5)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=6)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=7)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=8)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=9)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=10)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=11)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=12)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=13)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=14)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=15)
  insert build-production-building-internal(production_goal="{production_goal}",building_id_goal="{building_id_goal}",amount=16)
#end template

#template research-with-halt
  build 1 {building}
  #if research-available {research} and building-type-count {building} >= 1 and up-research-status c: {research} < research-pending
    research {research}
    goal halt-production = 1
  #end if
#end template

#do once
  #if current-age == dark-age
    goal production-scale = 0
  #else if current-age == feudal-age
    goal production-scale = 2
  #else if current-age == castle-age
    goal production-scale = 3
  #else if current-age == imperial-age
    goal production-scale = 5
  #end if
#end do

manage scouting
do basic targeting
micro sheep
lure boars
#if game-time < 600
  push deer
#end if

#if building-type-count-total town-center == 0
  build 1 town-center
#end if

build lumber camps
build mule carts
micro mule carts
#if building-type-count-total lumber-camp >= 1 or building-type-count-total mule-cart >= 1
  build mills
#end if
#if building-type-count house == 0
  #do once
    assign 2 builders to house
  #end do
#else
  #do once
    assign 1 builder to house
  #end do
#end if
build houses

#if wood-amount >= 200
  build farms
#end if

#if strategic-number sn-gold-gatherer-percentage > 0
  #when
    build gold mining camps
  #then
    sn-camp-max-distance += 3
  #end when
#end if

#if strategic-number sn-stone-gatherer-percentage > 0
  #when
    build stone mining camps
  #then
    sn-camp-max-distance += 1
  #end when
#end if

research feudal-age
research castle-age
research imperial-age

#if current-age-time >= 120
  research ri-horse-collar
  research ri-heavy-plow
  research ri-crop-rotation
  research ri-double-bit-axe
  research ri-bow-saw
  research ri-two-man-saw
  
  goal gold-miners = 0
  goal temp = 0
  @up-get-fact unit-type-count male-gold-miner gold-miners
  @up-get-fact unit-type-count female-gold-miner temp
  @up-modify-goal gold-miners g:+ temp
  #if up-compare-goal gold-miners c:>= 12
    research ri-gold-mining
  #end if
  #if up-compare-goal gold-miners c:>= 20
    research ri-gold-shaft-mining
  #end if
  
  #if unit-type-count villager >= 50
    research ri-wheel-barrow
  #end if
  #if unit-type-count villager >= 80
    research ri-hand-cart
  #end if
#end if

// it's unit decision time

#template make-unit-if-top
  #if goal top-unit {unit}
    @up-modify-goal {unit}-production g:= production-scale
  #end if
  #if current-age >= castle-age and goal second-unit {unit}
    @up-modify-goal {unit}-production g:= production-scale
  #end if
#end template

#if unit-available battering-ram-line and unit-type-count-total battering-ram-line < 10 and up-pending-objects c: battering-ram-line == 0 and military-population >= 20
  goal battering-ram-line-production = 1
#else if unit-available armored-elephant-line and unit-type-count-total armored-elephant-line < 10 and up-pending-objects c: armored-elephant-line == 0 and military-population >= 20
  goal armored-elephant-line-production = 1
#else
  insert unit-names(before="insert make-unit-if-top(unit=\"",after="\")")
#end if

#if unit-type-count-total villager < 120
  #if current-age <= feudal-age
    goal villager-production = 1
  #else
    goal villager-production = 3
  #end if
#end if

// it's research time

#if current-age >= feudal-age
  research ri-loom
#end if

#template do-common-ranged-upgrades-for-unit
  insert research-with-halt(research="ri-fletching",building="blacksmith")
  insert research-with-halt(research="ri-bodkin-arrow",building="blacksmith")
  insert research-with-halt(research="ri-bracer",building="blacksmith")
  #if unit-type-count-total {unit} >= {other_tech_threshold} or current-age == imperial-age
    insert research-with-halt(research="ri-padded-archer-armor",building="blacksmith")
    insert research-with-halt(research="ri-leather-archer-armor",building="blacksmith")
  #end if
  #if unit-type-count-total {unit} >= {other_tech_threshold}
    insert research-with-halt(research="ri-thumb-ring",building="archery-range")
    insert research-with-halt(research="ri-ballistics",building="university")
    insert research-with-halt(research="ri-ring-archer-armor",building="blacksmith")
  #end if
#end template

#template do-common-cavalry-upgrades-for-unit
  insert research-with-halt(research="ri-bloodlines",building="stable")
  insert research-with-halt(research="ri-forging",building="blacksmith")
  insert research-with-halt(research="ri-iron-casting",building="blacksmith")
  insert research-with-halt(research="ri-blast-furnace",building="blacksmith")
  #if unit-type-count-total {unit} >= {other_tech_threshold}
    insert research-with-halt(research="ri-scale-barding",building="blacksmith")
    insert research-with-halt(research="ri-chain-barding",building="blacksmith")
    insert research-with-halt(research="ri-plate-barding",building="blacksmith")
    insert research-with-halt(research="ri-husbandry",building="stable")
  #end if
#end template

#template do-common-infantry-upgrades-for-unit
  insert research-with-halt(research="ri-forging",building="blacksmith")
  insert research-with-halt(research="ri-iron-casting",building="blacksmith")
  insert research-with-halt(research="ri-blast-furnace",building="blacksmith")
  #if unit-type-count-total {unit} >= {other_tech_threshold}
    insert research-with-halt(research="ri-scale-mail",building="blacksmith")
    insert research-with-halt(research="ri-chain-mail",building="blacksmith")
    insert research-with-halt(research="ri-plate-mail",building="blacksmith")
    insert research-with-halt(research="ri-squires",building="barracks")
    insert research-with-halt(research="ri-arson",building="barracks")
  #end if
#end template

#if unit-type-count-total archer-line >= 4 and (not goal archer-line-production 0 or unit-type-count-total archer-line >= 20)
  insert research-with-halt(research="ri-crossbow",building="archery-range")
  insert research-with-halt(research="ri-arbalest",building="archery-range")
  insert do-common-ranged-upgrades-for-unit(unit="archer-line",other_tech_threshold="15")
#end if

#if unit-type-count-total skirmisher-line >= 4 and (not goal skirmisher-line-production 0 or unit-type-count-total skirmisher-line >= 20)
  insert research-with-halt(research="ri-elite-skirmisher",building="archery-range")
  insert do-common-ranged-upgrades-for-unit(unit="skirmisher-line",other_tech_threshold="15")
#end if

#if unit-type-count-total knight-line >= 4 and (not goal knight-line-production 0 or unit-type-count-total knight-line >= 10)
  insert research-with-halt(research="ri-cavalier",building="stable")
  #if unit-type-count-total knight-line >= 20
    insert research-with-halt(research="ri-paladin",building="stable")
  #end if
  insert do-common-cavalry-upgrades-for-unit(unit="knight-line",other_tech_threshold="10")
#end if

#if unit-type-count-total scout-cavalry-line >= 4 and (not goal scout-cavalry-line-production 0 or unit-type-count-total scout-cavalry-line >= 15)
  insert research-with-halt(research="ri-light-cavalry",building="stable")
  insert research-with-halt(research="ri-hussar",building="stable")
  insert do-common-cavalry-upgrades-for-unit(unit="scout-cavalry-line",other_tech_threshold="15")
#end if

#if unit-type-count-total militiaman-line >= 4 and (not goal militiaman-line-production 0 or unit-type-count-total militiaman-line >= 15)
  insert research-with-halt(research="ri-man-at-arms",building="barracks")
  #if unit-type-count-total militiaman-line >= 10
    insert research-with-halt(research="ri-supplies",building="barracks")
    insert research-with-halt(research="ri-gambesons",building="barracks")
  #end if
  insert research-with-halt(research="ri-long-swordsman",building="barracks")
  insert research-with-halt(research="ri-two-handed-swordsman",building="barracks")
  insert research-with-halt(research="ri-champion",building="barracks")
  insert research-with-halt(research="ri-legionary",building="barracks")
  insert do-common-infantry-upgrades-for-unit(unit="militiaman-line",other_tech_threshold="15")
#end if

#if unit-type-count-total spearman-line >= 4 and (not goal spearman-line-production 0 or unit-type-count-total spearman-line >= 15)
  insert research-with-halt(research="ri-pikeman",building="barracks")
  insert research-with-halt(research="ri-halberdier",building="barracks")
  insert do-common-infantry-upgrades-for-unit(unit="spearman-line",other_tech_threshold="15")
#end if

#if unit-type-count battering-ram-line >= 5
  research ri-capped-ram
  research ri-siege-ram
#end if

#if unit-type-count armored-elephant-line >= 5
  research ri-siege-elephant
#end if

goals unit-food, unit-wood, unit-stone, unit-gold = 0
goals tfood, twood, tstone, tgold = 0

#template do-production
  #if not goal {unit}-production 0
  
    goal building-id = -1
    goal train-time = 1
    @up-get-object-type-data c: {unit} object-data-train-site building-id
    @up-get-object-type-data c: {unit} object-data-train-time train-time
    
    insert build-production-building(production_goal="{unit}-production",building_id_goal="building-id")
    insert train-unit(unit="{unit}")
    
    @up-setup-cost-data 1 tfood
    @up-add-object-cost c: {unit} g: {unit}-production
    @up-modify-goal tfood g:* {unit}-production
    @up-modify-goal twood g:* {unit}-production
    @up-modify-goal tstone g:* {unit}-production
    @up-modify-goal tgold g:* {unit}-production
    @up-modify-goal tfood c:* 5000
    @up-modify-goal twood c:* 5000
    @up-modify-goal tstone c:* 5000
    @up-modify-goal tgold c:* 5000
    @up-modify-goal tfood g:/ train-time
    @up-modify-goal twood g:/ train-time
    @up-modify-goal tstone g:/ train-time
    @up-modify-goal tgold g:/ train-time
    @up-modify-goal unit-food g:+ tfood
    @up-modify-goal unit-wood g:+ twood
    @up-modify-goal unit-stone g:+ tstone
    @up-modify-goal unit-gold g:+ tgold
  #end if
#end template

insert do-production(unit="villager")
#if up-pending-objects c: villager == 0
  research ri-loom
#end if
insert do-production(unit="battering-ram-line")
insert do-production(unit="armored-elephant-line")
insert unit-names(before="insert do-production(unit=\"",after="\")")

//chat goal to all "unitwood: %d" unit-wood
//chat goal to all "unitfood: %d" unit-food
//chat goal to all "unitgold: %d" unit-gold
//chat goal to all "unitstone: %d" unit-stone

// gold collects quickly, reduce its influence
@up-modify-goal unit-gold c:/ 3

// adjust for farm cost
goal temp = 0
@up-modify-goal temp g:= unit-food
@up-modify-goal temp c:/ 6
@up-modify-goal unit-wood g:+ temp

goal unit-resource-total = 0
@up-modify-goal unit-resource-total g:+ unit-wood
@up-modify-goal unit-resource-total g:+ unit-food
@up-modify-goal unit-resource-total g:+ unit-gold

@up-modify-goal unit-wood c:* 100
@up-modify-goal unit-food c:* 100
@up-modify-goal unit-gold c:* 100

@up-modify-goal unit-wood g:/ unit-resource-total
@up-modify-goal unit-food g:/ unit-resource-total
@up-modify-goal unit-gold g:/ unit-resource-total

@up-modify-sn sn-wood-gatherer-percentage g:= unit-wood
@up-modify-sn sn-food-gatherer-percentage g:= unit-food
@up-modify-sn sn-gold-gatherer-percentage g:= unit-gold

#if current-age-time >= 300
  build 1 market
  #if gold-amount < 2000
    sell wood when wood > 2000
    sell food when food > 2000
  #else
    buy food when food < 300
    buy wood when wood < 300
  #end if
  build 1 university
  build 1 monastery
  train 1 monk
#end if

#if up-research-status c: feudal-age >= research-pending
  build 1 barracks
#end if

#if current-age >= feudal-age
  #do once
    goal wood-adjustment = 0
    goal food-adjustment = 0
    goal gold-adjustment = 0
  #end do

  #repeat every 60 seconds
    #if wood-amount > wood-threshold
      #if food-amount > food-threshold
        #if gold-amount > gold-threshold
          // do nothing, all above thresholds.
        #else
          chat to self "eco adjustment: wood food -> gold"
          @up-modify-goal wood-adjustment c:- 2
          @up-modify-goal food-adjustment c:- 2
          @up-modify-goal gold-adjustment c:+ 4
        #end if
      #else
        #if gold-amount > gold-threshold
          chat to self "eco adjustment: wood gold -> food"
          @up-modify-goal wood-adjustment c:- 2
          @up-modify-goal gold-adjustment c:- 2
          @up-modify-goal food-adjustment c:+ 4
        #else
          chat to self "eco adjustment: wood -> food gold"
          @up-modify-goal wood-adjustment c:- 4
          @up-modify-goal food-adjustment c:+ 2
          @up-modify-goal gold-adjustment c:+ 2
        #end if
      #end if
    #else
      #if food-amount > food-threshold
        #if gold-amount > gold-threshold
          chat to self "eco adjustment: food gold -> wood"
          @up-modify-goal food-adjustment c:- 2
          @up-modify-goal gold-adjustment c:- 2
          @up-modify-goal wood-adjustment c:+ 4
        #else
          chat to self "eco adjustment: food -> wood gold"
          @up-modify-goal food-adjustment c:- 4
          @up-modify-goal wood-adjustment c:+ 2
          @up-modify-goal gold-adjustment c:+ 2
        #end if
      #else
        #if gold-amount > gold-threshold
          chat to self "eco adjustment: gold -> wood food"
          @up-modify-goal gold-adjustment c:- 4
          @up-modify-goal wood-adjustment c:+ 2
          @up-modify-goal food-adjustment c:+ 2
        #else
          // do nothing, all below thresholds.
        #end if
      #end if
    #end if
  #end repeat

  @up-modify-sn sn-wood-gatherer-percentage g:+ wood-adjustment
  @up-modify-sn sn-food-gatherer-percentage g:+ food-adjustment
  @up-modify-sn sn-gold-gatherer-percentage g:+ gold-adjustment
  
  #if strategic-number sn-wood-gatherer-percentage < min-wood-percent
    goal wood-adjustment += 2
    goal food-adjustment -= 1
    goal gold-adjustment -= 1
  #end if

  #if strategic-number sn-food-gatherer-percentage < min-food-percent
    goal food-adjustment += 2
    goal wood-adjustment -= 1
    goal gold-adjustment -= 1
  #end if

  #if strategic-number sn-gold-gatherer-percentage < min-gold-percent
    goal gold-adjustment += 2
    goal wood-adjustment -= 1
    goal food-adjustment -= 1
  #end if
#end if

// eco overrides

#if unit-type-count villager < 8
  distribute villagers 0 100 0 0
#else if unit-type-count villager < 12
  distribute villagers 20 80 0 0
#else if unit-type-count villager < 16
  distribute villagers 40 60 0 0
#end if

#if up-research-status c: feudal-age == research-pending
  distribute villagers 40 50 10 0
#end if

//chat sn to all "wood: %d" sn-wood-gatherer-percentage
//chat sn to all "food: %d" sn-food-gatherer-percentage
//chat sn to all "gold: %d" sn-gold-gatherer-percentage
//chat sn to all "stone: %d" sn-stone-gatherer-percentage

goal my-military-population = 0
goal their-military-population = 0
@up-get-fact military-population 0 my-military-population
@up-get-player-fact target-player military-population 0 their-military-population

#if military-population >= 5 and up-compare-goal my-military-population g:> their-military-population
  sn-number-attack-groups = 200
#else
  sn-number-attack-groups = 0
#end if

#if military-population < 40
  dodge fortifications
#end if

#if current-age >= feudal-age
  #do once
    scout enemy
  #end do
#end if

auto expand town size to 30
