;Translated by https://github.com/lewisc64/aoe2ai
(defconst chat-b8998735697e4cd38237f8411e4d40e06cbbc790 "Research level: LOW")
(defconst chat-ebae1d86c02c2920af25f66bb982462bf689d398 "Research level: MEDIUM")
(defconst chat-84675dc7c0b9c4fa2bae6118449907b7018c7fcd "Research level: HIGH")
(defconst chat-02a44b954882b7be12972680db2dfdb8d3573037 "Research level: CRITICAL")
(defconst max-wood 1600)
(defconst max-food 1600)
(defconst max-gold 1600)
(defconst max-stone 1600)
(defconst half-max-wood 800)
(defconst half-max-food 800)
(defconst half-max-gold 800)
(defconst minimum-wood-gatherer-percentage 30)
(defconst minimum-food-gatherer-percentage 30)
(defconst minimum-gold-gatherer-percentage 10)
(defconst wood-threshold 300)
(defconst food-threshold 300)
(defconst gold-threshold 300)
(defconst stone-threshold 300)
(defconst good-wood-price 75)
(defconst good-food-price 75)
(defconst good-wood-sell-price 150)
(defconst good-food-sell-price 150)
(defconst excellent-wood-price 50)
(defconst excellent-food-price 50)
(defconst excellent-wood-sell-price 200)
(defconst excellent-food-sell-price 200)
(defconst did-tribute 352)
(defconst chat-c16cc99892e60a495525ca01fdef862c1af9487e "sending wood to ally")
(defconst chat-ccdd2139b41000710da3064889e4b1ae35562704 "sending food to ally")
(defconst chat-c8395566c9f14bcc1ba9ca2f7a7ef0841786ca33 "sending gold to ally")
(defconst chat-0d406058bc76910a3af52fb117012d201c5bd292 "sending stone to ally")
(defconst chat-751b5928087d11eba65985a66c3803e65d9dae20 "buy wood, excellent price.")
(defconst chat-799ebc2e18e5acaa96f2916b700be42ad0a64dba "buy food, excellent price.")
(defconst chat-2cd1cb794480bb23192fb8a01b286cdde2b1ac70 "sell wood, excellent price.")
(defconst chat-44c30f3a793150391847d49ba872e9cee87b8bea "sell food, excellent price.")
(defconst chat-c62715314a567434688ed360f54f41ec310888de "buy wood, good price.")
(defconst chat-21c85db3b3664127b620546345848989c1926b4a "buy food, good price.")
(defconst chat-875edfa23fa1b4599a86404c2d08b0d801758fc4 "sell wood, good price.")
(defconst chat-116f9ef6361a9063fd3ee3fbe9cc61f87fcdc777 "sell food, good price.")
(defconst chat-34f8609760258d82ecc3e0146f981c1ec0725afb "rebalance: wood food -> gold")
(defconst chat-19b22c4216400b4ac44cedd180de15040bba208a "rebalance: wood gold -> food")
(defconst chat-7f1eda05222ecfc6817de23caf16247e9200bb91 "rebalance: wood -> food gold")
(defconst chat-852bc71dbe1d5f015c304fd5abc8ff06a003dc65 "rebalance: food gold -> wood")
(defconst chat-bd7c8904ccd4165da66d7d9cecb51f8500c6890b "rebalance: food -> wood gold")
(defconst chat-822e28c24c9ecfade87e50563a2fda287b1d3e41 "rebalance: gold -> wood food")
(defconst chat-d94b5a6ca271d8c89b20340814572189d3edf11b "rebalance: wood -> food")
(defconst chat-5910be933cb49a20786061b35fa87af01792653d "rebalance: food -> wood")
(defconst chat-7a235c0422e15153261184195d5b73a1f30f9281 "rebalance: minimum wood hit")
(defconst chat-b68108b9246231bd0dcba3f02d73a21fd94239a8 "rebalance: minimum food hit")
(defconst chat-7c910559fb331f99581145a809d8a7f4c80a3f40 "rebalance: minimum gold hit")
(defconst chat-4419ac64cf698a06e303ef2add9e74b240d800d5 "there is no gold, moving all villagers away from gold")
(defconst chat-9c1fa295fbd8be460841820389f2c1c66e60be8c "scale up trade")
(defconst chat-5020f05cec7992e87bfff7f3806503ffd09fabb4 "Imperial age.")
(defconst chat-6aa194c8364dcbf888b9f71dddead1b65e2a18b1 "On my way to imperial.")
(defconst chat-3e71608742dd8317c17d7aad90031f4ca2f4e31e "Castle age.")
(defconst chat-8e47476ff2d44144fef9f4c3b25acadc9b58ade1 "On my way to castle.")
(defconst chat-1b168fc75d0dccead31debc6304ae90e62b85346 "Feudal age.")
(defconst chat-8c1add5792f06349834823be7af5388dd18dc6e5 "On my way to feudal.")
(defconst chat-3157faa10ad8f4349ca9a0f430e2020480a2924d "Dark age.")
(defconst chat-c4920c37e39cb5df2dc2ae05b30a0bd92a835105 "2As if!")
(defconst chat-aba9a618839083a1fc344dc2d94aaa3aac5d8a7b "2Are you out of your mind?")
(defconst chat-96d6c00acaea47ba19980829b2fd9456b0f6bc20 "2Absolutely not.")
(defconst chat-8503ede3ea63ea360679c1a7bb9c6feb415c1aeb "Have fun!")
(defconst chat-8e30d6aac813417d581bd798bb4422107881ac34 "Good luck!")
(defconst chat-352a6728c4532105f53a668dfbd418be5cb3fd10 "HF!")
(defconst chat-f5dc299365d92f463b51850f4998d15a1ccea957 "GL!")
(defconst chat-a7a3d544f2e165ee5b1d0c26d4ff3e158cca81a1 "Good luck, have fun!")
(defconst chat-3d0ebcbcac2c3738090ce9627d7d67ce721988cb "Looking forward to this. Let's go.")
(defconst chat-4b2d225e68bb2a07009be46ed0e20152c08e55aa "Hi! Go easy on me, okay?")
(defconst chat-34a4e982ab21b1135e32998f31b988f2e721aa37 "Let's do this!")
(defconst chat-c1a2c8283f88d733961d6b4365e9be13d623d2ed "GL everyone!!!")
(defconst chat-c1a91b91f6684242f1d97269a22c358daf5c4c7c "May the best team win!")
(defconst chat-c19d910ae0af1d7a0109c0695c694cb1ea6d76ce "May the best ruler win!")
(defconst chat-0c828eb15d2a93d63913170c9c76265baa71917f "Good luck and have fun everyone!")
(defconst chat-a3be6ee65fab627be24ec41da7725a025c510c56 "Nobody's here?")
(defconst chat-81efecdd5c82a2660ad0c59f815946bef2f13f88 "Lonely...")
(defconst chat-c44ed845a6ff3c2ffb3ab515fa52338d12f60525 "Hello? Is anyone there?")
(defconst chat-407f29f6af78f4b121f2dcc95bc1802f5565e1e0 "I guess we win already?")
(defconst chat-54ceebfc9eedd7e5470e1bf52d52982ae8466606 "Um, who exactly are we fighting?")
(defconst chat-8cfad1992442d65d54a87d6db94bf15a1791fd14 "I don't like my chances here.")
(defconst chat-07fbe50aef0a19edc7a165a23218530a51375911 "This is a tough game.")
(defconst chat-6e3caf41f579a199863e77aba43701a14a104135 "I'm having some trouble with this one.")
(defconst chat-38e831846ef26cbdaacad9bf5e7250fc188a6c32 "This is hard.")
(defconst chat-3af0b005d375f748321b4a41fcecc1aae4aefaf6 "Hopefully we still have a shot?")
(defconst chat-148fc18afce1ba1e4bf765ce58284107bababfe7 "We may need a different strategy...")
(defconst chat-785d57ccabb15e87d9006519033209d563547b10 "I'm not sure I can best you.")
(defconst chat-2e540e7a93e8a2c16dd2db03a61f281bd71d44a6 "You're playing quite well.")
(defconst chat-2b4241267e3b903ad08c41a2e2e065b1e18d6217 "This could have gone better, oh well.")
(defconst chat-27daacbab2622883f44b817a5b7a32ce0d4a0daa "I'm not doing very well...")
(defconst chat-19634ee5b0c18ded8ea33b3ae8dd61089f1b8332 "I feel vastly outpaced, you're playing a good game.")
(defconst chat-7d06b793b137e11ecd1977e0a7e00d7e063fc5d2 "It was tough, but I got there in the end.")
(defconst chat-64380c78099f9d606c5717d5cd64375f7af9b1b1 "I'm pretty sure I've got this game.")
(defconst chat-4d11f67974ce3ca3532c23088d775e38fb8c3735 "Looks like we're close to getting this squared off.")
(defconst chat-5d312d4a59392d3794263192a8821782d3d2b8f1 "I'm winning this one. You played well though!")
(defconst chat-b6df83614ca4dbd79ddb8598e07cc0b0d02b7e84 "That's a lot of stuff.")
(defconst chat-eaa2467d642e1a4eb5a8d9106ae62d43146b2a2e "You're looking scary...")
(defconst chat-8ce4eeee4ffed6c3f3b1db90374ebfcde5700522 "It's looking scary out there...")
(defconst chat-51fc69ba67d089e91a8fca0c10c2534cd01e61e3 "...please don't hurt me!")
(defconst chat-961c2deda7b66bdb5f5e299c7782fbb4da858a1b "I'd better step on the pedal a bit, sheesh.")
(defconst chat-0ecbe33a40e3a01167989f50032df37ff257587f "Dicey.")
(defconst chat-e9532672b85a1beb284e4e03bceb633880370346 "I don't like this...")
(defconst chat-8b07e683b6a8a2be05e5fa0983ac1162cbb86b70 "It'll all be over soon.")
(defconst chat-e3e25ce529666447cfcdc1517c952205c85ae301 "I'm bringing the pain.")
(defconst chat-3ce3c2bac686e227e9a22ec034d350f77befc77c "We're bringing the pain.")
(defconst chat-735d0d536d636678c4a8895adb4b86ec7b62a486 "Allow me to show you some numbers.")
(defconst chat-10cbe05e84d9c7317507462818d034f774765349 "I'm pumped! Let's go!!!")
(defconst chat-83694dc1c91d4874c26ac8bc2ecea836aead3ce2 "[cracks knuckles]")
(defconst chat-6d95d94755acaedd03e97615b28c41909ac4230b "You aren't prepared for this.")
(defconst chat-f5bd8413755fcb04dd7e0a8b597a929cf19c17a7 "You lot aren't prepared for this.")
(defconst chat-f3d1912b990b10acb7343d585e19bc2241d2c1c3 "Oh yeah, this is good.")
(defconst chat-a95fb62cb0053175f353ba1288f8d2d234b09f01 "It's time for some violence!")
(defconst chat-6ede43a29bcd9bae6087d5d2d82447536ed824ce "Let's crush 'em!")
(defconst chat-b68a42add4208a6c61dc94dc77aff979411df768 "Are you ready?")
(defconst chat-74a9cde05529e14835c25fda908d5d7619760bb8 "I am prepared.")
(defconst chat-fda0087cd235c1ddfbec157a739e406b8df7e9c6 "Feeling good.")
(defconst chat-bc024c7f06f28ebe926a8bc05620b507a71db22c "Feeling confident.")
(defconst chat-2e1e4d4524c3a7b32d06e7a0f47dde021d92eea9 "I'm ready for what you've got.")
(defconst chat-5ff49d06db6d9da4b3d8576ad8c7200426baa045 "Come at me.")
(defconst chat-3b79e38c69b431d2a0cf2ee8e393dcaf1c582f75 "I'm done.")
(defconst chat-0fd729c917031e72165260ea46645b93da7953fb "Good game, well played.")
(defconst chat-e224508cbf520f93d798247d758574cec6bbd53e "It was a good game, I think I'm out though.")
(defconst chat-abff28fcabfdd0b5dbf2f25ec16d71cd700ceba0 "My heart's not really in this anymore, sorry.")
(defconst chat-6ceeb449e5d4dccf41ce23aa49e4a25fd5d58182 "Going castle.")
(defconst chat-3f53f5f3fede916e304e8d1841050694cc36a6a0 "I've clicked up.")
(defconst chat-da0510cbce82adf42730cc776c097ced4769ef84 "On my way up.")
(defconst chat-32ed7d56f6e3169a4469afaac177b2bb4f6c212d "You know I can't deal with this. It's unfair.")
(defconst chat-796082ad792e39c9e35f9d12504b7da4d7825edf "Why can't we just have fun?")
(defconst chat-c0f45c97d40bc07b3efd507b6eeff5ff0c829214 "[sigh]")
(defconst chat-994b2d17a26b32564ea254679b1a01fc834304d7 "I don't think I like you very much...")
(defconst chat-fa0929c4c5ee827d7c95b20bfee567236a3dbaeb "Your teammate is a real piece of work.")
(defconst chat-c9d0a992bee2534cc3036d84862a2fca61e96673 "Why must you do this?")
(defconst attack-ready 183)
(defconst do-backstep 184)
(defconst emergency-trash 185)
(defconst do-counter-systems 186)
(defconst dead-female-builders 188)
(defconst dead-builders 187)
(defconst chat-8f742eb6e8f419863eef6d7174d91d0a49e04e3e "attack ready!")
(defconst enemy-good-unique-units 217)
(defconst enemy-good-villagers 215)
(defconst enemy-good-trade-carts 216)
(defconst enemy-good-monks 213)
(defconst enemy-good-missionaries 214)
(defconst enemy-good-battering-rams 207)
(defconst enemy-good-mangonels 208)
(defconst enemy-good-scorpions 209)
(defconst enemy-good-bombard-cannons 210)
(defconst enemy-good-trebuchets 211)
(defconst enemy-good-armored-elephants 212)
(defconst enemy-good-scouts 202)
(defconst enemy-good-knights 203)
(defconst enemy-good-camels 204)
(defconst enemy-good-battle-elephants 205)
(defconst enemy-good-konniks 206)
(defconst enemy-good-militia 198)
(defconst enemy-good-spearmen 199)
(defconst enemy-good-eagles 200)
(defconst enemy-good-condottiero 201)
(defconst enemy-good-archers 193)
(defconst enemy-good-hand-cannoneers 194)
(defconst enemy-good-skirmishers 195)
(defconst enemy-good-cavalry-archers 196)
(defconst enemy-good-genitours 197)
(defconst enemy-good-demolition-ships 223)
(defconst enemy-good-cannon-galleons 222)
(defconst enemy-good-fire-ships 221)
(defconst enemy-good-galleys 220)
(defconst enemy-good-transport-ships 219)
(defconst enemy-good-fishing-ships 218)
(defconst enemy-good-speamen 224)
(defconst good-speamen 192)
(defconst militia-trash 226)
(defconst unique-unit-cavalry-trash 225)
(defconst total-units-selected 227)
(defconst bcs-making-cavalry 232)
(defconst bcs-making-ranged 231)
(defconst bcs-making-infantry 230)
(defconst no-unit-rule-passes 233)
(defconst director-units-selected 234)
(defconst chat-29ea2bba50e4d37d23b48f2d6fe2bb51dd2c79be "ATTENTION: failed to select units, turning off counter systems")
(defconst max-demolition-ships 5)
(defconst max-defensive-mangonels 4)
(defconst max-cannon-galleons 8)
(defconst max-trebs 4)
(defconst max-imperial-age-rams 10)
(defconst max-castle-age-rams 5)
(defconst chat-fefcabf59d1c3c3caa349ec6ed9b0d28e70eb966 "attacking aggressively")
(defconst chat-a373c0fbab909e639a5687e4475b4753c7459701 "go! (thoughtful)")
(defconst chat-4a66ee3f7553287adc5b1eced0eceffcc2061b8f "hold! (thoughtful)")
(defconst chat-2d2b74194462d0d4cb99bbd9229a4b903a4d3074 "waiting for man at arms")
(defconst chat-ba183a7e2eeae21ba551776d9426e1df24686067 "massive lead, do techs.")
(defconst chat-52ae6a85e981cdf086ac3cccf45b963d6202eccd "make military lead bigger")
(defconst passive-override 238)
(defconst aggressive-override 237)
(defconst balanced-aggressive 236)
(defconst chat-fc08c9d5dec4bab3540668111e77d2fd114538f8 "being reckless and thoughtful, chaotically!")
(defconst threatening-important 242)
(defconst next-retarget 241)
(defconst retarget-interval 300)
(defconst did-reset 243)
(defconst chat-24431b28ab67d3f626c364c93d8846158d17db36 "Love can be fleeting.")
(defconst chat-515042920fb0d9bf0d0b9d82f7026f465ea6d162 "Whoops, wrong button.")
(defconst chat-ace1e65c7cd0e3b09613b3464a22b026da9f8238 "I'm itching for a fight.")
(defconst chat-eff6100e64480d30af47207c5d14fa0bb2446c86 "player 8 is no longer a bad egg")
(defconst chat-50513f1a2be7088d01afd3ec816114c2691b9152 "accepting alliance request from player 8")
(defconst chat-fa3751e319cbe5cacd139c7a1562fa43f2572540 "player 8 accepted our alliance request")
(defconst chat-0f45c15df8f4b98f45e76a193f81ee06c4264160 "attacked by player 8")
(defconst chat-a59989c36f66486bdb677b966bef4ab9aa0bca61 "alliance request to player 8 timed out")
(defconst chat-394d0dfc698bda587775c81bb0f30b0d5526a13f "player 7 is no longer a bad egg")
(defconst chat-0d53ad97300dc104338e8d21b46b4754e07ce204 "accepting alliance request from player 7")
(defconst chat-8087453fdc70a35c4d48192914c94b262bd716aa "player 7 accepted our alliance request")
(defconst chat-4ed8c17a5c5ebe44478b112d0504cf7503a6feb4 "attacked by player 7")
(defconst chat-fb4127402bce408b590abd4f83a508462a0ab9b6 "alliance request to player 7 timed out")
(defconst chat-3bc7aa8c06652eb2594dce3bad6b029ce0b326e2 "player 6 is no longer a bad egg")
(defconst chat-43d4565c80b77922e63818fd0a889f4835a27abc "accepting alliance request from player 6")
(defconst chat-242ed4d43b83f84d1413e44e905c2b9a166f4104 "player 6 accepted our alliance request")
(defconst chat-53567c58d5c94e135fe952436954bf043a31e01f "attacked by player 6")
(defconst chat-1769508a0087b10ac1737e5d2e2f7d8ef6109642 "alliance request to player 6 timed out")
(defconst chat-e5e799bb57b080e85534d5c5d7946731946daf70 "player 5 is no longer a bad egg")
(defconst chat-aad65329038f71ebf68e6a1d065bca65e7e03140 "accepting alliance request from player 5")
(defconst chat-349f79ea82b90a83246236380d1215e02744cbe1 "player 5 accepted our alliance request")
(defconst chat-f120f59c5092ae5e71f5b3e761c95b0594d41efc "attacked by player 5")
(defconst chat-125cdd96447018887b75673fc9b99fd92f05bac9 "alliance request to player 5 timed out")
(defconst chat-abf508ba3a4719c6a1adfd5aad724b36f94116ea "player 4 is no longer a bad egg")
(defconst chat-44b7511ff94bc36a35a4d972c0c9e42942081e6d "accepting alliance request from player 4")
(defconst chat-7f0cbcd84755dad6a892d7bdaa7aee6699da2b3f "player 4 accepted our alliance request")
(defconst chat-e83a4ecd69f3c41b09a0a1236e7aa0581ac00f34 "attacked by player 4")
(defconst chat-76b4999be9f61799040a3ad99ff3b989f6d00007 "alliance request to player 4 timed out")
(defconst chat-8594f65dab922519b58986ad1f5c4853490f706e "player 3 is no longer a bad egg")
(defconst chat-4da2fe72f310c312c3e753e125861365b995725c "accepting alliance request from player 3")
(defconst chat-ee3a57429acd2b5c46c5efe0509ac7ba8df94c79 "player 3 accepted our alliance request")
(defconst chat-1062b2c8150cadf4f44729f3bf5a41ddcda43f06 "attacked by player 3")
(defconst chat-3390d0fa3590638e3b866f872aa0d98d2e33dd5a "alliance request to player 3 timed out")
(defconst chat-cae7444347e8f1878ab694150cf0a449e1b19fbb "player 2 is no longer a bad egg")
(defconst chat-4d94c32dded366a0ead5a964f450f4dbe7115836 "accepting alliance request from player 2")
(defconst chat-a57c75786a340d4b260054050994d55241080470 "player 2 accepted our alliance request")
(defconst chat-fd31965fd7bd8017f4bc4ce2e429ae212acef5dc "attacked by player 2")
(defconst chat-0ae2f37c329f1f5e07ad495f3ee3dc7c463ad180 "alliance request to player 2 timed out")
(defconst chat-625aa2158a8e10e2f23af1b781c6c5688fed55e8 "player 1 is no longer a bad egg")
(defconst chat-ae022016e19b11fd2b8bb5494d85a16624caea4f "I agree, let's be friends.")
(defconst chat-6e4b5a5d9cd840be6824f7209855519c9bf8a732 "I was hoping you'd do that!")
(defconst chat-a0936c429351330a24a75a7382b6594ea631f840 "Good idea.")
(defconst chat-0b496bb36546bfec15f2a89936c356726ea0c985 "accepting alliance request from player 1")
(defconst chat-456f0f3ef0322a669d04b16584960dfa36421054 "Unstoppable team!")
(defconst chat-73443f250f6062de5d7ac5c26f0641c3e391f34d "Nice to have you with me.")
(defconst chat-87b47d886a3bcf4fecf764721e89a5c3f00f218b "Let's do this. Together.")
(defconst chat-c4af4a60de342317bf64acdd14e7654b066abf95 "player 1 accepted our alliance request")
(defconst chat-7e6a680c96f5ebc7c72001bf5a70a615cc4daa7e "attacked by player 1")
(defconst chat-c11ce23a13444a91229eb0dad991c757ca58c03f "Whatever.")
(defconst chat-705519f70cb48c4e7326f64dfe1bb719a92d85fa "Would've been nice.")
(defconst chat-c139b871360335954087bfe0e7808ac0062bea98 "Fine, have it your way.")
(defconst chat-5f9454d0a28cba01a380875cdd8330bda2cdd9e8 "alliance request to player 1 timed out")
(defconst chat-54d3097efdeb918de212c08f5fbd8a0d4569560c "making neutral player 8 our enemy")
(defconst chat-566aa7f01644ad99857a038cc0d073814a473205 "making neutral player 7 our enemy")
(defconst chat-32084f20d0ded4850e4969abba00fa19b12e208f "making neutral player 6 our enemy")
(defconst chat-af9c8ef690306aab8e0c9f40f9ec80307a6fb13e "making neutral player 5 our enemy")
(defconst chat-a5ce7b19a86442374b546816584bd68615ae4950 "making neutral player 4 our enemy")
(defconst chat-0a984a85a19f6f52ad3f72e5780f2db18b2f4728 "making neutral player 3 our enemy")
(defconst chat-8eeed920dbe367e9912ca6974cc93ae6c8145c48 "making neutral player 2 our enemy")
(defconst chat-4ec0f4607a8df0a976c0ec084a71cec372eac904 "making neutral player 1 our enemy")
(defconst chat-26025f32da3a0314a95d9151ef900223c3fbd814 "requesting alliance from player 8")
(defconst chat-755ccccd63e8921c5dbcbc9ee32fb74e5cdef1be "requesting alliance from player 7")
(defconst chat-353fab865644592490d81cb7a6ae038b34714ddf "requesting alliance from player 6")
(defconst chat-93661ec66e7c4deca69f3e4b5f60ca098147cdb5 "requesting alliance from player 5")
(defconst chat-50cf04c191209fa0f58e77cde822a9fa6bae413c "requesting alliance from player 4")
(defconst chat-3d39714454a854157bbdab21123bebef664f0e04 "requesting alliance from player 3")
(defconst chat-7f6b22d6159d7a0a4c1071f8fd6d6b0f8370520f "requesting alliance from player 2")
(defconst chat-215e1a2442ffb7fc9dbb2e86ae46e08209378593 "Want to team up?")
(defconst chat-21f870721f49c52175e60a05dffe0ccc60187af1 "Want to work together?")
(defconst chat-ae0f0f92d6a271b3a396721f9adafc0b3398bda6 "Let's be allies.")
(defconst chat-95cbd354811d09c43e5aa5da7c1197f4ebf546d9 "requesting alliance from player 1")
(defconst chat-a8d554bee6bdf89cc899a01fc2b99b59b54f26f8 "We aren't winning togther, then? What a shame.")
(defconst chat-51fed912c4cfaf31ff9c4a58c80de9135728d8f8 "I suppose now we should fight.")
(defconst chat-855ec5486bd3e68f0d5c64a497528881e346d20a "We did it, but the game is not over. This is just the beginning.")
(defconst chat-05e870225114ac83ef4fa050a98af6016fa4c572 "Being introverted.")
(defconst chat-0ed19ef74edde4e6a25b364e1e76b0dd12585260 "Being pair-seeking.")
(defconst chat-0b1c1a18f0b679b01cfd555be430b584551a7df2 "Being backstabbing.")
(defconst chat-betrayed-by-player 288)
(defconst chat-betray-player 287)
(defconst no-enemies-stamp 286)
(defconst player-8-is-bad-egg 281)
(defconst player-8-bad-egg-expires-at 282)
(defconst player-8-alliance-request-time-stamp 283)
(defconst allied-with-8 284)
(defconst tried-alliance-with-8 285)
(defconst player-7-is-bad-egg 276)
(defconst player-7-bad-egg-expires-at 277)
(defconst player-7-alliance-request-time-stamp 278)
(defconst allied-with-7 279)
(defconst tried-alliance-with-7 280)
(defconst player-6-is-bad-egg 271)
(defconst player-6-bad-egg-expires-at 272)
(defconst player-6-alliance-request-time-stamp 273)
(defconst allied-with-6 274)
(defconst tried-alliance-with-6 275)
(defconst player-5-is-bad-egg 266)
(defconst player-5-bad-egg-expires-at 267)
(defconst player-5-alliance-request-time-stamp 268)
(defconst allied-with-5 269)
(defconst tried-alliance-with-5 270)
(defconst player-4-is-bad-egg 261)
(defconst player-4-bad-egg-expires-at 262)
(defconst player-4-alliance-request-time-stamp 263)
(defconst allied-with-4 264)
(defconst tried-alliance-with-4 265)
(defconst player-3-is-bad-egg 256)
(defconst player-3-bad-egg-expires-at 257)
(defconst player-3-alliance-request-time-stamp 258)
(defconst allied-with-3 259)
(defconst tried-alliance-with-3 260)
(defconst player-2-is-bad-egg 251)
(defconst player-2-bad-egg-expires-at 252)
(defconst player-2-alliance-request-time-stamp 253)
(defconst allied-with-2 254)
(defconst tried-alliance-with-2 255)
(defconst player-1-is-bad-egg 246)
(defconst player-1-bad-egg-expires-at 247)
(defconst player-1-alliance-request-time-stamp 248)
(defconst allied-with-1 249)
(defconst tried-alliance-with-1 250)
(defconst accept-alliance-requests 245)
(defconst want-alliance 244)
(defconst bad-egg-expiry 600)
(defconst allied-victory-timeout 120)
(defconst alliance-request-timeout 60)
(defconst chat-adce784ed342763397f2d5c5567de3da43ad274c "2Sorry, no.")
(defconst chat-39c49ff4279bb5160e5406ffd1627ea17127aab9 "2Not right now, sorry.")
(defconst chat-4f5a3f8e7707db677e3935f1ab3f9fa22019323e "2Sorry, no can do!")
(defconst chat-d70e126bdbfa17c210e069ec4095fd43cf3c84ec "1Sure.")
(defconst chat-240eb2776efd751ff3abc7e50068b9d40675aba1 "1Of course.")
(defconst chat-59b165c02042977bdaf7087bdf3887eb9f20a828 "1Okay.")
(defconst feitoria-pop-usage 169)
(defconst desired-villagers-with-subtractions 168)
(defconst dock-count 170)
(defconst old-produce-units 171)
(defconst current-unit-amount 172)
(defconst expected-units-per-type 173)
(defconst total-type-production 174)
(defconst archery-range-count 175)
(defconst barracks-count 176)
(defconst stable-count 177)
(defconst siege-workshop-count 178)
(defconst castle-count 179)
(defconst old-desired-military-buildings-per-type 180)
(defconst krepost-count 181)
(defconst monastery-count 182)
(defconst ri-yeomen 3)
(defconst ri-el-dorado 4)
(defconst ri-garland-wars 24)
(defconst ri-bogsveigar 49)
(defconst ri-perfusion 457)
(defconst ri-logistica 61)
(defconst ri-mahouts 7)
(defconst ri-sipahi 491)
(defconst ri-rocketry 52)
(defconst ri-chivalry 493)
(defconst ri-bearded-axe 83)
(defconst ri-shinkichon 445)
(defconst ri-howdah 626)
(defconst ri-manipur-cavalry 627)
(defconst ri-furor-celtica 5)
(defconst ri-tusk-swords 622)
(defconst ri-double-crossbow 623)
(defconst ri-corvinian-army 514)
(defconst ri-farimba 577)
(defconst ri-chatras 628)
(defconst ri-recurve-bow 515)
(defconst ri-inquisition 492)
(defconst ri-atlatl 460)
(defconst ri-greek-fire 464)
(defconst ri-andean-sling 516)
(defconst ri-grand-trunk-road 506)
(defconst ri-pavise 494)
(defconst ri-silk-road 499)
(defconst ri-thalassocracy 624)
(defconst ri-carrack 572)
(defconst ri-shatagni 507)
(defconst ri-forced-levy 625)
(defconst ri-orthodoxy 512)
(defconst ri-hulche-javelineers 485)
(defconst ri-zealotry 9)
(defconst ri-paper-money 629)
(defconst ri-elite-genitour 599)
(defconst genitour-line 1079)
(defconst condottiero 184)
(defconst live-sheep 958)
(defconst sea-fish 905)
(defconst tc-arrow 54)
(defconst watch-tower-arrow 786)
(defconst castle-arrow 746)
(defconst castle-arrow-chemistry 747)
(defconst ranged-unit-class 900)
(defconst infantry-unit-class 906)
(defconst cavalry-unit-class 912)
(defconst dead-trade-cart 178)
(defconst dead-trade-cart-loaded 205)
(defconst dead-male-builder 213)
(defconst dead-female-builder 225)
(defconst dark-age-military-buildings 1)
(defconst feudal-age-military-buildings 3)
(defconst castle-age-military-buildings 4)
(defconst imperial-age-military-buildings 5)
(defconst min-detection-units 5)
(defconst wood-unit-threshold 200)
(defconst food-unit-threshold 0)
(defconst gold-unit-threshold 0)
(defconst importance-critical 7)
(defconst importance-high 5)
(defconst importance-medium 3)
(defconst importance-low 1)
(defconst resign 2)
(defconst full-water-map 3)
(defconst partial-water-map 4)
(defconst water-map 5)
(defconst desired-military-buildings-per-type 6)
(defconst desired-town-centers 8)
(defconst desired-villagers 9)
(defconst desired-trade-carts 10)
(defconst min-desired-trade-carts 11)
(defconst max-desired-trade-carts 12)
(defconst desired-fishing-ships 13)
(defconst desired-units-per-type 15)
(defconst pop-cap-goal 16)
(defconst desired-age 17)
(defconst produce-units 18)
(defconst throttle-units 19)
(defconst allow-land-units 20)
(defconst allow-naval-units 21)
(defconst do-research 22)
(defconst research-level 23)
(defconst attacking 24)
(defconst temp 25)
(defconst do-stone-mining 27)
(defconst produce-unique-units 52)
(defconst produce-villagers 50)
(defconst produce-trade-carts 51)
(defconst produce-monks 48)
(defconst produce-missionaries 49)
(defconst produce-battering-rams 42)
(defconst produce-mangonels 43)
(defconst produce-scorpions 44)
(defconst produce-bombard-cannons 45)
(defconst produce-trebuchets 46)
(defconst produce-armored-elephants 47)
(defconst produce-scouts 37)
(defconst produce-knights 38)
(defconst produce-camels 39)
(defconst produce-battle-elephants 40)
(defconst produce-konniks 41)
(defconst produce-militia 33)
(defconst produce-spearmen 34)
(defconst produce-eagles 35)
(defconst produce-condottiero 36)
(defconst produce-archers 28)
(defconst produce-hand-cannoneers 29)
(defconst produce-skirmishers 30)
(defconst produce-cavalry-archers 31)
(defconst produce-genitours 32)
(defconst produce-demolition-ships 58)
(defconst produce-cannon-galleons 57)
(defconst produce-fire-ships 56)
(defconst produce-galleys 55)
(defconst produce-transport-ships 54)
(defconst produce-fishing-ships 53)
(defconst good-unique-units 83)
(defconst good-villagers 81)
(defconst good-trade-carts 82)
(defconst good-monks 79)
(defconst good-missionaries 80)
(defconst good-battering-rams 73)
(defconst good-mangonels 74)
(defconst good-scorpions 75)
(defconst good-bombard-cannons 76)
(defconst good-trebuchets 77)
(defconst good-armored-elephants 78)
(defconst good-scouts 68)
(defconst good-knights 69)
(defconst good-camels 70)
(defconst good-battle-elephants 71)
(defconst good-konniks 72)
(defconst good-militia 64)
(defconst good-spearmen 65)
(defconst good-eagles 66)
(defconst good-condottiero 67)
(defconst good-archers 59)
(defconst good-hand-cannoneers 60)
(defconst good-skirmishers 61)
(defconst good-cavalry-archers 62)
(defconst good-genitours 63)
(defconst good-demolition-ships 89)
(defconst good-cannon-galleons 88)
(defconst good-fire-ships 87)
(defconst good-galleys 86)
(defconst good-transport-ships 85)
(defconst good-fishing-ships 84)
(defconst neutral-or-enemy-players-count 159)
(defconst enemy-players-count 158)
(defconst neutral-players-count 157)
(defconst ally-players-count 156)
(defconst unique-unit-is-cavalry 146)
(defconst unique-unit-is-infantry 147)
(defconst unique-unit-is-ranged 148)
(defconst unique-unit-is-cavalry-archer 149)
(defconst unique-unit-is-expensive 150)
(defconst unique-unit-counters-cavalry 151)
(defconst unique-unit-counters-infantry 152)
(defconst unique-unit-counters-ranged 153)
(defconst unique-unit-counters-cavalry-archer 154)
(defconst unique-unit-counters-unique-unit 155)
(defconst full-infantry-blacksmith-investment 145)
(defconst partial-infantry-blacksmith-investment 144)
(defconst full-cavalry-blacksmith-investment 143)
(defconst partial-cavalry-blacksmith-investment 142)
(defconst full-ranged-blacksmith-investment 141)
(defconst partial-ranged-blacksmith-investment 140)
(defconst infantry-blacksmith-techs-done 139)
(defconst cavalry-blacksmith-techs-done 138)
(defconst ranged-blacksmith-techs-done 137)
(defconst under-attack 136)
(defconst threat-target 135)
(defconst threat-source 134)
(defconst threat-player 133)
(defconst threat-time 132)
(defconst my-warboat-count 126)
(defconst target-warboat-count 127)
(defconst target-warboat-percentage 128)
(defconst largest-enemy-warboat-count 129)
(defconst largest-neutral-warboat-count 130)
(defconst largest-enemy-warboat-percentage 131)
(defconst my-civilian-population 120)
(defconst target-civilian-population 121)
(defconst target-civilian-percentage 122)
(defconst largest-enemy-civilian-population 123)
(defconst largest-neutral-civilian-population 124)
(defconst largest-enemy-civilian-percentage 125)
(defconst my-military-population 114)
(defconst target-military-population 115)
(defconst target-military-percentage 116)
(defconst largest-enemy-military-population 117)
(defconst largest-neutral-military-population 118)
(defconst largest-enemy-military-percentage 119)
(defconst target-player-score-delta 113)
(defconst target-player-score 112)
(defconst previous-target-player-score 111)
(defconst score-percentage 110)
(defconst lowest-enemy-score 109)
(defconst highest-enemy-score 108)
(defconst my-score 107)
(defconst town-center-count 106)
(defconst total-fishing-ships 105)
(defconst total-trade-carts 104)
(defconst total-villagers 103)
(defconst current-population-goal 102)
(defconst population-space-remaining 101)
(defconst no-gold-mining-start 100)
(defconst no-gold-mining-time 99)
(defconst game-time-goal 98)
(defconst non-escrowed-stone 97)
(defconst non-escrowed-gold 96)
(defconst non-escrowed-food 95)
(defconst non-escrowed-wood 94)
(defconst escrowed-stone 93)
(defconst escrowed-gold 92)
(defconst escrowed-food 91)
(defconst escrowed-wood 90)
(defconst team-game 160)
(defconst free-for-all 161)
(defconst locked-teams 162)
(defconst enough-wood-for-units 163)
(defconst enough-food-for-units 164)
(defconst enough-gold-for-units 165)
(defconst attempted-researches 166)
(defconst attempted-researches-importance 167)
(defrule
    (true)
=>
    (set-goal 1 1)
    (disable-self)
)
(defrule
    (goal 1 1)
=>
    (set-strategic-number sn-enable-new-building-system 1)
    (set-strategic-number sn-percent-building-cancellation 20)
    (set-strategic-number sn-cap-civilian-builders 200)
    (set-difficulty-parameter ability-to-maintain-distance 0)
    (set-difficulty-parameter ability-to-dodge-missiles 100)
    (set-strategic-number sn-percent-attack-soldiers 100)
    (set-strategic-number sn-percent-attack-boats 100)
    (set-strategic-number sn-attack-intelligence 1)
    (set-strategic-number sn-livestock-to-town-center 1)
    (set-strategic-number sn-enable-patrol-attack 1)
    (set-strategic-number sn-intelligent-gathering 1)
    (set-strategic-number sn-local-targeting-mode 1)
    (set-strategic-number sn-retask-gather-amount 0)
    (set-strategic-number sn-target-evaluation-siege-weapon 500)
    (set-strategic-number sn-percent-enemy-sighted-response 100)
    (set-strategic-number sn-task-ungrouped-soldiers 0)
    (set-strategic-number sn-gather-defense-units 1)
    (set-strategic-number sn-defer-dropsite-update 1)
    (set-strategic-number sn-do-not-scale-for-difficulty-level 1)
    (set-strategic-number sn-number-build-attempts-before-skip 5)
    (set-strategic-number sn-max-skips-per-attempt 5)
    (set-strategic-number sn-dropsite-separation-distance 8)
    (set-strategic-number sn-wall-targeting-mode 1)
    (set-strategic-number sn-minimum-water-body-size-for-dock 999)
    (disable-self)
)
(defrule
    (goal 1 1)
=>
    (set-strategic-number sn-maximum-wood-drop-distance -1)
    (set-strategic-number sn-maximum-food-drop-distance 8)
    (set-strategic-number sn-maximum-gold-drop-distance 8)
    (set-strategic-number sn-maximum-stone-drop-distance 8)
    (set-strategic-number sn-maximum-hunt-drop-distance 48)
    (set-strategic-number sn-mill-max-distance 25)
    (set-strategic-number sn-camp-max-distance 25)
    (set-strategic-number sn-dropsite-separation-distance 5)
    (set-strategic-number sn-percent-civilian-explorers 0)
    (set-strategic-number sn-cap-civilian-explorers 0)
    (set-strategic-number sn-total-number-explorers 1)
    (set-strategic-number sn-number-explore-groups 1)
    (set-strategic-number sn-initial-exploration-required 0)
    (set-strategic-number sn-wall-targeting-mode 1)
    (enable-wall-placement 1)
    (enable-wall-placement 2)
    (set-goal resign 0)
    (set-strategic-number sn-maximum-attack-group-size 1)
    (set-strategic-number sn-minimum-attack-group-size 1)
    (set-strategic-number sn-maximum-boat-attack-group-size 1)
    (set-strategic-number sn-minimum-boat-attack-group-size 1)
    (set-strategic-number sn-garrison-rams 0)
    (set-strategic-number sn-group-form-distance 30)
    (set-strategic-number sn-special-attack-type2 villager)
    (set-goal full-water-map 0)
    (set-goal partial-water-map 0)
    (disable-self)
)
(defrule
    (building-type-count stone-wall-line == 0)
    (building-type-count palisade-wall == 0)
    (wall-completed-percentage 2 == 100)
    (cc-players-unit-type-count 0 sea-fish >= 1)
    (game-time < 5)
    (goal 1 1)
=>
    (set-goal full-water-map 1)
    (disable-self)
)
(defrule
    (nand
      (building-type-count stone-wall-line == 0)
      (and
        (building-type-count palisade-wall == 0)
        (wall-completed-percentage 2 == 100)
      )
    )
    (cc-players-unit-type-count 0 sea-fish >= 1)
    (game-time < 5)
    (goal 1 1)
=>
    (set-goal partial-water-map 1)
    (disable-self)
)
(defrule
    (or
      (goal full-water-map 1)
      (goal partial-water-map 1)
    )
    (goal 1 1)
=>
    (set-goal water-map 1)
    (disable-self)
)
(defrule
    (not
      (goal full-water-map 1)
    )
    (not
      (goal partial-water-map 1)
    )
    (goal 1 1)
=>
    (set-goal water-map 0)
    (disable-self)
)
(defrule
    (goal 1 1)
=>
    (set-goal desired-military-buildings-per-type 2)
    (set-goal 7 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 7)
    (disable-self)
)
(defrule
    (goal 7 1)
    (goal 1 1)
=>
    (set-goal desired-town-centers 3)
    (disable-self)
)
(defrule
    (goal 7 2)
    (goal 1 1)
=>
    (set-goal desired-town-centers 4)
    (disable-self)
)
(defrule
    (goal 7 3)
    (goal 1 1)
=>
    (set-goal desired-town-centers 5)
    (disable-self)
)
(defrule
    (goal 1 1)
=>
    (set-goal desired-villagers 120)
    (set-goal desired-trade-carts 30)
    (set-goal min-desired-trade-carts 30)
    (set-goal max-desired-trade-carts 50)
    (set-goal desired-fishing-ships 10)
    (set-goal 14 0)
    (generate-random-number 2)
    (up-get-fact random-number 0 14)
    (disable-self)
)
(defrule
    (goal 14 1)
    (goal 1 1)
=>
    (set-goal desired-units-per-type 1)
    (disable-self)
)
(defrule
    (goal 14 2)
    (goal 1 1)
=>
    (set-goal desired-units-per-type 2)
    (disable-self)
)
(defrule
    (goal 1 1)
=>
    (set-goal pop-cap-goal 0)
    (up-get-fact population-cap 0 pop-cap-goal)
    (up-modify-goal desired-villagers g:* pop-cap-goal)
    (up-modify-goal desired-villagers c:/ 200)
    (up-modify-goal desired-fishing-ships g:* pop-cap-goal)
    (up-modify-goal desired-fishing-ships c:/ 200)
    (up-modify-goal min-desired-trade-carts g:* pop-cap-goal)
    (up-modify-goal min-desired-trade-carts c:/ 200)
    (up-modify-goal max-desired-trade-carts g:* pop-cap-goal)
    (up-modify-goal max-desired-trade-carts c:/ 200)
    (up-modify-goal desired-trade-carts g:= min-desired-trade-carts)
    (set-goal desired-age 0)
    (up-modify-goal desired-age c:= dark-age)
    (set-goal produce-units 1)
    (set-goal throttle-units 0)
    (set-goal allow-land-units 1)
    (set-goal allow-naval-units 1)
    (set-goal do-research 1)
    (set-goal research-level 0)
    (set-goal attacking 0)
    (up-assign-builders c: castle c: 8)
    (up-assign-builders c: town-center-foundation c: 4)
    (set-goal temp 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal 1 0)
    (set-strategic-number sn-percent-civilian-explorers 0)
    (set-strategic-number sn-cap-civilian-explorers 0)
    (set-strategic-number sn-total-number-explorers 1)
    (set-strategic-number sn-number-explore-groups 1)
    (set-strategic-number sn-initial-exploration-required 0)
    (disable-self)
)
(defrule
    (soldier-count == 0)
    (or
      (game-time < 600)
      (nand
        (resource-found gold)
        (resource-found stone)
      )
    )
    (strategic-number sn-cap-civilian-explorers == 0)
=>
    (set-strategic-number sn-percent-civilian-explorers 100)
    (set-strategic-number sn-cap-civilian-explorers 1)
)
(defrule
    (or
      (soldier-count >= 1)
      (and
        (game-time >= 600)
        (and
          (resource-found gold)
          (resource-found stone)
        )
      )
    )
    (strategic-number sn-cap-civilian-explorers == 1)
=>
    (set-strategic-number sn-percent-civilian-explorers 0)
    (set-strategic-number sn-cap-civilian-explorers 0)
)
(defrule
    (true)
=>
    (set-goal 26 0)
    (generate-random-number 2)
    (up-get-fact random-number 0 26)
    (disable-self)
)
(defrule
    (goal 26 1)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (goal 26 2)
=>
    (set-goal do-stone-mining 0)
)
(defrule
    (true)
=>
    (set-goal produce-archers 0)
    (set-goal produce-hand-cannoneers 0)
    (set-goal produce-skirmishers 0)
    (set-goal produce-cavalry-archers 0)
    (set-goal produce-genitours 0)
    (set-goal produce-militia 0)
    (set-goal produce-spearmen 0)
    (set-goal produce-eagles 0)
    (set-goal produce-condottiero 0)
    (set-goal produce-scouts 0)
    (set-goal produce-knights 0)
    (set-goal produce-camels 0)
    (set-goal produce-battle-elephants 0)
    (set-goal produce-konniks 0)
    (set-goal produce-battering-rams 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal produce-mangonels 0)
    (set-goal produce-scorpions 0)
    (set-goal produce-bombard-cannons 0)
    (set-goal produce-trebuchets 0)
    (set-goal produce-armored-elephants 0)
    (set-goal produce-monks 0)
    (set-goal produce-missionaries 0)
    (set-goal produce-villagers 0)
    (set-goal produce-trade-carts 0)
    (set-goal produce-unique-units 0)
    (set-goal produce-fishing-ships 0)
    (set-goal produce-transport-ships 0)
    (set-goal produce-galleys 0)
    (set-goal produce-fire-ships 0)
    (set-goal produce-cannon-galleons 0)
    (set-goal produce-demolition-ships 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal good-archers 0)
    (set-goal good-hand-cannoneers 0)
    (set-goal good-skirmishers 0)
    (set-goal good-cavalry-archers 0)
    (set-goal good-genitours 0)
    (set-goal good-militia 0)
    (set-goal good-spearmen 0)
    (set-goal good-eagles 0)
    (set-goal good-condottiero 0)
    (set-goal good-scouts 0)
    (set-goal good-knights 0)
    (set-goal good-camels 0)
    (set-goal good-battle-elephants 0)
    (set-goal good-konniks 0)
    (set-goal good-battering-rams 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal good-mangonels 0)
    (set-goal good-scorpions 0)
    (set-goal good-bombard-cannons 0)
    (set-goal good-trebuchets 0)
    (set-goal good-armored-elephants 0)
    (set-goal good-monks 0)
    (set-goal good-missionaries 0)
    (set-goal good-villagers 0)
    (set-goal good-trade-carts 0)
    (set-goal good-unique-units 0)
    (set-goal good-fishing-ships 0)
    (set-goal good-transport-ships 0)
    (set-goal good-galleys 0)
    (set-goal good-fire-ships 0)
    (set-goal good-cannon-galleons 0)
    (set-goal good-demolition-ships 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal escrowed-wood 0)
    (set-goal escrowed-food 0)
    (set-goal escrowed-gold 0)
    (set-goal escrowed-stone 0)
    (set-goal non-escrowed-wood 0)
    (set-goal non-escrowed-food 0)
    (set-goal non-escrowed-gold 0)
    (set-goal non-escrowed-stone 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact escrow-amount wood escrowed-wood)
    (up-get-fact escrow-amount food escrowed-food)
    (up-get-fact escrow-amount gold escrowed-gold)
    (up-get-fact escrow-amount stone escrowed-stone)
    (up-get-fact resource-amount wood non-escrowed-wood)
    (up-get-fact resource-amount food non-escrowed-food)
    (up-get-fact resource-amount gold non-escrowed-gold)
    (up-get-fact resource-amount stone non-escrowed-stone)
    (up-modify-goal non-escrowed-wood g:- escrowed-wood)
    (up-modify-goal non-escrowed-food g:- escrowed-food)
    (up-modify-goal non-escrowed-gold g:- escrowed-gold)
    (up-modify-goal non-escrowed-stone g:- escrowed-stone)
)
(defrule
    (true)
=>
    (set-goal game-time-goal 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact game-time 0 game-time-goal)
)
(defrule
    (true)
=>
    (set-goal no-gold-mining-time 0)
    (set-goal no-gold-mining-start -1)
    (disable-self)
)
(defrule
    (goal no-gold-mining-start -1)
    (unit-type-count 579 == 0)
    (unit-type-count 581 == 0)
=>
    (up-get-fact game-time 0 no-gold-mining-start)
)
(defrule
    (nand
      (unit-type-count 579 == 0)
      (unit-type-count 581 == 0)
    )
=>
    (set-goal no-gold-mining-start -1)
)
(defrule
    (goal no-gold-mining-start -1)
=>
    (set-goal no-gold-mining-time 0)
)
(defrule
    (not
      (goal no-gold-mining-start -1)
    )
=>
    (up-get-fact game-time 0 no-gold-mining-time)
    (up-modify-goal no-gold-mining-time g:- no-gold-mining-start)
)
(defrule
    (true)
=>
    (set-goal population-space-remaining 0)
    (set-goal current-population-goal 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact population-cap 0 population-space-remaining)
    (up-get-fact population 0 current-population-goal)
    (up-modify-goal population-space-remaining g:- current-population-goal)
)
(defrule
    (true)
=>
    (set-goal total-villagers 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact unit-type-count villager total-villagers)
)
(defrule
    (true)
=>
    (set-goal total-trade-carts 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact unit-type-count trade-cart total-trade-carts)
)
(defrule
    (true)
=>
    (set-goal total-fishing-ships 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact unit-type-count fishing-ship total-fishing-ships)
)
(defrule
    (true)
=>
    (set-goal town-center-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total town-center town-center-count)
)
(defrule
    (true)
=>
    (set-goal my-score 0)
    (set-goal highest-enemy-score 0)
    (set-goal lowest-enemy-score 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact current-score 0 my-score)
    (up-get-fact-max any-enemy current-score 0 highest-enemy-score)
    (up-get-fact-min any-enemy current-score 0 lowest-enemy-score)
)
(defrule
    (true)
=>
    (set-goal score-percentage 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-modify-goal score-percentage g:= my-score)
    (up-modify-goal score-percentage c:* 100)
    (up-modify-goal score-percentage g:/ highest-enemy-score)
)
(defrule
    (true)
=>
    (set-goal previous-target-player-score 0)
    (set-goal target-player-score 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-target-fact current-score 0 target-player-score)
    (set-goal target-player-score-delta 0)
    (up-modify-goal target-player-score-delta g:= target-player-score)
    (up-modify-goal target-player-score-delta g:- previous-target-player-score)
    (up-modify-goal previous-target-player-score g:= target-player-score)
)
(defrule
    (true)
=>
    (set-goal my-military-population 0)
    (set-goal target-military-population 0)
    (set-goal target-military-percentage 0)
    (set-goal largest-enemy-military-population 0)
    (set-goal largest-neutral-military-population 0)
    (set-goal largest-enemy-military-percentage 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact military-population 0 my-military-population)
    (up-get-target-fact military-population 0 target-military-population)
    (up-get-fact-max any-enemy military-population 0 largest-enemy-military-population)
    (up-get-fact-max any-neutral military-population 0 largest-neutral-military-population)
    (up-modify-goal target-military-percentage g:= my-military-population)
    (up-modify-goal target-military-percentage c:* 100)
    (up-modify-goal largest-enemy-military-percentage g:= target-military-percentage)
    (up-modify-goal target-military-percentage g:/ target-military-population)
)
(defrule
    (up-compare-goal largest-neutral-military-population g:> largest-enemy-military-population)
=>
    (up-modify-goal largest-enemy-military-percentage g:/ largest-neutral-military-population)
)
(defrule
    (not
      (up-compare-goal largest-neutral-military-population g:> largest-enemy-military-population)
    )
=>
    (up-modify-goal largest-enemy-military-percentage g:/ largest-enemy-military-population)
)
(defrule
    (true)
=>
    (set-goal my-civilian-population 0)
    (set-goal target-civilian-population 0)
    (set-goal target-civilian-percentage 0)
    (set-goal largest-enemy-civilian-population 0)
    (set-goal largest-neutral-civilian-population 0)
    (set-goal largest-enemy-civilian-percentage 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact civilian-population 0 my-civilian-population)
    (up-get-target-fact civilian-population 0 target-civilian-population)
    (up-get-fact-max any-enemy civilian-population 0 largest-enemy-civilian-population)
    (up-get-fact-max any-neutral civilian-population 0 largest-neutral-civilian-population)
    (up-modify-goal target-civilian-percentage g:= my-civilian-population)
    (up-modify-goal target-civilian-percentage c:* 100)
    (up-modify-goal largest-enemy-civilian-percentage g:= target-civilian-percentage)
    (up-modify-goal target-civilian-percentage g:/ target-civilian-population)
)
(defrule
    (up-compare-goal largest-neutral-civilian-population g:> largest-enemy-civilian-population)
=>
    (up-modify-goal largest-enemy-civilian-percentage g:/ largest-neutral-civilian-population)
)
(defrule
    (not
      (up-compare-goal largest-neutral-civilian-population g:> largest-enemy-civilian-population)
    )
=>
    (up-modify-goal largest-enemy-civilian-percentage g:/ largest-enemy-civilian-population)
)
(defrule
    (true)
=>
    (set-goal my-warboat-count 0)
    (set-goal target-warboat-count 0)
    (set-goal target-warboat-percentage 0)
    (set-goal largest-enemy-warboat-count 0)
    (set-goal largest-neutral-warboat-count 0)
    (set-goal largest-enemy-warboat-percentage 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact warboat-count 0 my-warboat-count)
    (up-get-target-fact warboat-count 0 target-warboat-count)
    (up-get-fact-max any-enemy warboat-count 0 largest-enemy-warboat-count)
    (up-get-fact-max any-neutral warboat-count 0 largest-neutral-warboat-count)
    (up-modify-goal target-warboat-percentage g:= my-warboat-count)
    (up-modify-goal target-warboat-percentage c:* 100)
    (up-modify-goal largest-enemy-warboat-percentage g:= target-warboat-percentage)
    (up-modify-goal target-warboat-percentage g:/ target-warboat-count)
)
(defrule
    (up-compare-goal largest-neutral-warboat-count g:> largest-enemy-warboat-count)
=>
    (up-modify-goal largest-enemy-warboat-percentage g:/ largest-neutral-warboat-count)
)
(defrule
    (not
      (up-compare-goal largest-neutral-warboat-count g:> largest-enemy-warboat-count)
    )
=>
    (up-modify-goal largest-enemy-warboat-percentage g:/ largest-enemy-warboat-count)
)
(defrule
    (true)
=>
    (set-goal threat-time 0)
    (set-goal threat-player 0)
    (set-goal threat-source 0)
    (set-goal threat-target 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-threat-data threat-time threat-player threat-source threat-target)
)
(defrule
    (town-under-attack)
    (strategic-number sn-maximum-town-size <= 30)
=>
    (set-goal under-attack 1)
)
(defrule
    (nand
      (town-under-attack)
      (strategic-number sn-maximum-town-size <= 30)
    )
=>
    (set-goal under-attack 0)
)
(defrule
    (true)
=>
    (set-goal ranged-blacksmith-techs-done 0)
    (set-goal cavalry-blacksmith-techs-done 0)
    (set-goal infantry-blacksmith-techs-done 0)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-modify-goal ranged-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-modify-goal ranged-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-modify-goal ranged-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-modify-goal ranged-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-modify-goal ranged-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-modify-goal ranged-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-modify-goal infantry-blacksmith-techs-done c:+ 1)
    (up-modify-goal cavalry-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-modify-goal infantry-blacksmith-techs-done c:+ 1)
    (up-modify-goal cavalry-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-modify-goal infantry-blacksmith-techs-done c:+ 1)
    (up-modify-goal cavalry-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-modify-goal cavalry-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-modify-goal cavalry-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-modify-goal cavalry-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-modify-goal infantry-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-modify-goal infantry-blacksmith-techs-done c:+ 1)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-modify-goal infantry-blacksmith-techs-done c:+ 1)
)
(defrule
    (true)
=>
    (set-goal partial-ranged-blacksmith-investment 0)
    (set-goal full-ranged-blacksmith-investment 0)
    (set-goal partial-cavalry-blacksmith-investment 0)
    (set-goal full-cavalry-blacksmith-investment 0)
    (set-goal partial-infantry-blacksmith-investment 0)
    (set-goal full-infantry-blacksmith-investment 0)
)
(defrule
    (goal ranged-blacksmith-techs-done 1)
    (current-age == feudal-age)
=>
    (set-goal partial-ranged-blacksmith-investment 1)
)
(defrule
    (goal ranged-blacksmith-techs-done 2)
    (not
      (goal ranged-blacksmith-techs-done 1)
    )
    (current-age == feudal-age)
=>
    (set-goal partial-ranged-blacksmith-investment 1)
    (set-goal full-ranged-blacksmith-investment 1)
)
(defrule
    (goal ranged-blacksmith-techs-done 3)
    (current-age == castle-age)
    (not
      (current-age == feudal-age)
    )
=>
    (set-goal partial-ranged-blacksmith-investment 1)
)
(defrule
    (goal ranged-blacksmith-techs-done 4)
    (not
      (goal ranged-blacksmith-techs-done 3)
    )
    (current-age == castle-age)
    (not
      (current-age == feudal-age)
    )
=>
    (set-goal partial-ranged-blacksmith-investment 1)
    (set-goal full-ranged-blacksmith-investment 1)
)
(defrule
    (goal ranged-blacksmith-techs-done 5)
    (current-age == imperial-age)
    (not
      (current-age == feudal-age)
    )
    (not
      (current-age == castle-age)
    )
=>
    (set-goal partial-ranged-blacksmith-investment 1)
)
(defrule
    (goal ranged-blacksmith-techs-done 6)
    (not
      (goal ranged-blacksmith-techs-done 5)
    )
    (current-age == imperial-age)
    (not
      (current-age == feudal-age)
    )
    (not
      (current-age == castle-age)
    )
=>
    (set-goal partial-ranged-blacksmith-investment 1)
    (set-goal full-ranged-blacksmith-investment 1)
)
(defrule
    (goal cavalry-blacksmith-techs-done 1)
    (current-age == feudal-age)
=>
    (set-goal partial-cavalry-blacksmith-investment 1)
)
(defrule
    (goal cavalry-blacksmith-techs-done 2)
    (not
      (goal cavalry-blacksmith-techs-done 1)
    )
    (current-age == feudal-age)
=>
    (set-goal partial-cavalry-blacksmith-investment 1)
    (set-goal full-cavalry-blacksmith-investment 1)
)
(defrule
    (goal cavalry-blacksmith-techs-done 3)
    (current-age == castle-age)
    (not
      (current-age == feudal-age)
    )
=>
    (set-goal partial-cavalry-blacksmith-investment 1)
)
(defrule
    (goal cavalry-blacksmith-techs-done 4)
    (not
      (goal cavalry-blacksmith-techs-done 3)
    )
    (current-age == castle-age)
    (not
      (current-age == feudal-age)
    )
=>
    (set-goal partial-cavalry-blacksmith-investment 1)
    (set-goal full-cavalry-blacksmith-investment 1)
)
(defrule
    (goal cavalry-blacksmith-techs-done 5)
    (current-age == imperial-age)
    (not
      (current-age == feudal-age)
    )
    (not
      (current-age == castle-age)
    )
=>
    (set-goal partial-cavalry-blacksmith-investment 1)
)
(defrule
    (goal cavalry-blacksmith-techs-done 6)
    (not
      (goal cavalry-blacksmith-techs-done 5)
    )
    (current-age == imperial-age)
    (not
      (current-age == feudal-age)
    )
    (not
      (current-age == castle-age)
    )
=>
    (set-goal partial-cavalry-blacksmith-investment 1)
    (set-goal full-cavalry-blacksmith-investment 1)
)
(defrule
    (goal infantry-blacksmith-techs-done 1)
    (current-age == feudal-age)
=>
    (set-goal partial-infantry-blacksmith-investment 1)
)
(defrule
    (goal infantry-blacksmith-techs-done 2)
    (not
      (goal infantry-blacksmith-techs-done 1)
    )
    (current-age == feudal-age)
=>
    (set-goal partial-infantry-blacksmith-investment 1)
    (set-goal full-infantry-blacksmith-investment 1)
)
(defrule
    (goal infantry-blacksmith-techs-done 3)
    (current-age == castle-age)
    (not
      (current-age == feudal-age)
    )
=>
    (set-goal partial-infantry-blacksmith-investment 1)
)
(defrule
    (goal infantry-blacksmith-techs-done 4)
    (not
      (goal infantry-blacksmith-techs-done 3)
    )
    (current-age == castle-age)
    (not
      (current-age == feudal-age)
    )
=>
    (set-goal partial-infantry-blacksmith-investment 1)
    (set-goal full-infantry-blacksmith-investment 1)
)
(defrule
    (goal infantry-blacksmith-techs-done 5)
    (current-age == imperial-age)
    (not
      (current-age == feudal-age)
    )
    (not
      (current-age == castle-age)
    )
=>
    (set-goal partial-infantry-blacksmith-investment 1)
)
(defrule
    (goal infantry-blacksmith-techs-done 6)
    (not
      (goal infantry-blacksmith-techs-done 5)
    )
    (current-age == imperial-age)
    (not
      (current-age == feudal-age)
    )
    (not
      (current-age == castle-age)
    )
=>
    (set-goal partial-infantry-blacksmith-investment 1)
    (set-goal full-infantry-blacksmith-investment 1)
)
(defrule
    (true)
=>
    (set-goal unique-unit-is-cavalry 0)
    (set-goal unique-unit-is-infantry 0)
    (set-goal unique-unit-is-ranged 0)
    (set-goal unique-unit-is-cavalry-archer 0)
    (set-goal unique-unit-is-expensive 0)
    (set-goal unique-unit-counters-cavalry 0)
    (set-goal unique-unit-counters-infantry 0)
    (set-goal unique-unit-counters-ranged 0)
    (set-goal unique-unit-counters-cavalry-archer 0)
    (set-goal unique-unit-counters-unique-unit 0)
    (disable-self)
)
(defrule
    (players-civ my-player-number aztec)
=>
    (set-goal unique-unit-is-infantry 1)
    (set-goal unique-unit-counters-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number berbers)
=>
    (set-goal unique-unit-is-cavalry-archer 1)
    (set-goal unique-unit-counters-cavalry-archer 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number briton)
=>
    (set-goal unique-unit-is-ranged 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number burmese)
=>
    (set-goal unique-unit-is-cavalry-archer 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number bulgarians)
=>
    (set-goal unique-unit-is-cavalry 1)
    (set-goal unique-unit-is-infantry 1)
    (set-goal unique-unit-is-expensive 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number byzantine)
=>
    (set-goal unique-unit-is-cavalry 1)
    (set-goal unique-unit-counters-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number celtic)
=>
    (set-goal unique-unit-is-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number chinese)
=>
    (set-goal unique-unit-is-ranged 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number ethiopian)
=>
    (set-goal unique-unit-is-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number frankish)
=>
    (set-goal unique-unit-is-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number gothic)
=>
    (set-goal unique-unit-is-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number hun)
=>
    (set-goal unique-unit-is-cavalry 1)
    (set-goal unique-unit-is-expensive 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number incan)
=>
    (set-goal unique-unit-is-infantry 1)
    (set-goal unique-unit-counters-cavalry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number indian)
=>
    (set-goal unique-unit-is-cavalry-archer 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number italian)
=>
    (set-goal unique-unit-is-ranged 1)
    (set-goal unique-unit-counters-cavalry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number japanese)
=>
    (set-goal unique-unit-is-infantry 1)
    (set-goal unique-unit-counters-unique-unit 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number khmer)
=>
    (set-goal unique-unit-is-cavalry 1)
    (set-goal unique-unit-counters-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number korean)
=>
    (set-goal unique-unit-is-cavalry-archer 1)
    (set-goal unique-unit-counters-ranged 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number magyar)
=>
    (set-goal unique-unit-is-cavalry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number malay)
=>
    (set-goal unique-unit-is-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number malian)
=>
    (set-goal unique-unit-is-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number mayan)
=>
    (set-goal unique-unit-is-ranged 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number mongol)
=>
    (set-goal unique-unit-is-cavalry-archer 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number persian)
=>
    (set-goal unique-unit-is-cavalry 1)
    (set-goal unique-unit-is-expensive 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number portuguese)
=>
    (set-goal unique-unit-is-expensive 1)
    (set-goal unique-unit-counters-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number saracen)
=>
    (set-goal unique-unit-is-cavalry 1)
    (set-goal unique-unit-counters-cavalry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number slavic)
=>
    (set-goal unique-unit-is-cavalry 1)
    (set-goal unique-unit-is-expensive 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number spanish)
=>
    (set-goal unique-unit-is-cavalry-archer 1)
    (set-goal unique-unit-is-expensive 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number teutonic)
=>
    (set-goal unique-unit-is-infantry 1)
    (set-goal unique-unit-is-expensive 1)
    (set-goal unique-unit-counters-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number turkish)
=>
    (set-goal unique-unit-is-ranged 1)
    (set-goal unique-unit-counters-infantry 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number vietnamese)
=>
    (set-goal unique-unit-is-ranged 1)
    (set-goal unique-unit-counters-ranged 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number viking)
=>
    (set-goal unique-unit-is-infantry 1)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal ally-players-count 0)
    (set-goal neutral-players-count 0)
    (set-goal enemy-players-count 0)
)
(defrule
    (stance-toward 1 ally)
    (player-in-game 1)
=>
    (up-modify-goal ally-players-count c:+ 1)
)
(defrule
    (stance-toward 1 neutral)
    (not
      (stance-toward 1 ally)
    )
    (player-in-game 1)
=>
    (up-modify-goal neutral-players-count c:+ 1)
)
(defrule
    (stance-toward 1 enemy)
    (not
      (stance-toward 1 ally)
    )
    (not
      (stance-toward 1 neutral)
    )
    (player-in-game 1)
=>
    (up-modify-goal enemy-players-count c:+ 1)
)
(defrule
    (stance-toward 2 ally)
    (player-in-game 2)
=>
    (up-modify-goal ally-players-count c:+ 1)
)
(defrule
    (stance-toward 2 neutral)
    (not
      (stance-toward 2 ally)
    )
    (player-in-game 2)
=>
    (up-modify-goal neutral-players-count c:+ 1)
)
(defrule
    (stance-toward 2 enemy)
    (not
      (stance-toward 2 ally)
    )
    (not
      (stance-toward 2 neutral)
    )
    (player-in-game 2)
=>
    (up-modify-goal enemy-players-count c:+ 1)
)
(defrule
    (stance-toward 3 ally)
    (player-in-game 3)
=>
    (up-modify-goal ally-players-count c:+ 1)
)
(defrule
    (stance-toward 3 neutral)
    (not
      (stance-toward 3 ally)
    )
    (player-in-game 3)
=>
    (up-modify-goal neutral-players-count c:+ 1)
)
(defrule
    (stance-toward 3 enemy)
    (not
      (stance-toward 3 ally)
    )
    (not
      (stance-toward 3 neutral)
    )
    (player-in-game 3)
=>
    (up-modify-goal enemy-players-count c:+ 1)
)
(defrule
    (stance-toward 4 ally)
    (player-in-game 4)
=>
    (up-modify-goal ally-players-count c:+ 1)
)
(defrule
    (stance-toward 4 neutral)
    (not
      (stance-toward 4 ally)
    )
    (player-in-game 4)
=>
    (up-modify-goal neutral-players-count c:+ 1)
)
(defrule
    (stance-toward 4 enemy)
    (not
      (stance-toward 4 ally)
    )
    (not
      (stance-toward 4 neutral)
    )
    (player-in-game 4)
=>
    (up-modify-goal enemy-players-count c:+ 1)
)
(defrule
    (stance-toward 5 ally)
    (player-in-game 5)
=>
    (up-modify-goal ally-players-count c:+ 1)
)
(defrule
    (stance-toward 5 neutral)
    (not
      (stance-toward 5 ally)
    )
    (player-in-game 5)
=>
    (up-modify-goal neutral-players-count c:+ 1)
)
(defrule
    (stance-toward 5 enemy)
    (not
      (stance-toward 5 ally)
    )
    (not
      (stance-toward 5 neutral)
    )
    (player-in-game 5)
=>
    (up-modify-goal enemy-players-count c:+ 1)
)
(defrule
    (stance-toward 6 ally)
    (player-in-game 6)
=>
    (up-modify-goal ally-players-count c:+ 1)
)
(defrule
    (stance-toward 6 neutral)
    (not
      (stance-toward 6 ally)
    )
    (player-in-game 6)
=>
    (up-modify-goal neutral-players-count c:+ 1)
)
(defrule
    (stance-toward 6 enemy)
    (not
      (stance-toward 6 ally)
    )
    (not
      (stance-toward 6 neutral)
    )
    (player-in-game 6)
=>
    (up-modify-goal enemy-players-count c:+ 1)
)
(defrule
    (stance-toward 7 ally)
    (player-in-game 7)
=>
    (up-modify-goal ally-players-count c:+ 1)
)
(defrule
    (stance-toward 7 neutral)
    (not
      (stance-toward 7 ally)
    )
    (player-in-game 7)
=>
    (up-modify-goal neutral-players-count c:+ 1)
)
(defrule
    (stance-toward 7 enemy)
    (not
      (stance-toward 7 ally)
    )
    (not
      (stance-toward 7 neutral)
    )
    (player-in-game 7)
=>
    (up-modify-goal enemy-players-count c:+ 1)
)
(defrule
    (stance-toward 8 ally)
    (player-in-game 8)
=>
    (up-modify-goal ally-players-count c:+ 1)
)
(defrule
    (stance-toward 8 neutral)
    (not
      (stance-toward 8 ally)
    )
    (player-in-game 8)
=>
    (up-modify-goal neutral-players-count c:+ 1)
)
(defrule
    (stance-toward 8 enemy)
    (not
      (stance-toward 8 ally)
    )
    (not
      (stance-toward 8 neutral)
    )
    (player-in-game 8)
=>
    (up-modify-goal enemy-players-count c:+ 1)
)
(defrule
    (stance-toward my-player-number ally)
=>
    (up-modify-goal ally-players-count c:- 1)
)
(defrule
    (stance-toward my-player-number neutral)
    (not
      (stance-toward my-player-number ally)
    )
=>
    (up-modify-goal neutral-players-count c:- 1)
)
(defrule
    (stance-toward my-player-number enemy)
    (not
      (stance-toward my-player-number ally)
    )
    (not
      (stance-toward my-player-number neutral)
    )
=>
    (up-modify-goal enemy-players-count c:- 1)
)
(defrule
    (true)
=>
    (set-goal neutral-or-enemy-players-count 0)
    (up-modify-goal neutral-or-enemy-players-count g:+ enemy-players-count)
    (up-modify-goal neutral-or-enemy-players-count g:+ neutral-players-count)
)
(defrule
    (true)
=>
    (set-goal team-game 0)
    (set-goal free-for-all 0)
    (set-goal locked-teams 1)
    (set-stance my-player-number enemy)
    (disable-self)
)
(defrule
    (stance-toward my-player-number enemy)
=>
    (set-goal locked-teams 0)
    (set-stance my-player-number ally)
    (disable-self)
)
(defrule
    (goal free-for-all 0)
    (players-stance any-ally ally)
    (stance-toward any-ally ally)
=>
    (set-goal team-game 1)
    (disable-self)
)
(defrule
    (goal team-game 0)
    (player-valid 1)
    (player-valid 2)
    (player-valid 3)
=>
    (set-goal free-for-all 1)
    (disable-self)
)
(defrule
    (current-age == dark-age)
    (up-compare-goal desired-military-buildings-per-type c:< dark-age-military-buildings)
=>
    (set-goal desired-military-buildings-per-type dark-age-military-buildings)
)
(defrule
    (current-age == feudal-age)
    (up-compare-goal desired-military-buildings-per-type c:< feudal-age-military-buildings)
    (nand
      (current-age == dark-age)
      (up-compare-goal desired-military-buildings-per-type c:< dark-age-military-buildings)
    )
=>
    (set-goal desired-military-buildings-per-type feudal-age-military-buildings)
)
(defrule
    (current-age == castle-age)
    (up-compare-goal desired-military-buildings-per-type c:< castle-age-military-buildings)
    (nand
      (current-age == dark-age)
      (up-compare-goal desired-military-buildings-per-type c:< dark-age-military-buildings)
    )
    (nand
      (current-age == feudal-age)
      (up-compare-goal desired-military-buildings-per-type c:< feudal-age-military-buildings)
    )
=>
    (set-goal desired-military-buildings-per-type castle-age-military-buildings)
)
(defrule
    (current-age == imperial-age)
    (up-compare-goal desired-military-buildings-per-type c:< imperial-age-military-buildings)
    (nand
      (current-age == feudal-age)
      (up-compare-goal desired-military-buildings-per-type c:< feudal-age-military-buildings)
    )
    (nand
      (current-age == dark-age)
      (up-compare-goal desired-military-buildings-per-type c:< dark-age-military-buildings)
    )
    (nand
      (current-age == castle-age)
      (up-compare-goal desired-military-buildings-per-type c:< castle-age-military-buildings)
    )
=>
    (set-goal desired-military-buildings-per-type imperial-age-military-buildings)
)
(defrule
    (wood-amount >= wood-unit-threshold)
=>
    (set-goal enough-wood-for-units 1)
)
(defrule
    (not
      (wood-amount >= wood-unit-threshold)
    )
=>
    (set-goal enough-wood-for-units 0)
)
(defrule
    (food-amount >= food-unit-threshold)
=>
    (set-goal enough-food-for-units 1)
)
(defrule
    (not
      (food-amount >= food-unit-threshold)
    )
=>
    (set-goal enough-food-for-units 0)
)
(defrule
    (gold-amount >= gold-unit-threshold)
=>
    (set-goal enough-gold-for-units 1)
)
(defrule
    (not
      (gold-amount >= gold-unit-threshold)
    )
=>
    (set-goal enough-gold-for-units 0)
)
(defrule
    (or
      (goal under-attack 1)
      (military-population < 10)
    )
=>
    (set-goal enough-wood-for-units 1)
    (set-goal enough-food-for-units 1)
    (set-goal enough-gold-for-units 1)
)
(defrule
    (true)
=>
    (up-modify-goal research-level g:= attempted-researches-importance)
    (set-goal attempted-researches 0)
    (set-goal attempted-researches-importance 0)
)
(defrule
    (nor
      (building-type-count town-center > 0)
      (game-time >= 8)
    )
=>
    (up-jump-rule 73)
)
(defrule
    (not
      (goal desired-age feudal-age)
    )
=>
    (up-jump-rule 9)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build lumber-camp)
    (up-pending-objects c: lumber-camp < 5)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total lumber-camp == 0)
=>
    (build lumber-camp)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mill)
    (up-pending-objects c: mill < 5)
    (building-type-count-total mill < 1)
    (building-type-count-total mill == 0)
=>
    (build mill)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: feudal-age < research-pending)
    (research-available feudal-age)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research feudal-age)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available feudal-age)
    (building-type-count town-center >= 1)
=>
    (research feudal-age)
)
(defrule
    (not
      (goal desired-age castle-age)
    )
=>
    (up-jump-rule 22)
)
(defrule
    (research-completed castle-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed castle-age)
=>
    (up-jump-rule 9)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build lumber-camp)
    (up-pending-objects c: lumber-camp < 5)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total lumber-camp == 0)
=>
    (build lumber-camp)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mill)
    (up-pending-objects c: mill < 5)
    (building-type-count-total mill < 1)
    (building-type-count-total mill == 0)
=>
    (build mill)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: feudal-age < research-pending)
    (research-available feudal-age)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research feudal-age)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available feudal-age)
    (building-type-count town-center >= 1)
=>
    (research feudal-age)
)
(defrule
    (research-completed castle-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (nand
      (and
        (building-type-count archery-range == 0)
        (building-type-count stable == 0)
      )
      (not
        (research-completed castle-age)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (wood-amount >= 200)
    (building-type-count-total market == 0)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (gold-amount > 400)
    (can-buy-commodity food)
    (food-amount < 800)
    (not
      (research-completed castle-age)
    )
=>
    (buy-commodity food)
)
(defrule
    (food-amount > 900)
    (can-sell-commodity food)
    (gold-amount < 200)
    (not
      (research-completed castle-age)
    )
=>
    (sell-commodity food)
)
(defrule
    (wood-amount > 400)
    (can-sell-commodity wood)
    (gold-amount < 200)
    (not
      (research-completed castle-age)
    )
=>
    (sell-commodity wood)
)
(defrule
    (research-completed castle-age)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: castle-age < research-pending)
    (research-available castle-age)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research castle-age)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available castle-age)
    (building-type-count town-center >= 1)
=>
    (research castle-age)
)
(defrule
    (not
      (goal desired-age imperial-age)
    )
=>
    (up-jump-rule 39)
)
(defrule
    (research-completed imperial-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed imperial-age)
=>
    (up-jump-rule 22)
)
(defrule
    (research-completed castle-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed castle-age)
=>
    (up-jump-rule 9)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build lumber-camp)
    (up-pending-objects c: lumber-camp < 5)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total lumber-camp == 0)
=>
    (build lumber-camp)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mill)
    (up-pending-objects c: mill < 5)
    (building-type-count-total mill < 1)
    (building-type-count-total mill == 0)
=>
    (build mill)
)
(defrule
    (research-completed feudal-age)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: feudal-age < research-pending)
    (research-available feudal-age)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research feudal-age)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available feudal-age)
    (building-type-count town-center >= 1)
=>
    (research feudal-age)
)
(defrule
    (research-completed castle-age)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (nand
      (and
        (building-type-count archery-range == 0)
        (building-type-count stable == 0)
      )
      (not
        (research-completed castle-age)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (wood-amount >= 200)
    (building-type-count-total market == 0)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (gold-amount > 400)
    (can-buy-commodity food)
    (food-amount < 800)
    (not
      (research-completed castle-age)
    )
=>
    (buy-commodity food)
)
(defrule
    (food-amount > 900)
    (can-sell-commodity food)
    (gold-amount < 200)
    (not
      (research-completed castle-age)
    )
=>
    (sell-commodity food)
)
(defrule
    (wood-amount > 400)
    (can-sell-commodity wood)
    (gold-amount < 200)
    (not
      (research-completed castle-age)
    )
=>
    (sell-commodity wood)
)
(defrule
    (research-completed castle-age)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: castle-age < research-pending)
    (research-available castle-age)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research castle-age)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available castle-age)
    (building-type-count town-center >= 1)
=>
    (research castle-age)
)
(defrule
    (nand
      (or
        (building-type-count monastery == 0)
        (building-type-count university == 0)
      )
      (and
        (strategic-number sn-stone-gatherer-percentage > 0)
        (not
          (research-completed imperial-age)
        )
      )
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (strategic-number sn-stone-gatherer-percentage > 0)
      )
      (not
        (research-completed imperial-age)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (nand
      (not
        (strategic-number sn-stone-gatherer-percentage > 0)
      )
      (not
        (research-completed imperial-age)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed imperial-age)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: imperial-age < research-pending)
    (research-available imperial-age)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research imperial-age)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available imperial-age)
    (building-type-count town-center >= 1)
=>
    (research imperial-age)
)
(defrule
    (nor
      (building-type-count town-center > 0)
      (game-time >= 8)
    )
=>
    (up-jump-rule 69)
)
(defrule
    (nand
      (current-age == imperial-age)
      (building-type-count castle >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (research-completed ri-conscription)
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (research-completed ri-conscription)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-conscription < research-pending)
    (research-available ri-conscription)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-conscription)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-conscription)
    (building-type-count castle >= 1)
=>
    (research ri-conscription)
)
(defrule
    (not
      (players-unit-type-count any-enemy monk-set >= 10)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-heresy)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-heresy)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-heresy < research-pending)
    (research-available ri-heresy)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-heresy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-heresy)
    (building-type-count monastery >= 1)
=>
    (research ri-heresy)
)
(defrule
    (not
      (players-unit-type-count any-enemy monk-set >= 10)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-faith)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-faith)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-faith < research-pending)
    (research-available ri-faith)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-faith)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-faith)
    (building-type-count monastery >= 1)
=>
    (research ri-faith)
)
(defrule
    (not
      (players-unit-type-count any-enemy missionary >= 10)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-heresy)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-heresy)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-heresy < research-pending)
    (research-available ri-heresy)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-heresy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-heresy)
    (building-type-count monastery >= 1)
=>
    (research ri-heresy)
)
(defrule
    (not
      (players-unit-type-count any-enemy missionary >= 10)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-faith)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-faith)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-faith < research-pending)
    (research-available ri-faith)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-faith)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-faith)
    (building-type-count monastery >= 1)
=>
    (research ri-faith)
)
(defrule
    (nand
      (current-age == imperial-age)
      (goal team-game 1)
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-banking)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (wood-amount >= 200)
    (building-type-count-total market == 0)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-banking)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-coinage)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (wood-amount >= 200)
    (building-type-count-total market == 0)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-coinage)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-coinage < research-pending)
    (research-available ri-coinage)
    (building-type-count market >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-coinage)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-coinage)
    (building-type-count market >= 1)
=>
    (research ri-coinage)
)
(defrule
    (research-completed ri-banking)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-banking < research-pending)
    (research-available ri-banking)
    (building-type-count market >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-banking)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-banking)
    (building-type-count market >= 1)
=>
    (research ri-banking)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-grand-trunk-road)
      )
      (civ-selected indian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-grand-trunk-road)
      )
      (civ-selected indian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-grand-trunk-road < research-pending)
    (research-available ri-grand-trunk-road)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-grand-trunk-road)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-grand-trunk-road)
    (building-type-count castle >= 1)
=>
    (research ri-grand-trunk-road)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-paper-money)
      )
      (civ-selected vietnamese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-paper-money)
      )
      (civ-selected vietnamese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-paper-money < research-pending)
    (research-available ri-paper-money)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-paper-money)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-paper-money)
    (building-type-count castle >= 1)
=>
    (research ri-paper-money)
)
(defrule
    (nor
      (building-type-count town-center > 0)
      (game-time >= 8)
    )
=>
    (up-jump-rule 4258)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age >= feudal-age)
      (unit-available villager)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-loom)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-loom)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-loom < research-pending)
    (research-available ri-loom)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-loom)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-loom)
    (building-type-count town-center >= 1)
=>
    (research ri-loom)
)
(defrule
    (nand
      (current-age == feudal-age)
      (unit-available villager)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-wheel-barrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-wheel-barrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-wheel-barrow < research-pending)
    (research-available ri-wheel-barrow)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-wheel-barrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-wheel-barrow)
    (building-type-count town-center >= 1)
=>
    (research ri-wheel-barrow)
)
(defrule
    (nand
      (current-age == feudal-age)
      (unit-available villager)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-double-bit-axe)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build lumber-camp)
    (up-pending-objects c: lumber-camp < 5)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total lumber-camp == 0)
=>
    (build lumber-camp)
)
(defrule
    (research-completed ri-double-bit-axe)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-double-bit-axe < research-pending)
    (research-available ri-double-bit-axe)
    (building-type-count lumber-camp >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-double-bit-axe)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-double-bit-axe)
    (building-type-count lumber-camp >= 1)
=>
    (research ri-double-bit-axe)
)
(defrule
    (nand
      (current-age == feudal-age)
      (unit-available villager)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-horse-collar)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mill)
    (up-pending-objects c: mill < 5)
    (building-type-count-total mill < 1)
    (building-type-count-total mill == 0)
=>
    (build mill)
)
(defrule
    (research-completed ri-horse-collar)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-horse-collar < research-pending)
    (research-available ri-horse-collar)
    (building-type-count mill >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-horse-collar)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-horse-collar)
    (building-type-count mill >= 1)
=>
    (research ri-horse-collar)
)
(defrule
    (nand
      (resource-found gold)
      (and
        (current-age == feudal-age)
        (unit-available villager)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-gold-mining)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mining-camp)
    (up-pending-objects c: mining-camp < 5)
    (building-type-count-total mining-camp < 1)
    (building-type-count-total mining-camp == 0)
=>
    (build mining-camp)
)
(defrule
    (research-completed ri-gold-mining)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-gold-mining < research-pending)
    (research-available ri-gold-mining)
    (building-type-count mining-camp >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-gold-mining)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-gold-mining)
    (building-type-count mining-camp >= 1)
=>
    (research ri-gold-mining)
)
(defrule
    (nand
      (current-age == castle-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (unit-available villager)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bow-saw)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build lumber-camp)
    (up-pending-objects c: lumber-camp < 5)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total lumber-camp == 0)
=>
    (build lumber-camp)
)
(defrule
    (research-completed ri-bow-saw)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-double-bit-axe)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build lumber-camp)
    (up-pending-objects c: lumber-camp < 5)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total lumber-camp == 0)
=>
    (build lumber-camp)
)
(defrule
    (research-completed ri-double-bit-axe)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-double-bit-axe < research-pending)
    (research-available ri-double-bit-axe)
    (building-type-count lumber-camp >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-double-bit-axe)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-double-bit-axe)
    (building-type-count lumber-camp >= 1)
=>
    (research ri-double-bit-axe)
)
(defrule
    (research-completed ri-bow-saw)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bow-saw < research-pending)
    (research-available ri-bow-saw)
    (building-type-count lumber-camp >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-bow-saw)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-bow-saw)
    (building-type-count lumber-camp >= 1)
=>
    (research ri-bow-saw)
)
(defrule
    (nand
      (current-age == castle-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (unit-available villager)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-heavy-plow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mill)
    (up-pending-objects c: mill < 5)
    (building-type-count-total mill < 1)
    (building-type-count-total mill == 0)
=>
    (build mill)
)
(defrule
    (research-completed ri-heavy-plow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-horse-collar)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mill)
    (up-pending-objects c: mill < 5)
    (building-type-count-total mill < 1)
    (building-type-count-total mill == 0)
=>
    (build mill)
)
(defrule
    (research-completed ri-horse-collar)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-horse-collar < research-pending)
    (research-available ri-horse-collar)
    (building-type-count mill >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-horse-collar)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-horse-collar)
    (building-type-count mill >= 1)
=>
    (research ri-horse-collar)
)
(defrule
    (research-completed ri-heavy-plow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-heavy-plow < research-pending)
    (research-available ri-heavy-plow)
    (building-type-count mill >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-heavy-plow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-heavy-plow)
    (building-type-count mill >= 1)
=>
    (research ri-heavy-plow)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (and
          (not
            (current-age == castle-age)
          )
          (unit-available villager)
        )
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-hand-cart)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-hand-cart)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-wheel-barrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-wheel-barrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-wheel-barrow < research-pending)
    (research-available ri-wheel-barrow)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-wheel-barrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-wheel-barrow)
    (building-type-count town-center >= 1)
=>
    (research ri-wheel-barrow)
)
(defrule
    (research-completed ri-hand-cart)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-hand-cart < research-pending)
    (research-available ri-hand-cart)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-hand-cart)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-hand-cart)
    (building-type-count town-center >= 1)
=>
    (research ri-hand-cart)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (and
          (not
            (current-age == castle-age)
          )
          (unit-available villager)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-two-man-saw)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build lumber-camp)
    (up-pending-objects c: lumber-camp < 5)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total lumber-camp == 0)
=>
    (build lumber-camp)
)
(defrule
    (research-completed ri-two-man-saw)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bow-saw)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build lumber-camp)
    (up-pending-objects c: lumber-camp < 5)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total lumber-camp == 0)
=>
    (build lumber-camp)
)
(defrule
    (research-completed ri-bow-saw)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-double-bit-axe)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build lumber-camp)
    (up-pending-objects c: lumber-camp < 5)
    (building-type-count-total lumber-camp < 1)
    (building-type-count-total lumber-camp == 0)
=>
    (build lumber-camp)
)
(defrule
    (research-completed ri-double-bit-axe)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-double-bit-axe < research-pending)
    (research-available ri-double-bit-axe)
    (building-type-count lumber-camp >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-double-bit-axe)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-double-bit-axe)
    (building-type-count lumber-camp >= 1)
=>
    (research ri-double-bit-axe)
)
(defrule
    (research-completed ri-bow-saw)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bow-saw < research-pending)
    (research-available ri-bow-saw)
    (building-type-count lumber-camp >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-bow-saw)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-bow-saw)
    (building-type-count lumber-camp >= 1)
=>
    (research ri-bow-saw)
)
(defrule
    (research-completed ri-two-man-saw)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-two-man-saw < research-pending)
    (research-available ri-two-man-saw)
    (building-type-count lumber-camp >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-two-man-saw)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-two-man-saw)
    (building-type-count lumber-camp >= 1)
=>
    (research ri-two-man-saw)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (and
          (not
            (current-age == castle-age)
          )
          (unit-available villager)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-crop-rotation)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mill)
    (up-pending-objects c: mill < 5)
    (building-type-count-total mill < 1)
    (building-type-count-total mill == 0)
=>
    (build mill)
)
(defrule
    (research-completed ri-crop-rotation)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-heavy-plow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mill)
    (up-pending-objects c: mill < 5)
    (building-type-count-total mill < 1)
    (building-type-count-total mill == 0)
=>
    (build mill)
)
(defrule
    (research-completed ri-heavy-plow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-horse-collar)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mill)
    (up-pending-objects c: mill < 5)
    (building-type-count-total mill < 1)
    (building-type-count-total mill == 0)
=>
    (build mill)
)
(defrule
    (research-completed ri-horse-collar)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-horse-collar < research-pending)
    (research-available ri-horse-collar)
    (building-type-count mill >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-horse-collar)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-horse-collar)
    (building-type-count mill >= 1)
=>
    (research ri-horse-collar)
)
(defrule
    (research-completed ri-heavy-plow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-heavy-plow < research-pending)
    (research-available ri-heavy-plow)
    (building-type-count mill >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-heavy-plow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-heavy-plow)
    (building-type-count mill >= 1)
=>
    (research ri-heavy-plow)
)
(defrule
    (research-completed ri-crop-rotation)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-crop-rotation < research-pending)
    (research-available ri-crop-rotation)
    (building-type-count mill >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-crop-rotation)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-crop-rotation)
    (building-type-count mill >= 1)
=>
    (research ri-crop-rotation)
)
(defrule
    (nand
      (resource-found gold)
      (and
        (current-age >= castle-age)
        (unit-available villager)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-gold-shaft-mining)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mining-camp)
    (up-pending-objects c: mining-camp < 5)
    (building-type-count-total mining-camp < 1)
    (building-type-count-total mining-camp == 0)
=>
    (build mining-camp)
)
(defrule
    (research-completed ri-gold-shaft-mining)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-gold-mining)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build mining-camp)
    (up-pending-objects c: mining-camp < 5)
    (building-type-count-total mining-camp < 1)
    (building-type-count-total mining-camp == 0)
=>
    (build mining-camp)
)
(defrule
    (research-completed ri-gold-mining)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-gold-mining < research-pending)
    (research-available ri-gold-mining)
    (building-type-count mining-camp >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-gold-mining)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-gold-mining)
    (building-type-count mining-camp >= 1)
=>
    (research ri-gold-mining)
)
(defrule
    (research-completed ri-gold-shaft-mining)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-gold-shaft-mining < research-pending)
    (research-available ri-gold-shaft-mining)
    (building-type-count mining-camp >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-gold-shaft-mining)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-gold-shaft-mining)
    (building-type-count mining-camp >= 1)
=>
    (research ri-gold-shaft-mining)
)
(defrule
    (unit-available villager)
=>
    (set-goal desired-villagers-with-subtractions 0)
    (disable-self)
)
(defrule
    (unit-available villager)
=>
    (up-modify-goal desired-villagers-with-subtractions g:= desired-villagers)
)
(defrule
    (goal produce-trade-carts 1)
    (unit-available villager)
=>
    (up-modify-goal desired-villagers-with-subtractions g:- desired-trade-carts)
)
(defrule
    (goal produce-fishing-ships 1)
    (unit-available villager)
=>
    (up-modify-goal desired-villagers-with-subtractions g:- desired-fishing-ships)
)
(defrule
    (building-type-count feitoria >= 1)
    (unit-available villager)
=>
    (set-goal feitoria-pop-usage 0)
    (disable-self)
)
(defrule
    (building-type-count feitoria >= 1)
    (unit-available villager)
=>
    (up-get-fact building-type-count feitoria feitoria-pop-usage)
    (up-modify-goal feitoria-pop-usage c:* 20)
    (up-modify-goal desired-villagers-with-subtractions g:- feitoria-pop-usage)
)
(defrule
    (can-train villager)
    (up-compare-goal total-villagers g:< desired-villagers-with-subtractions)
    (unit-available villager)
=>
    (train villager)
)
(defrule
    (up-compare-goal total-villagers g:> desired-villagers-with-subtractions)
    (up-compare-goal population-space-remaining c:<= 10)
    (not
      (up-compare-goal total-villagers g:< desired-villagers-with-subtractions)
    )
    (unit-available villager)
=>
    (delete-unit villager)
)
(defrule
    (nand
      (and
        (or
          (game-time >= 60)
          (or
            (civ-selected mayan)
            (civ-selected chinese)
          )
        )
        (up-pending-objects c: villager == 0)
      )
      (unit-available villager)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-loom)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
    (building-type-count-total town-center == 0)
    (building-type-count-total town-center-foundation == 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-loom)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-loom < research-pending)
    (research-available ri-loom)
    (building-type-count town-center >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-critical)
)
(defrule
    (can-research ri-loom)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-critical)
    (research-available ri-loom)
    (building-type-count town-center >= 1)
=>
    (research ri-loom)
)
(defrule
    (not
      (goal produce-trade-carts 1)
    )
=>
    (up-jump-rule 20)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (wood-amount >= 200)
    (building-type-count-total market == 0)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available trade-cart)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-caravan)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (wood-amount >= 200)
    (building-type-count-total market == 0)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-caravan)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-caravan < research-pending)
    (research-available ri-caravan)
    (building-type-count market >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-caravan)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-caravan)
    (building-type-count market >= 1)
=>
    (research ri-caravan)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available trade-cart)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-silk-road)
      )
      (civ-selected italian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-silk-road)
      )
      (civ-selected italian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-silk-road < research-pending)
    (research-available ri-silk-road)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-silk-road)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-silk-road)
    (building-type-count castle >= 1)
=>
    (research ri-silk-road)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 2)
    (unit-available trade-cart)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-train trade-cart)
    (up-compare-goal total-trade-carts g:< desired-trade-carts)
    (unit-type-count dead-trade-cart == 0)
    (unit-type-count dead-trade-cart-loaded == 0)
    (unit-available trade-cart)
=>
    (train trade-cart)
)
(defrule
    (not
      (goal produce-fishing-ships 1)
    )
=>
    (up-jump-rule 23)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (nand
      (and
        (current-age >= castle-age)
        (building-type-count dock >= 1)
      )
      (unit-available fishing-ship)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-gillnets)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-gillnets)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-gillnets < research-pending)
    (research-available ri-gillnets)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-gillnets)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-gillnets)
    (building-type-count dock >= 1)
=>
    (research ri-gillnets)
)
(defrule
    (not
      (unit-available fishing-ship)
    )
=>
    (up-jump-rule 14)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thalassocracy < research-pending)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thalassocracy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (research ri-thalassocracy)
)
(defrule
    (true)
=>
    (set-goal dock-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total dock dock-count)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (up-compare-goal dock-count g:< desired-military-buildings-per-type)
    (up-pending-objects c: dock < 1)
=>
    (build dock)
)
(defrule
    (can-train fishing-ship)
    (up-compare-goal total-fishing-ships g:< desired-fishing-ships)
    (unit-available fishing-ship)
=>
    (train fishing-ship)
)
(defrule
    (true)
=>
    (set-goal old-produce-units 0)
    (set-goal current-unit-amount 0)
    (set-goal expected-units-per-type 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal total-type-production 0)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available archer-line)
=>
    (up-modify-goal total-type-production g:+ produce-archers)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available hand-cannoneer)
=>
    (up-modify-goal total-type-production g:+ produce-hand-cannoneers)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available skirmisher-line)
=>
    (up-modify-goal total-type-production g:+ produce-skirmishers)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available genitour-line)
=>
    (up-modify-goal total-type-production g:+ produce-genitours)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available cavalry-archer-line)
=>
    (up-modify-goal total-type-production g:+ produce-cavalry-archers)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available militiaman-line)
=>
    (up-modify-goal total-type-production g:+ produce-militia)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available condottiero)
=>
    (up-modify-goal total-type-production g:+ produce-condottiero)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available spearman-line)
=>
    (up-modify-goal total-type-production g:+ produce-spearmen)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available eagle-warrior-line)
=>
    (up-modify-goal total-type-production g:+ produce-eagles)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available scout-cavalry-line)
=>
    (up-modify-goal total-type-production g:+ produce-scouts)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available knight-line)
=>
    (up-modify-goal total-type-production g:+ produce-knights)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available camel-line)
=>
    (up-modify-goal total-type-production g:+ produce-camels)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available battle-elephant-line)
=>
    (up-modify-goal total-type-production g:+ produce-battle-elephants)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available battering-ram-line)
=>
    (up-modify-goal total-type-production g:+ produce-battering-rams)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available armored-elephant-line)
=>
    (up-modify-goal total-type-production g:+ produce-armored-elephants)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available mangonel-line)
=>
    (up-modify-goal total-type-production g:+ produce-mangonels)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available scorpion-line)
=>
    (up-modify-goal total-type-production g:+ produce-scorpions)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available bombard-cannon)
=>
    (up-modify-goal total-type-production g:+ produce-bombard-cannons)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available trebuchet)
=>
    (up-modify-goal total-type-production g:+ produce-trebuchets)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available my-unique-unit-line)
=>
    (up-modify-goal total-type-production g:+ produce-unique-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available konnik-set)
=>
    (up-modify-goal total-type-production g:+ produce-konniks)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available monk)
=>
    (up-modify-goal total-type-production g:+ produce-monks)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available missionary)
=>
    (up-modify-goal total-type-production g:+ produce-missionaries)
)
(defrule
    (not
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available transport-ship)
=>
    (up-modify-goal total-type-production g:+ produce-transport-ships)
)
(defrule
    (not
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available galley-line)
=>
    (up-modify-goal total-type-production g:+ produce-galleys)
)
(defrule
    (not
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available fire-ship-line)
=>
    (up-modify-goal total-type-production g:+ produce-fire-ships)
)
(defrule
    (not
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available cannon-galleon-line)
=>
    (up-modify-goal total-type-production g:+ produce-cannon-galleons)
)
(defrule
    (not
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (unit-available demolition-ship-line)
=>
    (up-modify-goal total-type-production g:+ produce-demolition-ships)
)
(defrule
    (true)
=>
    (up-get-fact military-population 0 expected-units-per-type)
    (up-modify-goal expected-units-per-type g:/ total-type-production)
)
(defrule
    (nand
      (or
        (goal produce-bombard-cannons 1)
        (goal produce-hand-cannoneers 1)
      )
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (nand
      (and
        (goal produce-cannon-galleons 1)
        (and
          (goal enough-wood-for-units 1)
          (goal enough-gold-for-units 1)
        )
      )
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-cannon-galleon)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-cannon-galleon)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (research-completed ri-cannon-galleon)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-cannon-galleon < research-pending)
    (research-available ri-cannon-galleon)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-cannon-galleon)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-cannon-galleon)
    (building-type-count dock >= 1)
=>
    (research ri-cannon-galleon)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 162)
)
(defrule
    (goal produce-archers 1)
    (unit-available archer-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count archer-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: archer-line >= 1)
      )
    )
    (goal produce-archers 1)
    (unit-available archer-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-archers 1)
      (unit-available archer-line)
    )
=>
    (up-jump-rule 158)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == castle-age)
      (unit-available archer-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-crossbow)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-crossbow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-crossbow < research-pending)
    (research-available ri-crossbow)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-crossbow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-crossbow)
    (building-type-count archery-range >= 1)
=>
    (research ri-crossbow)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (unit-available archer-line)
      )
    )
=>
    (up-jump-rule 15)
)
(defrule
    (research-completed ri-arbalest)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-arbalest)
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-crossbow)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-crossbow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-crossbow < research-pending)
    (research-available ri-crossbow)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-crossbow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-crossbow)
    (building-type-count archery-range >= 1)
=>
    (research ri-crossbow)
)
(defrule
    (research-completed ri-arbalest)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-arbalest < research-pending)
    (research-available ri-arbalest)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-arbalest)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-arbalest)
    (building-type-count archery-range >= 1)
=>
    (research ri-arbalest)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (unit-available archer-line)
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-bogsveigar)
      )
      (civ-selected viking)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-bogsveigar)
      )
      (civ-selected viking)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bogsveigar < research-pending)
    (research-available ri-bogsveigar)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bogsveigar)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bogsveigar)
    (building-type-count castle >= 1)
=>
    (research ri-bogsveigar)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available archer-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-yeomen)
      )
      (civ-selected briton)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-yeomen)
      )
      (civ-selected briton)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-yeomen < research-pending)
    (research-available ri-yeomen)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-yeomen)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-yeomen)
    (building-type-count castle >= 1)
=>
    (research ri-yeomen)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available archer-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-pavise)
      )
      (civ-selected italian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-pavise)
      )
      (civ-selected italian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-pavise < research-pending)
    (research-available ri-pavise)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-pavise)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-pavise)
    (building-type-count castle >= 1)
=>
    (research ri-pavise)
)
(defrule
    (not
      (unit-available archer-line)
    )
=>
    (up-jump-rule 96)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bracer < research-pending)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bracer)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bracer)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ring-archer-armor < research-pending)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-ring-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-ring-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thumb-ring < research-pending)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thumb-ring)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (research ri-thumb-ring)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ballistics < research-pending)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-ballistics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (research ri-ballistics)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal archery-range-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total archery-range archery-range-count)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (up-compare-goal archery-range-count g:< desired-military-buildings-per-type)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (can-train archer-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available archer-line)
=>
    (train archer-line)
)
(defrule
    (goal produce-archers 1)
    (unit-available archer-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 42)
)
(defrule
    (goal produce-hand-cannoneers 1)
    (unit-available hand-cannoneer)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count hand-cannoneer current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: hand-cannoneer >= 1)
      )
    )
    (goal produce-hand-cannoneers 1)
    (unit-available hand-cannoneer)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-hand-cannoneers 1)
      (unit-available hand-cannoneer)
    )
=>
    (up-jump-rule 38)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available hand-cannoneer)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-shatagni)
      )
      (civ-selected indian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-shatagni)
      )
      (civ-selected indian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-shatagni < research-pending)
    (research-available ri-shatagni)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-shatagni)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-shatagni)
    (building-type-count castle >= 1)
=>
    (research ri-shatagni)
)
(defrule
    (not
      (unit-available hand-cannoneer)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (unit-available hand-cannoneer)
=>
    (set-goal archery-range-count 0)
    (disable-self)
)
(defrule
    (unit-available hand-cannoneer)
=>
    (up-get-fact building-type-count-total archery-range archery-range-count)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (up-compare-goal archery-range-count g:< desired-military-buildings-per-type)
    (unit-available hand-cannoneer)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (not
      (unit-available hand-cannoneer)
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ring-archer-armor < research-pending)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-ring-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-ring-archer-armor)
)
(defrule
    (can-train hand-cannoneer)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available hand-cannoneer)
=>
    (train hand-cannoneer)
)
(defrule
    (goal produce-hand-cannoneers 1)
    (unit-available hand-cannoneer)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 162)
)
(defrule
    (goal produce-skirmishers 1)
    (unit-available skirmisher-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count skirmisher-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: skirmisher-line >= 1)
      )
    )
    (goal produce-skirmishers 1)
    (unit-available skirmisher-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-skirmishers 1)
      (unit-available skirmisher-line)
    )
=>
    (up-jump-rule 158)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == castle-age)
      (unit-available skirmisher-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-elite-skirmisher)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-elite-skirmisher)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-elite-skirmisher < research-pending)
    (research-available ri-elite-skirmisher)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-elite-skirmisher)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-elite-skirmisher)
    (building-type-count archery-range >= 1)
=>
    (research ri-elite-skirmisher)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (unit-available skirmisher-line)
      )
    )
=>
    (up-jump-rule 15)
)
(defrule
    (research-completed ri-imperial-skirmisher)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-imperial-skirmisher)
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-elite-skirmisher)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-elite-skirmisher)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-elite-skirmisher < research-pending)
    (research-available ri-elite-skirmisher)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-elite-skirmisher)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-elite-skirmisher)
    (building-type-count archery-range >= 1)
=>
    (research ri-elite-skirmisher)
)
(defrule
    (research-completed ri-imperial-skirmisher)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-imperial-skirmisher < research-pending)
    (research-available ri-imperial-skirmisher)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-imperial-skirmisher)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-imperial-skirmisher)
    (building-type-count archery-range >= 1)
=>
    (research ri-imperial-skirmisher)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available skirmisher-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-atlatl)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-atlatl)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-atlatl < research-pending)
    (research-available ri-atlatl)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-atlatl)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-atlatl)
    (building-type-count castle >= 1)
=>
    (research ri-atlatl)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available skirmisher-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-andean-sling)
      )
      (civ-selected incan)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-andean-sling)
      )
      (civ-selected incan)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-andean-sling < research-pending)
    (research-available ri-andean-sling)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-andean-sling)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-andean-sling)
    (building-type-count castle >= 1)
=>
    (research ri-andean-sling)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available skirmisher-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-hulche-javelineers)
      )
      (civ-selected mayan)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-hulche-javelineers)
      )
      (civ-selected mayan)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-hulche-javelineers < research-pending)
    (research-available ri-hulche-javelineers)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-hulche-javelineers)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-hulche-javelineers)
    (building-type-count castle >= 1)
=>
    (research ri-hulche-javelineers)
)
(defrule
    (not
      (unit-available skirmisher-line)
    )
=>
    (up-jump-rule 96)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bracer < research-pending)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bracer)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bracer)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ring-archer-armor < research-pending)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-ring-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-ring-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thumb-ring < research-pending)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thumb-ring)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (research ri-thumb-ring)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ballistics < research-pending)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-ballistics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (research ri-ballistics)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal archery-range-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total archery-range archery-range-count)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (up-compare-goal archery-range-count g:< desired-military-buildings-per-type)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (can-train skirmisher-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-food-for-units 1)
    (unit-available skirmisher-line)
=>
    (train skirmisher-line)
)
(defrule
    (goal produce-skirmishers 1)
    (unit-available skirmisher-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 148)
)
(defrule
    (goal produce-genitours 1)
    (unit-available genitour-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count genitour-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: genitour-line >= 1)
      )
    )
    (goal produce-genitours 1)
    (unit-available genitour-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-genitours 1)
      (unit-available genitour-line)
    )
=>
    (up-jump-rule 144)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available genitour-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-elite-genitour)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-elite-genitour)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-elite-genitour < research-pending)
    (research-available ri-elite-genitour)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-elite-genitour)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-elite-genitour)
    (building-type-count archery-range >= 1)
=>
    (research ri-elite-genitour)
)
(defrule
    (not
      (unit-available genitour-line)
    )
=>
    (up-jump-rule 131)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bracer < research-pending)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bracer)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bracer)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ring-archer-armor < research-pending)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-ring-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-ring-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thumb-ring < research-pending)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thumb-ring)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (research ri-thumb-ring)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ballistics < research-pending)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-ballistics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (research ri-ballistics)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal archery-range-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total archery-range archery-range-count)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (up-compare-goal archery-range-count g:< desired-military-buildings-per-type)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= feudal-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-sipahi)
      )
      (civ-selected turkish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-sipahi)
      )
      (civ-selected turkish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-sipahi < research-pending)
    (research-available ri-sipahi)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-sipahi)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-sipahi)
    (building-type-count castle >= 1)
=>
    (research ri-sipahi)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-parthian-tactics)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-parthian-tactics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-parthian-tactics < research-pending)
    (research-available ri-parthian-tactics)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-parthian-tactics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-parthian-tactics)
    (building-type-count archery-range >= 1)
=>
    (research ri-parthian-tactics)
)
(defrule
    (can-train genitour-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-food-for-units 1)
    (unit-available genitour-line)
=>
    (train genitour-line)
)
(defrule
    (goal produce-genitours 1)
    (unit-available genitour-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 159)
)
(defrule
    (goal produce-cavalry-archers 1)
    (unit-available cavalry-archer-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count cavalry-archer-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: cavalry-archer-line >= 1)
      )
    )
    (goal produce-cavalry-archers 1)
    (unit-available cavalry-archer-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-cavalry-archers 1)
      (unit-available cavalry-archer-line)
    )
=>
    (up-jump-rule 155)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available cavalry-archer-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-heavy-cavalry-archer)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-heavy-cavalry-archer)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-heavy-cavalry-archer < research-pending)
    (research-available ri-heavy-cavalry-archer)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-heavy-cavalry-archer)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-heavy-cavalry-archer)
    (building-type-count archery-range >= 1)
=>
    (research ri-heavy-cavalry-archer)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available cavalry-archer-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-recurve-bow)
      )
      (civ-selected magyar)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-recurve-bow)
      )
      (civ-selected magyar)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-recurve-bow < research-pending)
    (research-available ri-recurve-bow)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-recurve-bow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-recurve-bow)
    (building-type-count castle >= 1)
=>
    (research ri-recurve-bow)
)
(defrule
    (not
      (unit-available cavalry-archer-line)
    )
=>
    (up-jump-rule 131)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bracer < research-pending)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bracer)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bracer)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ring-archer-armor < research-pending)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-ring-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-ring-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thumb-ring < research-pending)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thumb-ring)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (research ri-thumb-ring)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ballistics < research-pending)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-ballistics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (research ri-ballistics)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal archery-range-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total archery-range archery-range-count)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (up-compare-goal archery-range-count g:< desired-military-buildings-per-type)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= feudal-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-sipahi)
      )
      (civ-selected turkish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-sipahi)
      )
      (civ-selected turkish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-sipahi < research-pending)
    (research-available ri-sipahi)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-sipahi)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-sipahi)
    (building-type-count castle >= 1)
=>
    (research ri-sipahi)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-parthian-tactics)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-parthian-tactics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-parthian-tactics < research-pending)
    (research-available ri-parthian-tactics)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-parthian-tactics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-parthian-tactics)
    (building-type-count archery-range >= 1)
=>
    (research ri-parthian-tactics)
)
(defrule
    (can-train cavalry-archer-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available cavalry-archer-line)
=>
    (train cavalry-archer-line)
)
(defrule
    (goal produce-cavalry-archers 1)
    (unit-available cavalry-archer-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 197)
)
(defrule
    (goal produce-militia 1)
    (unit-available militiaman-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count militiaman-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: militiaman-line >= 1)
      )
    )
    (goal produce-militia 1)
    (unit-available militiaman-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-militia 1)
      (unit-available militiaman-line)
    )
=>
    (up-jump-rule 193)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == feudal-age)
      (unit-available militiaman-line)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-man-at-arms)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-man-at-arms)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-man-at-arms < research-pending)
    (research-available ri-man-at-arms)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-man-at-arms)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-man-at-arms)
    (building-type-count barracks >= 1)
=>
    (research ri-man-at-arms)
)
(defrule
    (nand
      (current-age == castle-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (unit-available militiaman-line)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-long-swordsman)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-long-swordsman)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-man-at-arms)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-man-at-arms)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-man-at-arms < research-pending)
    (research-available ri-man-at-arms)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-man-at-arms)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-man-at-arms)
    (building-type-count barracks >= 1)
=>
    (research ri-man-at-arms)
)
(defrule
    (research-completed ri-long-swordsman)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-long-swordsman < research-pending)
    (research-available ri-long-swordsman)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-long-swordsman)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-long-swordsman)
    (building-type-count barracks >= 1)
=>
    (research ri-long-swordsman)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (and
          (not
            (current-age == castle-age)
          )
          (unit-available militiaman-line)
        )
      )
    )
=>
    (up-jump-rule 23)
)
(defrule
    (research-completed ri-champion)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-champion)
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-two-handed-swordsman)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-two-handed-swordsman)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-long-swordsman)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-long-swordsman)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-man-at-arms)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-man-at-arms)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-man-at-arms < research-pending)
    (research-available ri-man-at-arms)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-man-at-arms)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-man-at-arms)
    (building-type-count barracks >= 1)
=>
    (research ri-man-at-arms)
)
(defrule
    (research-completed ri-long-swordsman)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-long-swordsman < research-pending)
    (research-available ri-long-swordsman)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-long-swordsman)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-long-swordsman)
    (building-type-count barracks >= 1)
=>
    (research ri-long-swordsman)
)
(defrule
    (research-completed ri-two-handed-swordsman)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-two-handed-swordsman < research-pending)
    (research-available ri-two-handed-swordsman)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-two-handed-swordsman)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-two-handed-swordsman)
    (building-type-count barracks >= 1)
=>
    (research ri-two-handed-swordsman)
)
(defrule
    (research-completed ri-champion)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-champion < research-pending)
    (research-available ri-champion)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-champion)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-champion)
    (building-type-count barracks >= 1)
=>
    (research ri-champion)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (and
          (not
            (current-age == castle-age)
          )
          (unit-available militiaman-line)
        )
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-forced-levy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-forced-levy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forced-levy < research-pending)
    (research-available ri-forced-levy)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forced-levy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forced-levy)
    (building-type-count castle >= 1)
=>
    (research ri-forced-levy)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available militiaman-line)
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-gambesons)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-gambesons)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-supplies)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-supplies)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-supplies < research-pending)
    (research-available ri-supplies)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-supplies)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-supplies)
    (building-type-count barracks >= 1)
=>
    (research ri-supplies)
)
(defrule
    (research-completed ri-gambesons)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-gambesons < research-pending)
    (research-available ri-gambesons)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-gambesons)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-gambesons)
    (building-type-count barracks >= 1)
=>
    (research ri-gambesons)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available militiaman-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-bagains)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-bagains)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bagains < research-pending)
    (research-available ri-bagains)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-bagains)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-bagains)
    (building-type-count castle >= 1)
=>
    (research ri-bagains)
)
(defrule
    (nand
      (not
        (current-age >= castle-age)
      )
      (unit-available militiaman-line)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-supplies)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-supplies)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-supplies < research-pending)
    (research-available ri-supplies)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-supplies)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-supplies)
    (building-type-count barracks >= 1)
=>
    (research ri-supplies)
)
(defrule
    (not
      (unit-available militiaman-line)
    )
=>
    (up-jump-rule 108)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-mail < research-pending)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-perfusion < research-pending)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-perfusion)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (research ri-perfusion)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-squires < research-pending)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-squires)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (research ri-squires)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (research-completed ri-arson)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (up-research-status c: ri-arson < research-pending)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-arson)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (research ri-arson)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-garland-wars < research-pending)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-garland-wars)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (research ri-garland-wars)
)
(defrule
    (true)
=>
    (set-goal barracks-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total barracks barracks-count)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (up-compare-goal barracks-count g:< desired-military-buildings-per-type)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-train militiaman-line)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available militiaman-line)
=>
    (train militiaman-line)
)
(defrule
    (goal produce-militia 1)
    (unit-available militiaman-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 126)
)
(defrule
    (goal produce-condottiero 1)
    (unit-available condottiero)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count condottiero current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: condottiero >= 1)
      )
    )
    (goal produce-condottiero 1)
    (unit-available condottiero)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-condottiero 1)
      (unit-available condottiero)
    )
=>
    (up-jump-rule 122)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (not
      (unit-available condottiero)
    )
=>
    (up-jump-rule 108)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-mail < research-pending)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-perfusion < research-pending)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-perfusion)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (research ri-perfusion)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-squires < research-pending)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-squires)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (research ri-squires)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (research-completed ri-arson)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (up-research-status c: ri-arson < research-pending)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-arson)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (research ri-arson)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-garland-wars < research-pending)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-garland-wars)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (research ri-garland-wars)
)
(defrule
    (true)
=>
    (set-goal barracks-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total barracks barracks-count)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (up-compare-goal barracks-count g:< desired-military-buildings-per-type)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available condottiero)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-pavise)
      )
      (civ-selected italian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-pavise)
      )
      (civ-selected italian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-pavise < research-pending)
    (research-available ri-pavise)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-pavise)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-pavise)
    (building-type-count castle >= 1)
=>
    (research ri-pavise)
)
(defrule
    (can-train condottiero)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available condottiero)
=>
    (train condottiero)
)
(defrule
    (goal produce-condottiero 1)
    (unit-available condottiero)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 133)
)
(defrule
    (goal produce-spearmen 1)
    (unit-available spearman-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count spearman-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: spearman-line >= 1)
      )
    )
    (goal produce-spearmen 1)
    (unit-available spearman-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-spearmen 1)
      (unit-available spearman-line)
    )
=>
    (up-jump-rule 129)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == castle-age)
      (unit-available spearman-line)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-pikeman)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-pikeman)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-pikeman < research-pending)
    (research-available ri-pikeman)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-pikeman)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-pikeman)
    (building-type-count barracks >= 1)
=>
    (research ri-pikeman)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (unit-available spearman-line)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-halberdier)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-halberdier)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-pikeman)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-pikeman)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-pikeman < research-pending)
    (research-available ri-pikeman)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-pikeman)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-pikeman)
    (building-type-count barracks >= 1)
=>
    (research ri-pikeman)
)
(defrule
    (research-completed ri-halberdier)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-halberdier < research-pending)
    (research-available ri-halberdier)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-halberdier)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-halberdier)
    (building-type-count barracks >= 1)
=>
    (research ri-halberdier)
)
(defrule
    (not
      (unit-available spearman-line)
    )
=>
    (up-jump-rule 108)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-mail < research-pending)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-perfusion < research-pending)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-perfusion)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (research ri-perfusion)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-squires < research-pending)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-squires)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (research ri-squires)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (research-completed ri-arson)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (up-research-status c: ri-arson < research-pending)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-arson)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (research ri-arson)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-garland-wars < research-pending)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-garland-wars)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (research ri-garland-wars)
)
(defrule
    (true)
=>
    (set-goal barracks-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total barracks barracks-count)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (up-compare-goal barracks-count g:< desired-military-buildings-per-type)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-train spearman-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-food-for-units 1)
    (unit-available spearman-line)
=>
    (train spearman-line)
)
(defrule
    (goal produce-spearmen 1)
    (unit-available spearman-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 155)
)
(defrule
    (goal produce-eagles 1)
    (unit-available eagle-warrior-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count eagle-warrior-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: eagle-warrior-line >= 1)
      )
    )
    (goal produce-eagles 1)
    (unit-available eagle-warrior-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-eagles 1)
      (unit-available eagle-warrior-line)
    )
=>
    (up-jump-rule 151)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == castle-age)
      (unit-available eagle-warrior-line)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-eagle-warrior)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-eagle-warrior)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-eagle-warrior < research-pending)
    (research-available ri-eagle-warrior)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-eagle-warrior)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-eagle-warrior)
    (building-type-count barracks >= 1)
=>
    (research ri-eagle-warrior)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (unit-available eagle-warrior-line)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-elite-eagle-warrior)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-elite-eagle-warrior)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-eagle-warrior)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-eagle-warrior)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-eagle-warrior < research-pending)
    (research-available ri-eagle-warrior)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-eagle-warrior)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-eagle-warrior)
    (building-type-count barracks >= 1)
=>
    (research ri-eagle-warrior)
)
(defrule
    (research-completed ri-elite-eagle-warrior)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-elite-eagle-warrior < research-pending)
    (research-available ri-elite-eagle-warrior)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-elite-eagle-warrior)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-elite-eagle-warrior)
    (building-type-count barracks >= 1)
=>
    (research ri-elite-eagle-warrior)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (unit-available eagle-warrior-line)
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-fabric-shields)
      )
      (civ-selected incan)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-fabric-shields)
      )
      (civ-selected incan)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fabric-shields < research-pending)
    (research-available ri-fabric-shields)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fabric-shields)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fabric-shields)
    (building-type-count castle >= 1)
=>
    (research ri-fabric-shields)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (unit-available eagle-warrior-line)
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-el-dorado)
      )
      (civ-selected mayan)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-el-dorado)
      )
      (civ-selected mayan)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-el-dorado < research-pending)
    (research-available ri-el-dorado)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-el-dorado)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-el-dorado)
    (building-type-count castle >= 1)
=>
    (research ri-el-dorado)
)
(defrule
    (not
      (unit-available eagle-warrior-line)
    )
=>
    (up-jump-rule 108)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-mail < research-pending)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-perfusion < research-pending)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-perfusion)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (research ri-perfusion)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-squires < research-pending)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-squires)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (research ri-squires)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (research-completed ri-arson)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (up-research-status c: ri-arson < research-pending)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-arson)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (research ri-arson)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-garland-wars < research-pending)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-garland-wars)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (research ri-garland-wars)
)
(defrule
    (true)
=>
    (set-goal barracks-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total barracks barracks-count)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (up-compare-goal barracks-count g:< desired-military-buildings-per-type)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-train eagle-warrior-line)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available eagle-warrior-line)
=>
    (train eagle-warrior-line)
)
(defrule
    (goal produce-eagles 1)
    (unit-available eagle-warrior-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 169)
)
(defrule
    (goal produce-scouts 1)
    (unit-available scout-cavalry-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count scout-cavalry-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: scout-cavalry-line >= 1)
      )
    )
    (goal produce-scouts 1)
    (unit-available scout-cavalry-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-scouts 1)
      (unit-available scout-cavalry-line)
    )
=>
    (up-jump-rule 165)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == castle-age)
      (unit-available scout-cavalry-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-light-cavalry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-light-cavalry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-light-cavalry < research-pending)
    (research-available ri-light-cavalry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-light-cavalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-light-cavalry)
    (building-type-count stable >= 1)
=>
    (research ri-light-cavalry)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (unit-available scout-cavalry-line)
      )
    )
=>
    (up-jump-rule 15)
)
(defrule
    (research-completed ri-hussar)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-hussar)
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-light-cavalry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-light-cavalry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-light-cavalry < research-pending)
    (research-available ri-light-cavalry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-light-cavalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-light-cavalry)
    (building-type-count stable >= 1)
=>
    (research ri-light-cavalry)
)
(defrule
    (research-completed ri-hussar)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-hussar < research-pending)
    (research-available ri-hussar)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-hussar)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-hussar)
    (building-type-count stable >= 1)
=>
    (research ri-hussar)
)
(defrule
    (not
      (unit-available scout-cavalry-line)
    )
=>
    (up-jump-rule 136)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-barding < research-pending)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-barding)
)
(defrule
    (not
      (current-age >= feudal-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chivalry < research-pending)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chivalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (research ri-chivalry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-stirrups < research-pending)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-stirrups)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (research ri-stirrups)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-farimba < research-pending)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-farimba)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (research ri-farimba)
)
(defrule
    (nand
      (players-unit-type-count any-enemy archer-line >= 2)
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-manipur-cavalry < research-pending)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-manipur-cavalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (research ri-manipur-cavalry)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal stable-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total stable stable-count)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (up-compare-goal stable-count g:< desired-military-buildings-per-type)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (can-train scout-cavalry-line)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (unit-available scout-cavalry-line)
=>
    (train scout-cavalry-line)
)
(defrule
    (goal produce-scouts 1)
    (unit-available scout-cavalry-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 161)
)
(defrule
    (goal produce-knights 1)
    (unit-available knight-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count knight-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: knight-line >= 1)
      )
    )
    (goal produce-knights 1)
    (unit-available knight-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-knights 1)
      (unit-available knight-line)
    )
=>
    (up-jump-rule 157)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available knight-line)
    )
=>
    (up-jump-rule 15)
)
(defrule
    (research-completed ri-paladin)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-paladin)
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-cavalier)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-cavalier)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-cavalier < research-pending)
    (research-available ri-cavalier)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-cavalier)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-cavalier)
    (building-type-count stable >= 1)
=>
    (research ri-cavalier)
)
(defrule
    (research-completed ri-paladin)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-paladin < research-pending)
    (research-available ri-paladin)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-paladin)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-paladin)
    (building-type-count stable >= 1)
=>
    (research ri-paladin)
)
(defrule
    (not
      (unit-available knight-line)
    )
=>
    (up-jump-rule 136)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-barding < research-pending)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-barding)
)
(defrule
    (not
      (current-age >= feudal-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chivalry < research-pending)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chivalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (research ri-chivalry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-stirrups < research-pending)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-stirrups)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (research ri-stirrups)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-farimba < research-pending)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-farimba)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (research ri-farimba)
)
(defrule
    (nand
      (players-unit-type-count any-enemy archer-line >= 2)
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-manipur-cavalry < research-pending)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-manipur-cavalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (research ri-manipur-cavalry)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal stable-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total stable stable-count)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (up-compare-goal stable-count g:< desired-military-buildings-per-type)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (can-train knight-line)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available knight-line)
=>
    (train knight-line)
)
(defrule
    (goal produce-knights 1)
    (unit-available knight-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 180)
)
(defrule
    (goal produce-camels 1)
    (unit-available camel-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count camel-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: camel-line >= 1)
      )
    )
    (goal produce-camels 1)
    (unit-available camel-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-camels 1)
      (unit-available camel-line)
    )
=>
    (up-jump-rule 176)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available camel-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-heavy-camel)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-heavy-camel)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-heavy-camel < research-pending)
    (research-available ri-heavy-camel)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-heavy-camel)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-heavy-camel)
    (building-type-count stable >= 1)
=>
    (research ri-heavy-camel)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available camel-line)
    )
=>
    (up-jump-rule 15)
)
(defrule
    (research-completed ri-imperial-camel)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-imperial-camel)
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-heavy-camel)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-heavy-camel)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-heavy-camel < research-pending)
    (research-available ri-heavy-camel)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-heavy-camel)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-heavy-camel)
    (building-type-count stable >= 1)
=>
    (research ri-heavy-camel)
)
(defrule
    (research-completed ri-imperial-camel)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-imperial-camel < research-pending)
    (research-available ri-imperial-camel)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-imperial-camel)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-imperial-camel)
    (building-type-count stable >= 1)
=>
    (research ri-imperial-camel)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available camel-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-zealotry)
      )
      (civ-selected saracen)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-zealotry)
      )
      (civ-selected saracen)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-zealotry < research-pending)
    (research-available ri-zealotry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-zealotry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-zealotry)
    (building-type-count castle >= 1)
=>
    (research ri-zealotry)
)
(defrule
    (not
      (unit-available camel-line)
    )
=>
    (up-jump-rule 136)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-barding < research-pending)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-barding)
)
(defrule
    (not
      (current-age >= feudal-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chivalry < research-pending)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chivalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (research ri-chivalry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-stirrups < research-pending)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-stirrups)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (research ri-stirrups)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-farimba < research-pending)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-farimba)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (research ri-farimba)
)
(defrule
    (nand
      (players-unit-type-count any-enemy archer-line >= 2)
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-manipur-cavalry < research-pending)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-manipur-cavalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (research ri-manipur-cavalry)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal stable-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total stable stable-count)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (up-compare-goal stable-count g:< desired-military-buildings-per-type)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (can-train camel-line)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available camel-line)
=>
    (train camel-line)
)
(defrule
    (goal produce-camels 1)
    (unit-available camel-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 186)
)
(defrule
    (goal produce-battle-elephants 1)
    (unit-available battle-elephant-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count battle-elephant-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: battle-elephant-line >= 1)
      )
    )
    (goal produce-battle-elephants 1)
    (unit-available battle-elephant-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-battle-elephants 1)
      (unit-available battle-elephant-line)
    )
=>
    (up-jump-rule 182)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available battle-elephant-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-howdah)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-howdah)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-howdah < research-pending)
    (research-available ri-howdah)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-howdah)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-howdah)
    (building-type-count castle >= 1)
=>
    (research ri-howdah)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available battle-elephant-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-tusk-swords)
      )
      (civ-selected khmer)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-tusk-swords)
      )
      (civ-selected khmer)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-tusk-swords < research-pending)
    (research-available ri-tusk-swords)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-tusk-swords)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-tusk-swords)
    (building-type-count castle >= 1)
=>
    (research ri-tusk-swords)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available battle-elephant-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-chatras)
      )
      (civ-selected vietnamese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-chatras)
      )
      (civ-selected vietnamese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chatras < research-pending)
    (research-available ri-chatras)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chatras)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chatras)
    (building-type-count castle >= 1)
=>
    (research ri-chatras)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available battle-elephant-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-elite-battle-elephant)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-elite-battle-elephant)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-elite-battle-elephant < research-pending)
    (research-available ri-elite-battle-elephant)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-elite-battle-elephant)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-elite-battle-elephant)
    (building-type-count stable >= 1)
=>
    (research ri-elite-battle-elephant)
)
(defrule
    (not
      (unit-available battle-elephant-line)
    )
=>
    (up-jump-rule 136)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-barding < research-pending)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-barding)
)
(defrule
    (not
      (current-age >= feudal-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chivalry < research-pending)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chivalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (research ri-chivalry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-stirrups < research-pending)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-stirrups)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (research ri-stirrups)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-farimba < research-pending)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-farimba)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (research ri-farimba)
)
(defrule
    (nand
      (players-unit-type-count any-enemy archer-line >= 2)
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-manipur-cavalry < research-pending)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-manipur-cavalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (research ri-manipur-cavalry)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal stable-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total stable stable-count)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (up-compare-goal stable-count g:< desired-military-buildings-per-type)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (can-train battle-elephant-line)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available battle-elephant-line)
=>
    (train battle-elephant-line)
)
(defrule
    (goal produce-battle-elephants 1)
    (unit-available battle-elephant-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 54)
)
(defrule
    (goal produce-battering-rams 1)
    (unit-available battering-ram-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count battering-ram-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: battering-ram-line >= 1)
      )
    )
    (goal produce-battering-rams 1)
    (unit-available battering-ram-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-battering-rams 1)
      (unit-available battering-ram-line)
    )
=>
    (up-jump-rule 50)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available battering-ram-line)
    )
=>
    (up-jump-rule 15)
)
(defrule
    (research-completed ri-siege-ram)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-ram)
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-capped-ram)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-capped-ram)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-capped-ram < research-pending)
    (research-available ri-capped-ram)
    (building-type-count siege-workshop >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-capped-ram)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-capped-ram)
    (building-type-count siege-workshop >= 1)
=>
    (research ri-capped-ram)
)
(defrule
    (research-completed ri-siege-ram)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-ram < research-pending)
    (research-available ri-siege-ram)
    (building-type-count siege-workshop >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-siege-ram)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-siege-ram)
    (building-type-count siege-workshop >= 1)
=>
    (research ri-siege-ram)
)
(defrule
    (not
      (unit-available battering-ram-line)
    )
=>
    (up-jump-rule 29)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-engineers < research-pending)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-siege-engineers)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (research ri-siege-engineers)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-furor-celtica < research-pending)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-furor-celtica)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (research ri-furor-celtica)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal siege-workshop-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total siege-workshop siege-workshop-count)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (up-compare-goal siege-workshop-count g:< desired-military-buildings-per-type)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (can-train battering-ram-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available battering-ram-line)
=>
    (train battering-ram-line)
)
(defrule
    (goal produce-battering-rams 1)
    (unit-available battering-ram-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 46)
)
(defrule
    (goal produce-armored-elephants 1)
    (unit-available armored-elephant-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count armored-elephant-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: armored-elephant-line >= 1)
      )
    )
    (goal produce-armored-elephants 1)
    (unit-available armored-elephant-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-armored-elephants 1)
      (unit-available armored-elephant-line)
    )
=>
    (up-jump-rule 42)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available armored-elephant-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-siege-elephant)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-elephant)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-elephant < research-pending)
    (research-available ri-siege-elephant)
    (building-type-count siege-workshop >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-siege-elephant)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-siege-elephant)
    (building-type-count siege-workshop >= 1)
=>
    (research ri-siege-elephant)
)
(defrule
    (not
      (unit-available armored-elephant-line)
    )
=>
    (up-jump-rule 29)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-engineers < research-pending)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-siege-engineers)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (research ri-siege-engineers)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-furor-celtica < research-pending)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-furor-celtica)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (research ri-furor-celtica)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal siege-workshop-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total siege-workshop siege-workshop-count)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (up-compare-goal siege-workshop-count g:< desired-military-buildings-per-type)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (can-train armored-elephant-line)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available armored-elephant-line)
=>
    (train armored-elephant-line)
)
(defrule
    (goal produce-armored-elephants 1)
    (unit-available armored-elephant-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 65)
)
(defrule
    (goal produce-mangonels 1)
    (unit-available mangonel-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count mangonel-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: mangonel-line >= 1)
      )
    )
    (goal produce-mangonels 1)
    (unit-available mangonel-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-mangonels 1)
      (unit-available mangonel-line)
    )
=>
    (up-jump-rule 61)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available mangonel-line)
    )
=>
    (up-jump-rule 15)
)
(defrule
    (research-completed ri-siege-onager)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-onager)
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-onager)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-onager)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-onager < research-pending)
    (research-available ri-onager)
    (building-type-count siege-workshop >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-onager)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-onager)
    (building-type-count siege-workshop >= 1)
=>
    (research ri-onager)
)
(defrule
    (research-completed ri-siege-onager)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-onager < research-pending)
    (research-available ri-siege-onager)
    (building-type-count siege-workshop >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-siege-onager)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-siege-onager)
    (building-type-count siege-workshop >= 1)
=>
    (research ri-siege-onager)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available mangonel-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-shinkichon)
      )
      (civ-selected korean)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-shinkichon)
      )
      (civ-selected korean)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-shinkichon < research-pending)
    (research-available ri-shinkichon)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-shinkichon)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-shinkichon)
    (building-type-count castle >= 1)
=>
    (research ri-shinkichon)
)
(defrule
    (not
      (unit-available mangonel-line)
    )
=>
    (up-jump-rule 29)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-engineers < research-pending)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-siege-engineers)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (research ri-siege-engineers)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-furor-celtica < research-pending)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-furor-celtica)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (research ri-furor-celtica)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal siege-workshop-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total siege-workshop siege-workshop-count)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (up-compare-goal siege-workshop-count g:< desired-military-buildings-per-type)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (can-train mangonel-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available mangonel-line)
=>
    (train mangonel-line)
)
(defrule
    (goal produce-mangonels 1)
    (unit-available mangonel-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 68)
)
(defrule
    (goal produce-scorpions 1)
    (unit-available scorpion-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count scorpion-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: scorpion-line >= 1)
      )
    )
    (goal produce-scorpions 1)
    (unit-available scorpion-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-scorpions 1)
      (unit-available scorpion-line)
    )
=>
    (up-jump-rule 64)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available scorpion-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-heavy-scorpion)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-heavy-scorpion)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-heavy-scorpion < research-pending)
    (research-available ri-heavy-scorpion)
    (building-type-count siege-workshop >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-heavy-scorpion)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-heavy-scorpion)
    (building-type-count siege-workshop >= 1)
=>
    (research ri-heavy-scorpion)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available scorpion-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-rocketry)
      )
      (civ-selected chinese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-rocketry)
      )
      (civ-selected chinese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-rocketry < research-pending)
    (research-available ri-rocketry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-rocketry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-rocketry)
    (building-type-count castle >= 1)
=>
    (research ri-rocketry)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available scorpion-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-double-crossbow)
      )
      (civ-selected khmer)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-double-crossbow)
      )
      (civ-selected khmer)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-double-crossbow < research-pending)
    (research-available ri-double-crossbow)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-double-crossbow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-double-crossbow)
    (building-type-count castle >= 1)
=>
    (research ri-double-crossbow)
)
(defrule
    (not
      (unit-available scorpion-line)
    )
=>
    (up-jump-rule 29)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-engineers < research-pending)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-siege-engineers)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (research ri-siege-engineers)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-furor-celtica < research-pending)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-furor-celtica)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (research ri-furor-celtica)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal siege-workshop-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total siege-workshop siege-workshop-count)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (up-compare-goal siege-workshop-count g:< desired-military-buildings-per-type)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (can-train scorpion-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available scorpion-line)
=>
    (train scorpion-line)
)
(defrule
    (goal produce-scorpions 1)
    (unit-available scorpion-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 38)
)
(defrule
    (goal produce-bombard-cannons 1)
    (unit-available bombard-cannon)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count bombard-cannon current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: bombard-cannon >= 1)
      )
    )
    (goal produce-bombard-cannons 1)
    (unit-available bombard-cannon)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-bombard-cannons 1)
      (unit-available bombard-cannon)
    )
=>
    (up-jump-rule 34)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (not
      (unit-available bombard-cannon)
    )
=>
    (up-jump-rule 29)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-engineers < research-pending)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-siege-engineers)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (research ri-siege-engineers)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-furor-celtica < research-pending)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-furor-celtica)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (research ri-furor-celtica)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal siege-workshop-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total siege-workshop siege-workshop-count)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (up-compare-goal siege-workshop-count g:< desired-military-buildings-per-type)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (can-train bombard-cannon)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available bombard-cannon)
=>
    (train bombard-cannon)
)
(defrule
    (goal produce-bombard-cannons 1)
    (unit-available bombard-cannon)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 41)
)
(defrule
    (goal produce-trebuchets 1)
    (unit-available trebuchet-set)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count trebuchet-set current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: trebuchet-set >= 1)
      )
    )
    (goal produce-trebuchets 1)
    (unit-available trebuchet-set)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-trebuchets 1)
      (unit-available trebuchet-set)
    )
=>
    (up-jump-rule 37)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (not
      (unit-available trebuchet)
    )
=>
    (up-jump-rule 29)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-engineers < research-pending)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-siege-engineers)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (research ri-siege-engineers)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-furor-celtica)
      )
      (civ-selected celtic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-furor-celtica < research-pending)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-furor-celtica)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-furor-celtica)
    (building-type-count castle >= 1)
=>
    (research ri-furor-celtica)
)
(defrule
    (not
      (building-type-count-total siege-workshop == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (building-type-count-total siege-workshop < 1)
    (building-type-count blacksmith >= 1)
    (building-type-count-total siege-workshop == 0)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal siege-workshop-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total siege-workshop siege-workshop-count)
)
(defrule
    (can-build siege-workshop)
    (up-pending-objects c: siege-workshop < 5)
    (up-compare-goal siege-workshop-count g:< desired-military-buildings-per-type)
=>
    (build siege-workshop)
    (set-goal 365 1)
)
(defrule
    (can-train trebuchet)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available trebuchet)
=>
    (train trebuchet)
)
(defrule
    (goal produce-trebuchets 1)
    (unit-available trebuchet-set)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 878)
)
(defrule
    (goal produce-unique-units 1)
    (unit-available my-unique-unit-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count my-unique-unit-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: my-unique-unit-line >= 1)
      )
    )
    (goal produce-unique-units 1)
    (unit-available my-unique-unit-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-unique-units 1)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 874)
)
(defrule
    (current-age >= castle-age)
=>
    (set-goal castle-count 0)
    (disable-self)
)
(defrule
    (current-age >= castle-age)
=>
    (up-get-fact building-type-count-total castle castle-count)
)
(defrule
    (nand
      (up-compare-goal castle-count g:< desired-military-buildings-per-type)
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (research-completed my-unique-unit-upgrade)
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (research-completed my-unique-unit-upgrade)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: my-unique-unit-upgrade < research-pending)
    (research-available my-unique-unit-upgrade)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research my-unique-unit-upgrade)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available my-unique-unit-upgrade)
    (building-type-count castle >= 1)
=>
    (research my-unique-unit-upgrade)
)
(defrule
    (unit-available my-unique-unit-line)
=>
    (set-goal old-desired-military-buildings-per-type 0)
    (disable-self)
)
(defrule
    (unit-available my-unique-unit-line)
=>
    (up-modify-goal old-desired-military-buildings-per-type g:= desired-military-buildings-per-type)
    (set-goal desired-military-buildings-per-type 0)
)
(defrule
    (nand
      (or
        (civ-selected aztec)
        (or
          (civ-selected celtic)
          (or
            (civ-selected ethiopian)
            (or
              (civ-selected frankish)
              (or
                (civ-selected gothic)
                (civ-selected indian)
              )
            )
          )
        )
      )
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 108)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-mail < research-pending)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-perfusion < research-pending)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-perfusion)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (research ri-perfusion)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-squires < research-pending)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-squires)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (research ri-squires)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (research-completed ri-arson)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (up-research-status c: ri-arson < research-pending)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-arson)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (research ri-arson)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-garland-wars < research-pending)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-garland-wars)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (research ri-garland-wars)
)
(defrule
    (true)
=>
    (set-goal barracks-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total barracks barracks-count)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (up-compare-goal barracks-count g:< desired-military-buildings-per-type)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (nand
      (or
        (civ-selected incan)
        (or
          (civ-selected japanese)
          (or
            (civ-selected malay)
            (or
              (civ-selected malian)
              (or
                (civ-selected teutonic)
                (civ-selected viking)
              )
            )
          )
        )
      )
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 108)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-mail < research-pending)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-perfusion < research-pending)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-perfusion)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (research ri-perfusion)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-squires < research-pending)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-squires)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (research ri-squires)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (research-completed ri-arson)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (up-research-status c: ri-arson < research-pending)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-arson)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (research ri-arson)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-garland-wars < research-pending)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-garland-wars)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (research ri-garland-wars)
)
(defrule
    (true)
=>
    (set-goal barracks-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total barracks barracks-count)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (up-compare-goal barracks-count g:< desired-military-buildings-per-type)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (nand
      (or
        (civ-selected berbers)
        (or
          (civ-selected korean)
          (or
            (civ-selected mongol)
            (civ-selected burmese)
          )
        )
      )
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 131)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bracer < research-pending)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bracer)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bracer)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ring-archer-armor < research-pending)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-ring-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-ring-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thumb-ring < research-pending)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thumb-ring)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (research ri-thumb-ring)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ballistics < research-pending)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-ballistics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (research ri-ballistics)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal archery-range-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total archery-range archery-range-count)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (up-compare-goal archery-range-count g:< desired-military-buildings-per-type)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= feudal-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-sipahi)
      )
      (civ-selected turkish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-sipahi)
      )
      (civ-selected turkish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-sipahi < research-pending)
    (research-available ri-sipahi)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-sipahi)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-sipahi)
    (building-type-count castle >= 1)
=>
    (research ri-sipahi)
)
(defrule
    (not
      (current-age == imperial-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-parthian-tactics)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-parthian-tactics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-parthian-tactics < research-pending)
    (research-available ri-parthian-tactics)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-parthian-tactics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-parthian-tactics)
    (building-type-count archery-range >= 1)
=>
    (research ri-parthian-tactics)
)
(defrule
    (nand
      (or
        (civ-selected briton)
        (or
          (civ-selected chinese)
          (or
            (civ-selected italian)
            (or
              (civ-selected mayan)
              (civ-selected vietnamese)
            )
          )
        )
      )
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 96)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bracer < research-pending)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bracer)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bracer)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ring-archer-armor < research-pending)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-ring-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-ring-archer-armor)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 3)
)
(defrule
    (nand
      (up-research-status c: feudal-age >= research-pending)
      (building-type-count-total archery-range == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (building-type-count-total archery-range < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total archery-range == 0)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-thumb-ring)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thumb-ring < research-pending)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thumb-ring)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thumb-ring)
    (building-type-count archery-range >= 1)
=>
    (research ri-thumb-ring)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ballistics < research-pending)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-ballistics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (research ri-ballistics)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal archery-range-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total archery-range archery-range-count)
)
(defrule
    (can-build archery-range)
    (up-pending-objects c: archery-range < 5)
    (up-compare-goal archery-range-count g:< desired-military-buildings-per-type)
=>
    (build archery-range)
    (set-goal 365 1)
)
(defrule
    (nand
      (or
        (civ-selected byzantine)
        (or
          (civ-selected hun)
          (or
            (civ-selected magyar)
            (or
              (civ-selected persian)
              (or
                (civ-selected saracen)
                (civ-selected slavic)
              )
            )
          )
        )
      )
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 136)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-barding < research-pending)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-barding)
)
(defrule
    (not
      (current-age >= feudal-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chivalry < research-pending)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chivalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (research ri-chivalry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-stirrups < research-pending)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-stirrups)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (research ri-stirrups)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-farimba < research-pending)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-farimba)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (research ri-farimba)
)
(defrule
    (nand
      (players-unit-type-count any-enemy archer-line >= 2)
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-manipur-cavalry < research-pending)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-manipur-cavalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (research ri-manipur-cavalry)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal stable-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total stable stable-count)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (up-compare-goal stable-count g:< desired-military-buildings-per-type)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (unit-available my-unique-unit-line)
=>
    (up-modify-goal desired-military-buildings-per-type g:= old-desired-military-buildings-per-type)
)
(defrule
    (nand
      (civ-selected briton)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-yeomen)
      )
      (civ-selected briton)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-yeomen)
      )
      (civ-selected briton)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-yeomen < research-pending)
    (research-available ri-yeomen)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-yeomen)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-yeomen)
    (building-type-count castle >= 1)
=>
    (research ri-yeomen)
)
(defrule
    (nand
      (civ-selected magyar)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-corvinian-army)
      )
      (civ-selected magyar)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-corvinian-army)
      )
      (civ-selected magyar)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-corvinian-army < research-pending)
    (research-available ri-corvinian-army)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-corvinian-army)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-corvinian-army)
    (building-type-count castle >= 1)
=>
    (research ri-corvinian-army)
)
(defrule
    (nand
      (civ-selected italian)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-pavise)
      )
      (civ-selected italian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-pavise)
      )
      (civ-selected italian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-pavise < research-pending)
    (research-available ri-pavise)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-pavise)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-pavise)
    (building-type-count castle >= 1)
=>
    (research ri-pavise)
)
(defrule
    (nand
      (civ-selected incan)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-fabric-shields)
      )
      (civ-selected incan)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-fabric-shields)
      )
      (civ-selected incan)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fabric-shields < research-pending)
    (research-available ri-fabric-shields)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fabric-shields)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fabric-shields)
    (building-type-count castle >= 1)
=>
    (research ri-fabric-shields)
)
(defrule
    (nand
      (civ-selected saracen)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-zealotry)
      )
      (civ-selected saracen)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-zealotry)
      )
      (civ-selected saracen)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-zealotry < research-pending)
    (research-available ri-zealotry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-zealotry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-zealotry)
    (building-type-count castle >= 1)
=>
    (research ri-zealotry)
)
(defrule
    (nand
      (civ-selected byzantine)
      (and
        (current-age == imperial-age)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-logistica)
      )
      (civ-selected byzantine)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-logistica)
      )
      (civ-selected byzantine)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-logistica < research-pending)
    (research-available ri-logistica)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-logistica)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-logistica)
    (building-type-count castle >= 1)
=>
    (research ri-logistica)
)
(defrule
    (nand
      (civ-selected persian)
      (and
        (current-age == imperial-age)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-mahouts)
      )
      (civ-selected persian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-mahouts)
      )
      (civ-selected persian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-mahouts < research-pending)
    (research-available ri-mahouts)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-mahouts)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-mahouts)
    (building-type-count castle >= 1)
=>
    (research ri-mahouts)
)
(defrule
    (nand
      (civ-selected chinese)
      (and
        (current-age == imperial-age)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-rocketry)
      )
      (civ-selected chinese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-rocketry)
      )
      (civ-selected chinese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-rocketry < research-pending)
    (research-available ri-rocketry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-rocketry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-rocketry)
    (building-type-count castle >= 1)
=>
    (research ri-rocketry)
)
(defrule
    (nand
      (civ-selected frankish)
      (and
        (current-age == imperial-age)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-bearded-axe)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-bearded-axe)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bearded-axe < research-pending)
    (research-available ri-bearded-axe)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bearded-axe)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bearded-axe)
    (building-type-count castle >= 1)
=>
    (research ri-bearded-axe)
)
(defrule
    (nand
      (civ-selected khmer)
      (and
        (current-age == imperial-age)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-double-crossbow)
      )
      (civ-selected khmer)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-double-crossbow)
      )
      (civ-selected khmer)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-double-crossbow < research-pending)
    (research-available ri-double-crossbow)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-double-crossbow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-double-crossbow)
    (building-type-count castle >= 1)
=>
    (research ri-double-crossbow)
)
(defrule
    (nand
      (civ-selected burmese)
      (and
        (current-age == imperial-age)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-manipur-cavalry < research-pending)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-manipur-cavalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (research ri-manipur-cavalry)
)
(defrule
    (nand
      (civ-selected portuguese)
      (and
        (current-age == imperial-age)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-engineers < research-pending)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-siege-engineers)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (research ri-siege-engineers)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (civ-selected khmer)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-siege-engineers)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-siege-engineers < research-pending)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-siege-engineers)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-siege-engineers)
    (building-type-count university >= 1)
=>
    (research ri-siege-engineers)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (civ-selected khmer)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (civ-selected khmer)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-barding < research-pending)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-barding)
)
(defrule
    (nand
      (not
        (current-age == imperial-age)
      )
      (and
        (civ-selected khmer)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (nand
      (civ-selected khmer)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ballistics < research-pending)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-ballistics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (research ri-ballistics)
)
(defrule
    (nand
      (civ-selected khmer)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (nand
      (civ-selected khmer)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (civ-selected spanish)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ring-archer-armor < research-pending)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-ring-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-ring-archer-armor)
)
(defrule
    (nand
      (not
        (current-age == imperial-age)
      )
      (and
        (civ-selected spanish)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (nand
      (civ-selected spanish)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (nand
      (civ-selected spanish)
      (unit-available my-unique-unit-line)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (civ-selected turkish)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (research-completed ri-ring-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ring-archer-armor < research-pending)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-ring-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-ring-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-ring-archer-armor)
)
(defrule
    (nand
      (not
        (current-age == imperial-age)
      )
      (and
        (civ-selected turkish)
        (unit-available my-unique-unit-line)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-padded-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-padded-archer-armor < research-pending)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-padded-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-padded-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-padded-archer-armor)
)
(defrule
    (research-completed ri-leather-archer-armor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-leather-archer-armor < research-pending)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-leather-archer-armor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-leather-archer-armor)
    (building-type-count blacksmith >= 1)
=>
    (research ri-leather-archer-armor)
)
(defrule
    (can-train my-unique-unit-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available my-unique-unit-line)
=>
    (train my-unique-unit-line)
)
(defrule
    (goal produce-unique-units 1)
    (unit-available my-unique-unit-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 274)
)
(defrule
    (goal produce-konniks 1)
    (unit-available konnik-set)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count konnik-set current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: konnik-set >= 1)
      )
    )
    (goal produce-konniks 1)
    (unit-available konnik-set)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-konniks 1)
      (unit-available konnik-set)
    )
=>
    (up-jump-rule 270)
)
(defrule
    (true)
=>
    (set-goal krepost-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total krepost krepost-count)
)
(defrule
    (not
      (up-compare-goal krepost-count g:< desired-military-buildings-per-type)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build krepost)
    (up-pending-objects c: krepost < 5)
=>
    (build krepost)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 350)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 350)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 350)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available konnik-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (research-completed my-unique-unit-upgrade)
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (research-completed my-unique-unit-upgrade)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: my-unique-unit-upgrade < research-pending)
    (research-available my-unique-unit-upgrade)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research my-unique-unit-upgrade)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available my-unique-unit-upgrade)
    (building-type-count castle >= 1)
=>
    (research my-unique-unit-upgrade)
)
(defrule
    (unit-available konnik-line)
=>
    (set-goal old-desired-military-buildings-per-type 0)
    (disable-self)
)
(defrule
    (unit-available konnik-line)
=>
    (up-modify-goal old-desired-military-buildings-per-type g:= desired-military-buildings-per-type)
    (set-goal desired-military-buildings-per-type 0)
)
(defrule
    (not
      (unit-available konnik-line)
    )
=>
    (up-jump-rule 108)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-mail < research-pending)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-mail)
)
(defrule
    (research-completed ri-chain-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-mail < research-pending)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-mail)
)
(defrule
    (research-completed ri-plate-mail)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-mail < research-pending)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-mail)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-mail)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-mail)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-perfusion)
      )
      (civ-selected gothic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-perfusion < research-pending)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-perfusion)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-perfusion)
    (building-type-count castle >= 1)
=>
    (research ri-perfusion)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-squires)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-squires < research-pending)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-squires)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-squires)
    (building-type-count barracks >= 1)
=>
    (research ri-squires)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (research-completed ri-arson)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (up-research-status c: ri-arson < research-pending)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-arson)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-arson)
    (building-type-count barracks >= 1)
    (not
      (research-completed ri-arson)
    )
=>
    (research ri-arson)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-garland-wars)
      )
      (civ-selected aztec)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-garland-wars < research-pending)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-garland-wars)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-garland-wars)
    (building-type-count castle >= 1)
=>
    (research ri-garland-wars)
)
(defrule
    (true)
=>
    (set-goal barracks-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total barracks barracks-count)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (up-compare-goal barracks-count g:< desired-military-buildings-per-type)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (not
      (unit-available konnik-line)
    )
=>
    (up-jump-rule 136)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (not
      (current-age == feudal-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (nand
      (current-age == castle-age)
      (not
        (current-age == feudal-age)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-forging)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-forging < research-pending)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-forging)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-forging)
    (building-type-count blacksmith >= 1)
=>
    (research ri-forging)
)
(defrule
    (research-completed ri-iron-casting)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-iron-casting < research-pending)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-iron-casting)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-iron-casting)
    (building-type-count blacksmith >= 1)
=>
    (research ri-iron-casting)
)
(defrule
    (research-completed ri-blast-furnace)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-blast-furnace < research-pending)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-blast-furnace)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-blast-furnace)
    (building-type-count blacksmith >= 1)
=>
    (research ri-blast-furnace)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (not
          (current-age == castle-age)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-scale-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-scale-barding < research-pending)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-scale-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-scale-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-scale-barding)
)
(defrule
    (research-completed ri-chain-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chain-barding < research-pending)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chain-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chain-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-chain-barding)
)
(defrule
    (research-completed ri-plate-barding)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-plate-barding < research-pending)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-plate-barding)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-plate-barding)
    (building-type-count blacksmith >= 1)
=>
    (research ri-plate-barding)
)
(defrule
    (not
      (current-age >= feudal-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bloodlines)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bloodlines < research-pending)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-bloodlines)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-bloodlines)
    (building-type-count stable >= 1)
=>
    (research ri-bloodlines)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 3)
)
(defrule
    (not
      (building-type-count-total stable == 0)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
    (building-type-count-total barracks == 0)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (building-type-count-total stable < 1)
    (building-type-count barracks >= 1)
    (building-type-count-total stable == 0)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-husbandry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-husbandry < research-pending)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-husbandry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-husbandry)
    (building-type-count stable >= 1)
=>
    (research ri-husbandry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-chivalry)
      )
      (civ-selected frankish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chivalry < research-pending)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chivalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chivalry)
    (building-type-count castle >= 1)
=>
    (research ri-chivalry)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-stirrups)
      )
      (civ-selected bulgarians)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-stirrups < research-pending)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-stirrups)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-stirrups)
    (building-type-count castle >= 1)
=>
    (research ri-stirrups)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-farimba)
      )
      (civ-selected malian)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-farimba < research-pending)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-farimba)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-farimba)
    (building-type-count castle >= 1)
=>
    (research ri-farimba)
)
(defrule
    (nand
      (players-unit-type-count any-enemy archer-line >= 2)
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-manipur-cavalry)
      )
      (civ-selected burmese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-manipur-cavalry < research-pending)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-manipur-cavalry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-manipur-cavalry)
    (building-type-count castle >= 1)
=>
    (research ri-manipur-cavalry)
)
(defrule
    (can-build barracks)
    (up-pending-objects c: barracks < 5)
    (building-type-count-total barracks < 1)
=>
    (build barracks)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal stable-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total stable stable-count)
)
(defrule
    (can-build stable)
    (up-pending-objects c: stable < 5)
    (up-compare-goal stable-count g:< desired-military-buildings-per-type)
=>
    (build stable)
    (set-goal 365 1)
)
(defrule
    (unit-available konnik-line)
=>
    (up-modify-goal desired-military-buildings-per-type g:= old-desired-military-buildings-per-type)
)
(defrule
    (can-train konnik-line)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available konnik-line)
=>
    (train konnik-line)
)
(defrule
    (can-train krepost-konnik-line)
    (goal produce-units 1)
    (goal enough-food-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available konnik-line)
=>
    (train krepost-konnik-line)
)
(defrule
    (goal produce-konniks 1)
    (unit-available konnik-set)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 74)
)
(defrule
    (goal produce-monks 1)
    (unit-available monk-set)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count monk-set current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: monk-set >= 1)
      )
    )
    (goal produce-monks 1)
    (unit-available monk-set)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-monks 1)
      (unit-available monk-set)
    )
=>
    (up-jump-rule 70)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (not
      (unit-available monk)
    )
=>
    (up-jump-rule 67)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-redemption)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-redemption)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-redemption < research-pending)
    (research-available ri-redemption)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-redemption)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-redemption)
    (building-type-count monastery >= 1)
=>
    (research ri-redemption)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-sanctity)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-sanctity)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-sanctity < research-pending)
    (research-available ri-sanctity)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-sanctity)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-sanctity)
    (building-type-count monastery >= 1)
=>
    (research ri-sanctity)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fervor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fervor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fervor < research-pending)
    (research-available ri-fervor)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fervor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fervor)
    (building-type-count monastery >= 1)
=>
    (research ri-fervor)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-inquisition)
      )
      (civ-selected spanish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-inquisition)
      )
      (civ-selected spanish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-inquisition < research-pending)
    (research-available ri-inquisition)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-inquisition)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-inquisition)
    (building-type-count castle >= 1)
=>
    (research ri-inquisition)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-orthodoxy)
      )
      (civ-selected slavic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-orthodoxy)
      )
      (civ-selected slavic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-orthodoxy < research-pending)
    (research-available ri-orthodoxy)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-orthodoxy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-orthodoxy)
    (building-type-count castle >= 1)
=>
    (research ri-orthodoxy)
)
(defrule
    (nand
      (players-unit-type-count any-enemy monk >= 2)
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-atonement)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-atonement)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-atonement < research-pending)
    (research-available ri-atonement)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-atonement)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-atonement)
    (building-type-count monastery >= 1)
=>
    (research ri-atonement)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-theocracy)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-theocracy)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-theocracy < research-pending)
    (research-available ri-theocracy)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-theocracy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-theocracy)
    (building-type-count monastery >= 1)
=>
    (research ri-theocracy)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-illumination)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-illumination)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-illumination < research-pending)
    (research-available ri-illumination)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-illumination)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-illumination)
    (building-type-count monastery >= 1)
=>
    (research ri-illumination)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-block-printing)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-block-printing)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-block-printing < research-pending)
    (research-available ri-block-printing)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-block-printing)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-block-printing)
    (building-type-count monastery >= 1)
=>
    (research ri-block-printing)
)
(defrule
    (true)
=>
    (set-goal monastery-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total monastery monastery-count)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (up-compare-goal monastery-count g:< desired-military-buildings-per-type)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (can-train monk)
    (goal produce-units 1)
    (goal enough-gold-for-units 1)
    (unit-available monk)
=>
    (train monk)
)
(defrule
    (goal produce-monks 1)
    (unit-available monk-set)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-land-units 1)
    )
=>
    (up-jump-rule 74)
)
(defrule
    (goal produce-missionaries 1)
    (unit-available missionary)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count missionary current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: missionary >= 1)
      )
    )
    (goal produce-missionaries 1)
    (unit-available missionary)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-missionaries 1)
      (unit-available missionary)
    )
=>
    (up-jump-rule 70)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (not
      (unit-available missionary)
    )
=>
    (up-jump-rule 67)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-redemption)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-redemption)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-redemption < research-pending)
    (research-available ri-redemption)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-redemption)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-redemption)
    (building-type-count monastery >= 1)
=>
    (research ri-redemption)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-sanctity)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-sanctity)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-sanctity < research-pending)
    (research-available ri-sanctity)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-sanctity)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-sanctity)
    (building-type-count monastery >= 1)
=>
    (research ri-sanctity)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fervor)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fervor)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fervor < research-pending)
    (research-available ri-fervor)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fervor)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fervor)
    (building-type-count monastery >= 1)
=>
    (research ri-fervor)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-inquisition)
      )
      (civ-selected spanish)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-inquisition)
      )
      (civ-selected spanish)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-inquisition < research-pending)
    (research-available ri-inquisition)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-inquisition)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-inquisition)
    (building-type-count castle >= 1)
=>
    (research ri-inquisition)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-orthodoxy)
      )
      (civ-selected slavic)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-orthodoxy)
      )
      (civ-selected slavic)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-orthodoxy < research-pending)
    (research-available ri-orthodoxy)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-orthodoxy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-orthodoxy)
    (building-type-count castle >= 1)
=>
    (research ri-orthodoxy)
)
(defrule
    (nand
      (players-unit-type-count any-enemy monk >= 2)
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-atonement)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-atonement)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-atonement < research-pending)
    (research-available ri-atonement)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-atonement)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-atonement)
    (building-type-count monastery >= 1)
=>
    (research ri-atonement)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-theocracy)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-theocracy)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-theocracy < research-pending)
    (research-available ri-theocracy)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-theocracy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-theocracy)
    (building-type-count monastery >= 1)
=>
    (research ri-theocracy)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-illumination)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-illumination)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-illumination < research-pending)
    (research-available ri-illumination)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-illumination)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-illumination)
    (building-type-count monastery >= 1)
=>
    (research ri-illumination)
)
(defrule
    (not
      (current-age >= imperial-age)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-block-printing)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count-total monastery == 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-block-printing)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-block-printing < research-pending)
    (research-available ri-block-printing)
    (building-type-count monastery >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-block-printing)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-block-printing)
    (building-type-count monastery >= 1)
=>
    (research ri-block-printing)
)
(defrule
    (true)
=>
    (set-goal monastery-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total monastery monastery-count)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (up-compare-goal monastery-count g:< desired-military-buildings-per-type)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (can-train missionary)
    (goal produce-units 1)
    (goal enough-gold-for-units 1)
    (unit-available missionary)
=>
    (train missionary)
)
(defrule
    (goal produce-missionaries 1)
    (unit-available missionary)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 56)
)
(defrule
    (goal produce-transport-ships 1)
    (unit-available transport-ship)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count transport-ship current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: transport-ship >= 1)
      )
    )
    (goal produce-transport-ships 1)
    (unit-available transport-ship)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-transport-ships 1)
      (unit-available transport-ship)
    )
=>
    (up-jump-rule 52)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (not
      (unit-available transport-ship)
    )
=>
    (up-jump-rule 49)
)
(defrule
    (nand
      (current-age == castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-careening < research-pending)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-careening)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (research ri-careening)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (building-type-count dock >= 1)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-careening < research-pending)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-careening)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (research ri-careening)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-dry-dock < research-pending)
    (research-available ri-dry-dock)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-dry-dock)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-dry-dock)
    (building-type-count dock >= 1)
=>
    (research ri-dry-dock)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (building-type-count dock >= 1)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-shipwright)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-shipwright)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-shipwright < research-pending)
    (research-available ri-shipwright)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-shipwright)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-shipwright)
    (building-type-count dock >= 1)
=>
    (research ri-shipwright)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thalassocracy < research-pending)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thalassocracy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (research ri-thalassocracy)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-carrack)
      )
      (civ-selected portuguese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-carrack)
      )
      (civ-selected portuguese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-carrack < research-pending)
    (research-available ri-carrack)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-carrack)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-carrack)
    (building-type-count castle >= 1)
=>
    (research ri-carrack)
)
(defrule
    (true)
=>
    (set-goal dock-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total dock dock-count)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (up-compare-goal dock-count g:< desired-military-buildings-per-type)
    (up-pending-objects c: dock < 1)
=>
    (build dock)
)
(defrule
    (can-train transport-ship)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available transport-ship)
=>
    (train transport-ship)
)
(defrule
    (goal produce-transport-ships 1)
    (unit-available transport-ship)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 122)
)
(defrule
    (goal produce-galleys 1)
    (unit-available galley-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count galley-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: galley-line >= 1)
      )
    )
    (goal produce-galleys 1)
    (unit-available galley-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-galleys 1)
      (unit-available galley-line)
    )
=>
    (up-jump-rule 118)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (nand
      (current-age == feudal-age)
      (unit-available galley-line)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (nand
      (current-age == castle-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (unit-available galley-line)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (nand
      (current-age == castle-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (unit-available galley-line)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-war-galley)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-war-galley)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-war-galley < research-pending)
    (research-available ri-war-galley)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-war-galley)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-war-galley)
    (building-type-count dock >= 1)
=>
    (research ri-war-galley)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (and
          (not
            (current-age == castle-age)
          )
          (unit-available galley-line)
        )
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bracer < research-pending)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bracer)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bracer)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (and
          (not
            (current-age == castle-age)
          )
          (unit-available galley-line)
        )
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-chemistry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-chemistry < research-pending)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-chemistry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-chemistry)
    (building-type-count university >= 1)
=>
    (research ri-chemistry)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == feudal-age)
        )
        (and
          (not
            (current-age == castle-age)
          )
          (unit-available galley-line)
        )
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-galleon)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-galleon)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-war-galley)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-war-galley)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-war-galley < research-pending)
    (research-available ri-war-galley)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-war-galley)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-war-galley)
    (building-type-count dock >= 1)
=>
    (research ri-war-galley)
)
(defrule
    (research-completed ri-galleon)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-galleon < research-pending)
    (research-available ri-galleon)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-galleon)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-galleon)
    (building-type-count dock >= 1)
=>
    (research ri-galleon)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available galley-line)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-ballistics)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-ballistics < research-pending)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-high)
)
(defrule
    (can-research ri-ballistics)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-high)
    (research-available ri-ballistics)
    (building-type-count university >= 1)
=>
    (research ri-ballistics)
)
(defrule
    (not
      (unit-available galley-line)
    )
=>
    (up-jump-rule 49)
)
(defrule
    (nand
      (current-age == castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-careening < research-pending)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-careening)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (research ri-careening)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (building-type-count dock >= 1)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-careening < research-pending)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-careening)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (research ri-careening)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-dry-dock < research-pending)
    (research-available ri-dry-dock)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-dry-dock)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-dry-dock)
    (building-type-count dock >= 1)
=>
    (research ri-dry-dock)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (building-type-count dock >= 1)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-shipwright)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-shipwright)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-shipwright < research-pending)
    (research-available ri-shipwright)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-shipwright)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-shipwright)
    (building-type-count dock >= 1)
=>
    (research ri-shipwright)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thalassocracy < research-pending)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thalassocracy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (research ri-thalassocracy)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-carrack)
      )
      (civ-selected portuguese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-carrack)
      )
      (civ-selected portuguese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-carrack < research-pending)
    (research-available ri-carrack)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-carrack)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-carrack)
    (building-type-count castle >= 1)
=>
    (research ri-carrack)
)
(defrule
    (true)
=>
    (set-goal dock-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total dock dock-count)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (up-compare-goal dock-count g:< desired-military-buildings-per-type)
    (up-pending-objects c: dock < 1)
=>
    (build dock)
)
(defrule
    (can-train galley-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available galley-line)
=>
    (train galley-line)
)
(defrule
    (goal produce-galleys 1)
    (unit-available galley-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 85)
)
(defrule
    (goal produce-fire-ships 1)
    (unit-available fire-ship-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count fire-ship-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: fire-ship-line >= 1)
      )
    )
    (goal produce-fire-ships 1)
    (unit-available fire-ship-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-fire-ships 1)
      (unit-available fire-ship-line)
    )
=>
    (up-jump-rule 81)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (nand
      (current-age == castle-age)
      (unit-available fire-ship-line)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-war-galley)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-war-galley)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-war-galley < research-pending)
    (research-available ri-war-galley)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-war-galley)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-war-galley)
    (building-type-count dock >= 1)
=>
    (research ri-war-galley)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (unit-available fire-ship-line)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-fast-fire-ship)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-fast-fire-ship)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-war-galley)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-war-galley)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-war-galley < research-pending)
    (research-available ri-war-galley)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-war-galley)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-war-galley)
    (building-type-count dock >= 1)
=>
    (research ri-war-galley)
)
(defrule
    (research-completed ri-fast-fire-ship)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fast-fire-ship < research-pending)
    (research-available ri-fast-fire-ship)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fast-fire-ship)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fast-fire-ship)
    (building-type-count dock >= 1)
=>
    (research ri-fast-fire-ship)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available fire-ship-line)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-greek-fire)
      )
      (civ-selected byzantine)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-greek-fire)
      )
      (civ-selected byzantine)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-greek-fire < research-pending)
    (research-available ri-greek-fire)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-greek-fire)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-greek-fire)
    (building-type-count castle >= 1)
=>
    (research ri-greek-fire)
)
(defrule
    (not
      (unit-available fire-ship-line)
    )
=>
    (up-jump-rule 49)
)
(defrule
    (nand
      (current-age == castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-careening < research-pending)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-careening)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (research ri-careening)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (building-type-count dock >= 1)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-careening < research-pending)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-careening)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (research ri-careening)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-dry-dock < research-pending)
    (research-available ri-dry-dock)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-dry-dock)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-dry-dock)
    (building-type-count dock >= 1)
=>
    (research ri-dry-dock)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (building-type-count dock >= 1)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-shipwright)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-shipwright)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-shipwright < research-pending)
    (research-available ri-shipwright)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-shipwright)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-shipwright)
    (building-type-count dock >= 1)
=>
    (research ri-shipwright)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thalassocracy < research-pending)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thalassocracy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (research ri-thalassocracy)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-carrack)
      )
      (civ-selected portuguese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-carrack)
      )
      (civ-selected portuguese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-carrack < research-pending)
    (research-available ri-carrack)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-carrack)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-carrack)
    (building-type-count castle >= 1)
=>
    (research ri-carrack)
)
(defrule
    (true)
=>
    (set-goal dock-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total dock dock-count)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (up-compare-goal dock-count g:< desired-military-buildings-per-type)
    (up-pending-objects c: dock < 1)
=>
    (build dock)
)
(defrule
    (can-train fire-ship-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available fire-ship-line)
=>
    (train fire-ship-line)
)
(defrule
    (goal produce-fire-ships 1)
    (unit-available fire-ship-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 56)
)
(defrule
    (goal produce-cannon-galleons 1)
    (unit-available cannon-galleon-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count cannon-galleon-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: cannon-galleon-line >= 1)
      )
    )
    (goal produce-cannon-galleons 1)
    (unit-available cannon-galleon-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-cannon-galleons 1)
      (unit-available cannon-galleon-line)
    )
=>
    (up-jump-rule 52)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (not
      (unit-available cannon-galleon-line)
    )
=>
    (up-jump-rule 49)
)
(defrule
    (nand
      (current-age == castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-careening < research-pending)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-careening)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (research ri-careening)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (building-type-count dock >= 1)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-careening < research-pending)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-careening)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (research ri-careening)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-dry-dock < research-pending)
    (research-available ri-dry-dock)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-dry-dock)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-dry-dock)
    (building-type-count dock >= 1)
=>
    (research ri-dry-dock)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (building-type-count dock >= 1)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-shipwright)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-shipwright)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-shipwright < research-pending)
    (research-available ri-shipwright)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-shipwright)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-shipwright)
    (building-type-count dock >= 1)
=>
    (research ri-shipwright)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thalassocracy < research-pending)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thalassocracy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (research ri-thalassocracy)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-carrack)
      )
      (civ-selected portuguese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-carrack)
      )
      (civ-selected portuguese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-carrack < research-pending)
    (research-available ri-carrack)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-carrack)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-carrack)
    (building-type-count castle >= 1)
=>
    (research ri-carrack)
)
(defrule
    (true)
=>
    (set-goal dock-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total dock dock-count)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (up-compare-goal dock-count g:< desired-military-buildings-per-type)
    (up-pending-objects c: dock < 1)
=>
    (build dock)
)
(defrule
    (can-train cannon-galleon-line)
    (goal produce-units 1)
    (goal enough-wood-for-units 1)
    (goal enough-gold-for-units 1)
    (unit-available cannon-galleon-line)
=>
    (train cannon-galleon-line)
)
(defrule
    (goal produce-cannon-galleons 1)
    (unit-available cannon-galleon-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (not
      (goal allow-naval-units 1)
    )
=>
    (up-jump-rule 68)
)
(defrule
    (goal produce-demolition-ships 1)
    (unit-available demolition-ship-line)
=>
    (up-modify-goal old-produce-units g:= produce-units)
    (up-get-fact unit-type-count demolition-ship-line current-unit-amount)
)
(defrule
    (or
      (and
        (up-compare-goal current-unit-amount g:> expected-units-per-type)
        (military-population >= 5)
      )
      (and
        (goal throttle-units 1)
        (up-pending-objects c: demolition-ship-line >= 1)
      )
    )
    (goal produce-demolition-ships 1)
    (unit-available demolition-ship-line)
=>
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal produce-demolition-ships 1)
      (unit-available demolition-ship-line)
    )
=>
    (up-jump-rule 64)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (nand
      (current-age == imperial-age)
      (unit-available demolition-ship-line)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-heavy-demolition-ship)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-heavy-demolition-ship)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-heavy-demolition-ship < research-pending)
    (research-available ri-heavy-demolition-ship)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-heavy-demolition-ship)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-heavy-demolition-ship)
    (building-type-count dock >= 1)
=>
    (research ri-heavy-demolition-ship)
)
(defrule
    (nand
      (current-age >= castle-age)
      (unit-available demolition-ship-line)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-war-galley)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-war-galley)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-war-galley < research-pending)
    (research-available ri-war-galley)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-war-galley)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-war-galley)
    (building-type-count dock >= 1)
=>
    (research ri-war-galley)
)
(defrule
    (not
      (unit-available demolition-ship-line)
    )
=>
    (up-jump-rule 49)
)
(defrule
    (nand
      (current-age == castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-careening < research-pending)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-careening)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (research ri-careening)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (building-type-count dock >= 1)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-careening)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-careening < research-pending)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-careening)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-careening)
    (building-type-count dock >= 1)
=>
    (research ri-careening)
)
(defrule
    (research-completed ri-dry-dock)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-dry-dock < research-pending)
    (research-available ri-dry-dock)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-dry-dock)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-dry-dock)
    (building-type-count dock >= 1)
=>
    (research ri-dry-dock)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (not
          (current-age == castle-age)
        )
        (building-type-count dock >= 1)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-shipwright)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (building-type-count-total dock < 1)
    (building-type-count-total dock == 0)
=>
    (build dock)
)
(defrule
    (research-completed ri-shipwright)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-shipwright < research-pending)
    (research-available ri-shipwright)
    (building-type-count dock >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-shipwright)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-shipwright)
    (building-type-count dock >= 1)
=>
    (research ri-shipwright)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-thalassocracy)
      )
      (civ-selected malay)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-thalassocracy < research-pending)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-thalassocracy)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-thalassocracy)
    (building-type-count castle >= 1)
=>
    (research ri-thalassocracy)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count dock >= 1)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (not
        (research-completed ri-carrack)
      )
      (civ-selected portuguese)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (nand
      (not
        (research-completed ri-carrack)
      )
      (civ-selected portuguese)
    )
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-carrack < research-pending)
    (research-available ri-carrack)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-carrack)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-carrack)
    (building-type-count castle >= 1)
=>
    (research ri-carrack)
)
(defrule
    (true)
=>
    (set-goal dock-count 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact building-type-count-total dock dock-count)
)
(defrule
    (can-build dock)
    (up-pending-objects c: dock < 5)
    (up-compare-goal dock-count g:< desired-military-buildings-per-type)
    (up-pending-objects c: dock < 1)
=>
    (build dock)
)
(defrule
    (can-train demolition-ship-line)
    (goal produce-units 1)
    (unit-available demolition-ship-line)
=>
    (train demolition-ship-line)
)
(defrule
    (goal produce-demolition-ships 1)
    (unit-available demolition-ship-line)
=>
    (up-modify-goal produce-units g:= old-produce-units)
)
(defrule
    (nor
      (building-type-count town-center > 0)
      (game-time >= 8)
    )
=>
    (up-jump-rule 877)
)
(defrule
    (true)
=>
    (set-goal attack-ready 0)
    (set-goal attacking 0)
    (set-goal do-backstep 0)
    (set-goal emergency-trash 0)
    (set-goal do-counter-systems 1)
    (disable-self)
)
(defrule
    (or
      (civilian-population >= 25)
      (or
        (food-amount >= 2000)
        (population-cap < 75)
      )
    )
=>
    (up-modify-goal desired-age c:= imperial-age)
)
(defrule
    (not
      (civilian-population >= 25)
    )
    (nor
      (food-amount >= 2000)
      (population-cap < 75)
    )
=>
    (up-modify-goal desired-age c:= dark-age)
)
(defrule
    (up-research-status c: feudal-age >= research-pending)
=>
    (set-goal attack-ready 1)
)
(defrule
    (goal attempted-researches 0)
=>
    (set-strategic-number sn-enable-training-queue 1)
)
(defrule
    (not
      (goal attempted-researches 0)
    )
=>
    (set-strategic-number sn-enable-training-queue 0)
)
(defrule
    (true)
=>
    (set-goal dead-builders 0)
    (set-goal dead-female-builders 0)
    (disable-self)
)
(defrule
    (true)
=>
    (up-get-fact unit-type-count dead-male-builder dead-builders)
    (up-get-fact unit-type-count dead-female-builder dead-female-builders)
    (up-modify-goal dead-builders g:+ dead-female-builders)
)
(defrule
    (up-compare-goal dead-builders c:>= 8)
=>
    (set-strategic-number sn-percent-building-cancellation 100)
)
(defrule
    (up-compare-goal dead-builders c:>= 1)
    (not
      (up-compare-goal dead-builders c:>= 8)
    )
=>
    (set-strategic-number sn-percent-building-cancellation 20)
)
(defrule
    (not
      (up-compare-goal dead-builders c:>= 8)
    )
    (not
      (up-compare-goal dead-builders c:>= 1)
    )
=>
    (set-strategic-number sn-percent-building-cancellation 0)
)
(defrule
    (up-compare-goal population-space-remaining c:> 10)
    (wood-amount >= 1000)
    (food-amount >= 1000)
    (gold-amount >= 1000)
=>
    (enable-timer 1 600)
    (disable-self)
)
(defrule
    (timer-triggered 1)
    (up-compare-goal population-space-remaining c:> 10)
    (wood-amount >= 1000)
    (food-amount >= 1000)
    (gold-amount >= 1000)
=>
    (up-modify-goal desired-military-buildings-per-type c:+ 1)
    (up-modify-goal desired-town-centers c:+ 1)
    (disable-timer 1)
    (enable-timer 1 600)
)
(defrule
    (building-type-count house == 0)
=>
    (up-assign-builders c: house c: 2)
    (disable-self)
)
(defrule
    (not
      (building-type-count house == 0)
    )
=>
    (up-assign-builders c: house c: 1)
    (disable-self)
)
(defrule
    (strategic-number sn-task-ungrouped-soldiers == 1)
=>
    (set-strategic-number sn-task-ungrouped-soldiers 0)
)
(defrule
    (true)
=>
    (enable-timer 2 30)
    (disable-self)
)
(defrule
    (goal attacking 0)
    (timer-triggered 2)
=>
    (set-strategic-number sn-task-ungrouped-soldiers 1)
)
(defrule
    (timer-triggered 2)
=>
    (disable-timer 2)
    (enable-timer 2 30)
)
(defrule
    (current-age >= castle-age)
=>
    (delete-building stone-wall-line)
    (delete-building palisade-wall)
    (delete-building 789)
    (delete-building 793)
    (delete-building 797)
    (delete-building 801)
    (delete-building 64)
    (delete-building 88)
    (delete-building 659)
    (delete-building 667)
    (delete-building 63)
    (delete-building 85)
    (delete-building 660)
    (delete-building 668)
)
(defrule
    (current-age == dark-age)
    (food-amount < 50)
    (up-pending-objects c: villager <= 1)
=>
    (up-drop-resources sheep-food c: 5)
    (up-drop-resources farm-food c: 5)
    (up-drop-resources forage-food c: 5)
    (up-drop-resources deer-food c: 20)
    (up-drop-resources boar-food c: 10)
)
(defrule
    (strategic-number sn-number-explore-groups >= 1)
    (town-under-attack)
=>
    (set-strategic-number sn-number-explore-groups 0)
    (set-strategic-number sn-total-number-explorers 0)
    (up-reset-scouts)
)
(defrule
    (strategic-number sn-number-explore-groups == 0)
    (not
      (town-under-attack)
    )
=>
    (set-strategic-number sn-number-explore-groups 1)
    (set-strategic-number sn-total-number-explorers 1)
)
(defrule
    (civ-selected portuguese)
=>
    (set-goal 189 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 189)
    (disable-self)
)
(defrule
    (can-build feitoria)
    (up-pending-objects c: feitoria < 5)
    (building-type-count-total feitoria < 1)
    (goal 189 2)
    (civ-selected portuguese)
=>
    (build feitoria)
    (set-goal 365 1)
)
(defrule
    (can-build feitoria)
    (up-pending-objects c: feitoria < 5)
    (building-type-count-total feitoria < 2)
    (goal 189 3)
    (civ-selected portuguese)
=>
    (build feitoria)
    (set-goal 365 1)
)
(defrule
    (goal produce-unique-units 1)
    (current-age == feudal-age)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (up-compare-goal total-villagers g:>= desired-villagers)
=>
    (up-modify-goal desired-town-centers c:max 6)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal 190 0)
    (generate-random-number 2)
    (up-get-fact random-number 0 190)
    (disable-self)
)
(defrule
    (not
      (goal 190 1)
    )
=>
    (up-jump-rule 79)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (current-age >= castle-age)
        (building-type-count castle >= 1)
      )
    )
=>
    (up-jump-rule 10)
)
(defrule
    (research-completed ri-hoardings)
=>
    (up-jump-rule 6)
)
(defrule
    (not
      (building-type-count-total castle == 0)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (not
      (current-age >= castle-age)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 650)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 650)
=>
    (buy-commodity stone)
)
(defrule
    (research-completed ri-hoardings)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-hoardings < research-pending)
    (research-available ri-hoardings)
    (building-type-count castle >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-hoardings)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-hoardings)
    (building-type-count castle >= 1)
=>
    (research ri-hoardings)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (current-age >= castle-age)
        (building-type-count castle >= 1)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-architecture)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-architecture)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-masonry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-masonry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-masonry < research-pending)
    (research-available ri-masonry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-masonry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-masonry)
    (building-type-count university >= 1)
=>
    (research ri-masonry)
)
(defrule
    (research-completed ri-architecture)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-architecture < research-pending)
    (research-available ri-architecture)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-architecture)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-architecture)
    (building-type-count university >= 1)
=>
    (research ri-architecture)
)
(defrule
    (nand
      (current-age == imperial-age)
      (and
        (current-age >= castle-age)
        (building-type-count castle >= 1)
      )
    )
=>
    (up-jump-rule 17)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (research-completed ri-bracer)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bracer < research-pending)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bracer)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bracer)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bracer)
)
(defrule
    (nand
      (not
        (current-age == imperial-age)
      )
      (and
        (current-age >= castle-age)
        (building-type-count castle >= 1)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-masonry)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-masonry)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-masonry < research-pending)
    (research-available ri-masonry)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-low)
)
(defrule
    (can-research ri-masonry)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-low)
    (research-available ri-masonry)
    (building-type-count university >= 1)
=>
    (research ri-masonry)
)
(defrule
    (nand
      (not
        (current-age == imperial-age)
      )
      (and
        (current-age >= castle-age)
        (building-type-count castle >= 1)
      )
    )
=>
    (up-jump-rule 11)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 1)
    (wood-amount >= 200)
    (building-type-count-total blacksmith == 0)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fletching)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fletching < research-pending)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fletching)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fletching)
    (building-type-count blacksmith >= 1)
=>
    (research ri-fletching)
)
(defrule
    (research-completed ri-bodkin-arrow)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-bodkin-arrow < research-pending)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-bodkin-arrow)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-bodkin-arrow)
    (building-type-count blacksmith >= 1)
=>
    (research ri-bodkin-arrow)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count castle >= 1)
    )
=>
    (up-jump-rule 9)
)
(defrule
    (research-completed ri-murder-holes)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-murder-holes)
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 100)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 100)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 100)
=>
    (buy-commodity stone)
)
(defrule
    (research-completed ri-murder-holes)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-murder-holes < research-pending)
    (research-available ri-murder-holes)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-murder-holes)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-murder-holes)
    (building-type-count university >= 1)
=>
    (research ri-murder-holes)
)
(defrule
    (strategic-number sn-stone-gatherer-percentage > 0)
    (false)
=>
    (set-goal 191 0)
    (generate-random-number 2)
    (up-get-fact random-number 0 191)
    (disable-self)
)
(defrule
    (goal 191 1)
    (strategic-number sn-stone-gatherer-percentage > 0)
    (false)
=>
    (enable-wall-placement 2)
    (disable-self)
)
(defrule
    (can-build-wall 2 stone-wall-line)
    (goal 191 1)
    (strategic-number sn-stone-gatherer-percentage > 0)
    (false)
=>
    (build-wall 2 stone-wall-line)
)
(defrule
    (building-type-count-total stone-wall-line > 0)
    (can-build-gate 2)
    (building-type-count-total gate < 5)
    (goal 191 1)
    (strategic-number sn-stone-gatherer-percentage > 0)
    (false)
=>
    (build-gate 2)
)
(defrule
    (nand
      (goal 191 1)
      (and
        (strategic-number sn-stone-gatherer-percentage > 0)
        (false)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (research-completed ri-fortified-wall)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-fortified-wall)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-fortified-wall < research-pending)
    (research-available ri-fortified-wall)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-fortified-wall)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-fortified-wall)
    (building-type-count university >= 1)
=>
    (research ri-fortified-wall)
)
(defrule
    (not
      (goal 190 2)
    )
=>
    (up-jump-rule 10)
)
(defrule
    (nand
      (current-age >= castle-age)
      (building-type-count castle >= 1)
    )
=>
    (up-jump-rule 9)
)
(defrule
    (research-completed ri-murder-holes)
=>
    (up-jump-rule 1)
)
(defrule
    (can-build university)
    (up-pending-objects c: university < 5)
    (building-type-count-total university < 1)
    (building-type-count-total university == 0)
=>
    (build university)
    (set-goal 365 1)
)
(defrule
    (research-completed ri-murder-holes)
=>
    (up-jump-rule 3)
)
(defrule
    (stone-amount < 100)
=>
    (set-goal do-stone-mining 1)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (gold-amount > 300)
    (stone-amount < 100)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (can-buy-commodity stone)
    (gold-amount > 300)
    (stone-amount < 100)
=>
    (buy-commodity stone)
)
(defrule
    (research-completed ri-murder-holes)
=>
    (up-jump-rule 2)
)
(defrule
    (up-research-status c: ri-murder-holes < research-pending)
    (research-available ri-murder-holes)
    (building-type-count university >= 1)
=>
    (up-modify-goal attempted-researches c:+ 1)
    (up-modify-goal attempted-researches-importance c:max importance-medium)
)
(defrule
    (can-research ri-murder-holes)
    (goal do-research 1)
    (up-compare-goal research-level c:<= importance-medium)
    (research-available ri-murder-holes)
    (building-type-count university >= 1)
=>
    (research ri-murder-holes)
)
(defrule
    (or
      (goal full-water-map 0)
      (or
        (warboat-count >= 10)
        (current-age == dark-age)
      )
    )
    (goal water-map 1)
    (cc-players-unit-type-count 0 sea-fish > 0)
    (not
      (town-under-attack)
    )
    (game-time >= 60)
    (building-type-count lumber-camp >= 1)
=>
    (set-goal produce-fishing-ships 1)
)
(defrule
    (not
      (goal full-water-map 0)
    )
    (nor
      (warboat-count >= 10)
      (current-age == dark-age)
    )
    (goal water-map 1)
    (cc-players-unit-type-count 0 sea-fish > 0)
    (not
      (town-under-attack)
    )
    (game-time >= 60)
    (building-type-count lumber-camp >= 1)
=>
    (set-goal produce-fishing-ships 0)
)
(defrule
    (nand
      (goal water-map 1)
      (and
        (cc-players-unit-type-count 0 sea-fish > 0)
        (and
          (not
            (town-under-attack)
          )
          (and
            (game-time >= 60)
            (building-type-count lumber-camp >= 1)
          )
        )
      )
    )
=>
    (set-goal produce-fishing-ships 0)
)
(defrule
    (up-compare-goal population-space-remaining c:< 5)
    (cc-players-unit-type-count 0 sea-fish == 0)
    (nand
      (goal water-map 1)
      (and
        (cc-players-unit-type-count 0 sea-fish > 0)
        (and
          (not
            (town-under-attack)
          )
          (and
            (game-time >= 60)
            (building-type-count lumber-camp >= 1)
          )
        )
      )
    )
=>
    (delete-unit fishing-ship)
)
(defrule
    (players-building-type-count any-ally market >= 1)
    (current-age >= imperial-age)
    (current-age >= castle-age)
    (or
      (goal full-water-map 0)
      (map-type team-islands)
    )
=>
    (set-goal produce-trade-carts 1)
)
(defrule
    (nand
      (players-building-type-count any-ally market >= 1)
      (current-age >= imperial-age)
    )
    (current-age >= castle-age)
    (or
      (goal full-water-map 0)
      (map-type team-islands)
    )
=>
    (set-goal produce-trade-carts 0)
)
(defrule
    (up-compare-goal population-space-remaining c:< 5)
    (nand
      (players-building-type-count any-ally market >= 1)
      (current-age >= imperial-age)
    )
    (current-age >= castle-age)
    (or
      (goal full-water-map 0)
      (map-type team-islands)
    )
=>
    (delete-unit trade-cart)
)
(defrule
    (goal attack-ready 1)
=>
    (chat-local-to-self chat-8f742eb6e8f419863eef6d7174d91d0a49e04e3e)
    (disable-self)
)
(defrule
    (not
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 72)
)
(defrule
    (true)
=>
    (set-goal good-archers 0)
    (set-goal good-hand-cannoneers 0)
    (set-goal good-skirmishers 0)
    (set-goal good-cavalry-archers 0)
    (set-goal good-genitours 0)
    (set-goal good-militia 0)
    (set-goal good-spearmen 0)
    (set-goal good-eagles 0)
    (set-goal good-condottiero 0)
    (set-goal good-scouts 0)
    (set-goal good-knights 0)
    (set-goal good-camels 0)
    (set-goal good-battle-elephants 0)
    (set-goal good-konniks 0)
    (set-goal good-battering-rams 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal good-mangonels 0)
    (set-goal good-scorpions 0)
    (set-goal good-bombard-cannons 0)
    (set-goal good-trebuchets 0)
    (set-goal good-armored-elephants 0)
    (set-goal good-monks 0)
    (set-goal good-missionaries 0)
    (set-goal good-villagers 0)
    (set-goal good-trade-carts 0)
    (set-goal good-unique-units 0)
    (set-goal good-fishing-ships 0)
    (set-goal good-transport-ships 0)
    (set-goal good-galleys 0)
    (set-goal good-fire-ships 0)
    (set-goal good-cannon-galleons 0)
    (set-goal good-demolition-ships 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal good-unique-units 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number aztec)
=>
    (set-goal good-eagles 1)
    (set-goal good-monks 1)
    (set-goal good-militia 1)
    (set-goal good-battering-rams 1)
    (set-goal good-mangonels 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number berbers)
=>
    (set-goal good-skirmishers 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-militia 1)
    (set-goal good-scouts 1)
    (set-goal good-camels 1)
    (set-goal good-scorpions 1)
    (set-goal good-genitours 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number briton)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-scorpions 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number burmese)
=>
    (set-goal good-scouts 1)
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-scorpions 1)
    (set-goal good-battle-elephants 1)
    (set-goal good-monks 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number bulgarians)
=>
    (set-goal good-unique-units 0)
    (set-goal good-konniks 1)
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-scouts 1)
    (set-goal good-knights 1)
    (set-goal good-battering-rams 1)
    (set-goal good-mangonels 1)
    (set-goal good-scorpions 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number byzantine)
=>
    (set-goal good-speamen 1)
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-camels 1)
    (set-goal good-battering-rams 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-monks 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number celtic)
=>
    (set-goal good-battering-rams 1)
    (set-goal good-scorpions 1)
    (set-goal good-mangonels 1)
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number chinese)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-spearmen 1)
    (set-goal good-camels 1)
    (set-goal good-battering-rams 1)
    (set-goal good-scorpions 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number ethiopian)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-spearmen 1)
    (set-goal good-mangonels 1)
    (set-goal good-scorpions 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number frankish)
=>
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-knights 1)
    (set-goal good-scorpions 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number gothic)
=>
    (set-goal good-skirmishers 1)
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-scorpions 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number hun)
=>
    (set-goal good-cavalry-archers 1)
    (set-goal good-battering-rams 1)
    (set-goal good-scouts 1)
    (set-goal good-knights 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number incan)
=>
    (set-goal good-eagles 1)
    (set-goal good-militia 1)
    (set-goal good-battering-rams 1)
    (set-goal good-scorpions 1)
    (set-goal good-archers 1)
    (set-goal good-spearmen 1)
    (set-goal good-skirmishers 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number indian)
=>
    (set-goal good-skirmishers 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-camels 1)
    (set-goal good-scouts 1)
    (set-goal good-armored-elephants 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number italian)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-militia 1)
    (set-goal good-scouts 1)
    (set-goal good-monks 1)
    (set-goal good-condottiero 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number japanese)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-cavalry-archers 1)
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-scorpions 1)
    (set-goal good-monks 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number khmer)
=>
    (set-goal good-scouts 1)
    (set-goal good-battle-elephants 1)
    (set-goal good-skirmishers 1)
    (set-goal good-battering-rams 1)
    (set-goal good-scorpions 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number korean)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-mangonels 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number magyar)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-cavalry-archers 1)
    (set-goal good-scouts 1)
    (set-goal good-knights 1)
    (set-goal good-scorpions 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number malay)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-scorpions 1)
    (set-goal good-battle-elephants 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number malian)
=>
    (set-goal good-mangonels 1)
    (set-goal good-militia 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-galleys 1)
    (set-goal good-knights 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number mayan)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-eagles 1)
    (set-goal good-spearmen 1)
    (set-goal good-battering-rams 1)
    (set-goal good-scorpions 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number mongol)
=>
    (set-goal good-cavalry-archers 1)
    (set-goal good-scouts 1)
    (set-goal good-battering-rams 1)
    (set-goal good-mangonels 1)
    (set-goal good-scorpions 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number persian)
=>
    (set-goal good-scouts 1)
    (set-goal good-knights 1)
    (set-goal good-camels 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-spearmen 1)
    (set-goal good-battering-rams 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number portuguese)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-knights 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number saracen)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-cavalry-archers 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-militia 1)
    (set-goal good-scouts 1)
    (set-goal good-camels 1)
    (set-goal good-monks 1)
    (set-goal good-battering-rams 1)
    (set-goal good-mangonels 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number slavic)
=>
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-scouts 1)
    (set-goal good-monks 1)
    (set-goal good-battering-rams 1)
    (set-goal good-mangonels 1)
    (set-goal good-scorpions 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number spanish)
=>
    (set-goal good-skirmishers 1)
    (set-goal good-hand-cannoneers 1)
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-scouts 1)
    (set-goal good-knights 1)
    (set-goal good-monks 1)
    (set-goal good-missionaries 1)
    (set-goal good-battering-rams 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number teutonic)
=>
    (set-goal good-hand-cannoneers 1)
    (set-goal good-militia 1)
    (set-goal good-spearmen 1)
    (set-goal good-knights 1)
    (set-goal good-monks 1)
    (set-goal good-mangonels 1)
    (set-goal good-scorpions 1)
    (set-goal good-fire-ships 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number turkish)
=>
    (set-goal good-hand-cannoneers 1)
    (set-goal good-cavalry-archers 1)
    (set-goal good-militia 1)
    (set-goal good-scouts 1)
    (set-goal good-camels 1)
    (set-goal good-battering-rams 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number vietnamese)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-battle-elephants 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ my-player-number viking)
=>
    (set-goal good-archers 1)
    (set-goal good-skirmishers 1)
    (set-goal good-militia 1)
    (set-goal good-battering-rams 1)
    (set-goal good-scorpions 1)
    (set-goal good-galleys 1)
    (disable-self)
)
(defrule
    (goal good-cavalry-archers 1)
    (players-civ any-ally berbers)
    (goal locked-teams 1)
=>
    (set-goal good-genitours 1)
    (disable-self)
)
(defrule
    (or
      (goal good-militia 1)
      (or
        (goal good-spearmen 1)
        (goal good-eagles 1)
      )
    )
    (players-civ any-ally italian)
    (goal locked-teams 1)
=>
    (set-goal good-condottiero 1)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal enemy-good-archers 0)
    (set-goal enemy-good-hand-cannoneers 0)
    (set-goal enemy-good-skirmishers 0)
    (set-goal enemy-good-cavalry-archers 0)
    (set-goal enemy-good-genitours 0)
    (set-goal enemy-good-militia 0)
    (set-goal enemy-good-spearmen 0)
    (set-goal enemy-good-eagles 0)
    (set-goal enemy-good-condottiero 0)
    (set-goal enemy-good-scouts 0)
    (set-goal enemy-good-knights 0)
    (set-goal enemy-good-camels 0)
    (set-goal enemy-good-battle-elephants 0)
    (set-goal enemy-good-konniks 0)
    (set-goal enemy-good-battering-rams 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal enemy-good-mangonels 0)
    (set-goal enemy-good-scorpions 0)
    (set-goal enemy-good-bombard-cannons 0)
    (set-goal enemy-good-trebuchets 0)
    (set-goal enemy-good-armored-elephants 0)
    (set-goal enemy-good-monks 0)
    (set-goal enemy-good-missionaries 0)
    (set-goal enemy-good-villagers 0)
    (set-goal enemy-good-trade-carts 0)
    (set-goal enemy-good-unique-units 0)
    (set-goal enemy-good-fishing-ships 0)
    (set-goal enemy-good-transport-ships 0)
    (set-goal enemy-good-galleys 0)
    (set-goal enemy-good-fire-ships 0)
    (set-goal enemy-good-cannon-galleons 0)
    (set-goal enemy-good-demolition-ships 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal enemy-good-unique-units 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy aztec)
=>
    (set-goal enemy-good-eagles 1)
    (set-goal enemy-good-monks 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-mangonels 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy berbers)
=>
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-camels 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-genitours 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy briton)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy burmese)
=>
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-battle-elephants 1)
    (set-goal enemy-good-monks 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy bulgarians)
=>
    (set-goal enemy-good-unique-units 0)
    (set-goal enemy-good-konniks 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-knights 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-mangonels 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy byzantine)
=>
    (set-goal enemy-good-speamen 1)
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-camels 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-monks 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy celtic)
=>
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-mangonels 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy chinese)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-camels 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy ethiopian)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-mangonels 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy frankish)
=>
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-knights 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy gothic)
=>
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy hun)
=>
    (set-goal enemy-good-cavalry-archers 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-knights 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy incan)
=>
    (set-goal enemy-good-eagles 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy indian)
=>
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-camels 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-armored-elephants 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy italian)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-monks 1)
    (set-goal enemy-good-condottiero 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy japanese)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-cavalry-archers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-monks 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy khmer)
=>
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-battle-elephants 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy korean)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-mangonels 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy magyar)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-cavalry-archers 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-knights 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy malay)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-battle-elephants 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy malian)
=>
    (set-goal enemy-good-mangonels 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-galleys 1)
    (set-goal enemy-good-knights 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy mayan)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-eagles 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy mongol)
=>
    (set-goal enemy-good-cavalry-archers 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-mangonels 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy persian)
=>
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-knights 1)
    (set-goal enemy-good-camels 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy portuguese)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-knights 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy saracen)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-cavalry-archers 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-camels 1)
    (set-goal enemy-good-monks 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-mangonels 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy slavic)
=>
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-monks 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-mangonels 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy spanish)
=>
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-knights 1)
    (set-goal enemy-good-monks 1)
    (set-goal enemy-good-missionaries 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy teutonic)
=>
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-spearmen 1)
    (set-goal enemy-good-knights 1)
    (set-goal enemy-good-monks 1)
    (set-goal enemy-good-mangonels 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-fire-ships 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy turkish)
=>
    (set-goal enemy-good-hand-cannoneers 1)
    (set-goal enemy-good-cavalry-archers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-scouts 1)
    (set-goal enemy-good-camels 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy vietnamese)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-battle-elephants 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (players-civ any-enemy viking)
=>
    (set-goal enemy-good-archers 1)
    (set-goal enemy-good-skirmishers 1)
    (set-goal enemy-good-militia 1)
    (set-goal enemy-good-battering-rams 1)
    (set-goal enemy-good-scorpions 1)
    (set-goal enemy-good-galleys 1)
    (disable-self)
)
(defrule
    (goal full-water-map 0)
    (gold-amount < 3000)
    (up-compare-goal no-gold-mining-time c:>= 120)
    (resource-found gold)
    (unit-type-count trade-cart < 10)
    (game-time >= 1800)
    (goal attack-ready 1)
=>
    (set-goal emergency-trash 1)
)
(defrule
    (gold-amount > 4000)
    (goal attack-ready 1)
=>
    (set-goal emergency-trash 0)
)
(defrule
    (nand
      (goal emergency-trash 1)
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 23)
)
(defrule
    (true)
=>
    (up-modify-goal desired-military-buildings-per-type c:+ 3)
    (disable-self)
)
(defrule
    (can-build blacksmith)
    (up-pending-objects c: blacksmith < 5)
    (building-type-count-total blacksmith < 2)
=>
    (build blacksmith)
    (set-goal 365 1)
)
(defrule
    (civ-selected magyar)
    (research-completed ri-mercenaries)
=>
    (set-goal unique-unit-cavalry-trash 1)
)
(defrule
    (nand
      (civ-selected magyar)
      (research-completed ri-mercenaries)
    )
=>
    (set-goal unique-unit-cavalry-trash 0)
)
(defrule
    (civ-selected malay)
    (research-completed ri-forced-levy)
=>
    (set-goal militia-trash 1)
)
(defrule
    (nand
      (civ-selected malay)
      (research-completed ri-forced-levy)
    )
=>
    (set-goal militia-trash 0)
)
(defrule
    (true)
=>
    (set-goal produce-archers 0)
    (set-goal produce-hand-cannoneers 0)
    (set-goal produce-cavalry-archers 0)
)
(defrule
    (goal militia-trash 0)
=>
    (set-goal produce-militia 0)
)
(defrule
    (true)
=>
    (set-goal produce-eagles 0)
    (set-goal produce-knights 0)
    (set-goal produce-camels 0)
    (set-goal produce-battle-elephants 0)
    (set-goal produce-mangonels 0)
    (set-goal produce-scorpions 0)
    (set-goal produce-monks 0)
    (set-goal produce-missionaries 0)
    (set-goal produce-condottiero 0)
)
(defrule
    (goal unique-unit-cavalry-trash 0)
=>
    (set-goal produce-unique-units 0)
)
(defrule
    (goal full-water-map 0)
=>
    (set-goal produce-galleys 0)
    (set-goal produce-fire-ships 0)
)
(defrule
    (players-unit-type-count any-enemy scout-cavalry-line >= min-detection-units)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-spearmen 1)
)
(defrule
    (players-unit-type-count any-enemy knight-line >= min-detection-units)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-spearmen 1)
)
(defrule
    (players-unit-type-count any-enemy camel-line >= min-detection-units)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-spearmen 1)
)
(defrule
    (players-unit-type-count any-enemy battle-elephant-line >= min-detection-units)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-spearmen 1)
)
(defrule
    (players-unit-type-count any-enemy skirmisher-line >= min-detection-units)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-spearmen 0)
)
(defrule
    (goal good-scouts 1)
    (players-unit-type-count any-enemy skirmisher-line >= min-detection-units)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-scouts 1)
    (set-goal produce-skirmishers 0)
)
(defrule
    (not
      (goal good-scouts 1)
    )
    (players-unit-type-count any-enemy skirmisher-line >= min-detection-units)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-skirmishers 1)
)
(defrule
    (players-unit-type-count any-enemy archer-line >= min-detection-units)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-spearmen 0)
    (set-goal produce-skirmishers 1)
)
(defrule
    (players-unit-type-count any-enemy spearman-line >= min-detection-units)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-skirmishers 1)
)
(defrule
    (goal produce-scouts 1)
    (goal unique-unit-cavalry-trash 1)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-scouts 0)
    (set-goal produce-unique-units 1)
)
(defrule
    (goal produce-unique-units 0)
    (goal produce-scouts 0)
    (goal produce-skirmishers 0)
    (goal produce-spearmen 0)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-skirmishers 1)
)
(defrule
    (goal produce-skirmishers 1)
    (goal good-genitours 1)
    (goal produce-militia 0)
    (goal produce-unique-units 0)
=>
    (set-goal produce-skirmishers 0)
    (set-goal produce-genitours 1)
)
(defrule
    (nand
      (not
        (goal emergency-trash 1)
      )
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 25)
)
(defrule
    (true)
=>
    (set-goal total-units-selected 0)
    (up-modify-goal total-units-selected g:+ produce-archers)
    (up-modify-goal total-units-selected g:+ produce-hand-cannoneers)
    (up-modify-goal total-units-selected g:+ produce-skirmishers)
    (up-modify-goal total-units-selected g:+ produce-cavalry-archers)
    (up-modify-goal total-units-selected g:+ produce-militia)
    (up-modify-goal total-units-selected g:+ produce-spearmen)
    (up-modify-goal total-units-selected g:+ produce-eagles)
    (up-modify-goal total-units-selected g:+ produce-scouts)
    (up-modify-goal total-units-selected g:+ produce-knights)
    (up-modify-goal total-units-selected g:+ produce-camels)
    (up-modify-goal total-units-selected g:+ produce-battle-elephants)
    (up-modify-goal total-units-selected g:+ produce-mangonels)
    (up-modify-goal total-units-selected g:+ produce-scorpions)
    (up-modify-goal total-units-selected g:+ produce-unique-units)
    (up-modify-goal total-units-selected g:+ produce-konniks)
    (up-modify-goal total-units-selected g:+ produce-monks)
    (up-modify-goal total-units-selected g:+ produce-genitours)
    (up-modify-goal total-units-selected g:+ produce-condottiero)
    (up-modify-goal total-units-selected g:+ produce-missionaries)
)
(defrule
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (set-goal 228 0)
    (generate-random-number 19)
    (up-get-fact random-number 0 228)
)
(defrule
    (goal produce-cavalry-archers 0)
    (goal 228 1)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-archers g:= good-archers)
)
(defrule
    (not
      (goal total-units-selected 0)
    )
    (goal 228 2)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-hand-cannoneers g:= good-hand-cannoneers)
)
(defrule
    (goal 228 3)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-skirmishers g:= good-skirmishers)
)
(defrule
    (goal produce-archers 0)
    (goal 228 4)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-cavalry-archers g:= good-cavalry-archers)
)
(defrule
    (goal produce-eagles 0)
    (goal 228 5)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-militia g:= good-militia)
)
(defrule
    (goal produce-eagles 0)
    (goal 228 6)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-spearmen g:= good-spearmen)
)
(defrule
    (goal produce-spearmen 0)
    (goal produce-militia 0)
    (goal 228 7)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-eagles g:= good-eagles)
)
(defrule
    (goal produce-knights 0)
    (goal produce-battle-elephants 0)
    (goal 228 8)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-scouts g:= good-scouts)
)
(defrule
    (goal produce-scouts 0)
    (goal produce-battle-elephants 0)
    (goal 228 9)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-knights g:= good-knights)
)
(defrule
    (goal 228 10)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-camels g:= good-camels)
)
(defrule
    (goal produce-scouts 0)
    (goal produce-knights 0)
    (goal 228 11)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-battle-elephants g:= good-battle-elephants)
)
(defrule
    (goal 228 12)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-mangonels g:= good-mangonels)
)
(defrule
    (goal 228 13)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-scorpions g:= good-scorpions)
)
(defrule
    (goal 228 14)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-unique-units g:= good-unique-units)
)
(defrule
    (goal 228 15)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-monks g:= good-monks)
)
(defrule
    (goal 228 16)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-genitours g:= good-genitours)
)
(defrule
    (not
      (goal total-units-selected 0)
    )
    (goal 228 17)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-condottiero g:= good-condottiero)
)
(defrule
    (goal 228 18)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-missionaries g:= good-missionaries)
)
(defrule
    (goal 228 19)
    (up-compare-goal total-units-selected g:< desired-units-per-type)
=>
    (up-modify-goal produce-konniks g:= good-konniks)
)
(defrule
    (goal produce-fire-ships 0)
    (goal produce-galleys 0)
=>
    (set-goal 229 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 229)
)
(defrule
    (goal produce-galleys 0)
    (goal 229 1)
    (goal produce-fire-ships 0)
    (goal produce-galleys 0)
=>
    (up-modify-goal produce-galleys g:= good-galleys)
)
(defrule
    (goal produce-fire-ships 0)
    (goal 229 2)
    (goal produce-fire-ships 0)
    (goal produce-galleys 0)
=>
    (up-modify-goal produce-fire-ships g:= good-fire-ships)
)
(defrule
    (goal 229 3)
    (goal produce-fire-ships 0)
    (goal produce-galleys 0)
=>
    (up-modify-goal produce-galleys g:= good-galleys)
    (up-modify-goal produce-fire-ships g:= good-fire-ships)
)
(defrule
    (nand
      (goal do-counter-systems 1)
      (and
        (not
          (goal emergency-trash 1)
        )
        (goal attack-ready 1)
      )
    )
=>
    (up-jump-rule 72)
)
(defrule
    (true)
=>
    (set-goal bcs-making-infantry 0)
    (set-goal bcs-making-ranged 0)
    (set-goal bcs-making-cavalry 0)
    (disable-self)
)
(defrule
    (goal unique-unit-is-infantry 1)
    (goal produce-unique-units 1)
=>
    (set-goal bcs-making-infantry 1)
)
(defrule
    (goal unique-unit-is-ranged 1)
    (goal produce-unique-units 1)
=>
    (set-goal bcs-making-ranged 1)
)
(defrule
    (goal unique-unit-is-cavalry 1)
    (goal produce-unique-units 1)
=>
    (set-goal bcs-making-cavalry 1)
)
(defrule
    (goal produce-archers 1)
=>
    (set-goal bcs-making-ranged 1)
)
(defrule
    (goal produce-hand-cannoneers 1)
=>
    (set-goal bcs-making-ranged 1)
)
(defrule
    (goal produce-skirmishers 1)
=>
    (set-goal bcs-making-ranged 1)
)
(defrule
    (goal produce-cavalry-archers 1)
=>
    (set-goal bcs-making-ranged 1)
)
(defrule
    (goal produce-genitours 1)
=>
    (set-goal bcs-making-ranged 1)
)
(defrule
    (goal produce-militia 1)
=>
    (set-goal bcs-making-infantry 1)
)
(defrule
    (goal produce-spearmen 1)
=>
    (set-goal bcs-making-infantry 1)
)
(defrule
    (goal produce-eagles 1)
=>
    (set-goal bcs-making-infantry 1)
)
(defrule
    (goal produce-condottiero 1)
=>
    (set-goal bcs-making-infantry 1)
)
(defrule
    (goal produce-scouts 1)
=>
    (set-goal bcs-making-cavalry 1)
)
(defrule
    (goal produce-knights 1)
=>
    (set-goal bcs-making-cavalry 1)
)
(defrule
    (goal produce-camels 1)
=>
    (set-goal bcs-making-cavalry 1)
)
(defrule
    (goal produce-battle-elephants 1)
=>
    (set-goal bcs-making-cavalry 1)
)
(defrule
    (goal produce-konniks 1)
=>
    (set-goal bcs-making-cavalry 1)
)
(defrule
    (not
      (players-unit-type-count any-enemy monk-set >= min-detection-units)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (true)
=>
    (set-goal produce-battle-elephants 0)
    (set-goal produce-knights 0)
    (set-goal produce-camels 0)
)
(defrule
    (goal unique-unit-is-expensive 1)
=>
    (set-goal produce-unique-units 0)
    (set-goal produce-konniks 0)
)
(defrule
    (true)
=>
    (set-goal produce-mangonels 0)
)
(defrule
    (not
      (players-unit-type-count any-enemy missionary >= min-detection-units)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (true)
=>
    (set-goal produce-battle-elephants 0)
    (set-goal produce-knights 0)
    (set-goal produce-camels 0)
)
(defrule
    (goal unique-unit-is-expensive 1)
=>
    (set-goal produce-unique-units 0)
    (set-goal produce-konniks 0)
)
(defrule
    (true)
=>
    (set-goal produce-mangonels 0)
)
(defrule
    (players-unit-type-count any-enemy archer >= min-detection-units)
=>
    (set-goal produce-spearmen 0)
)
(defrule
    (players-unit-type-count any-enemy cavalry-archer-line >= min-detection-units)
=>
    (set-goal produce-spearmen 0)
)
(defrule
    (players-unit-type-count any-enemy mangonel-line >= min-detection-units)
=>
    (set-goal produce-scorpions 0)
    (set-goal produce-skirmishers 0)
)
(defrule
    (players-unit-type-count any-enemy bombard-cannon >= min-detection-units)
=>
    (set-goal produce-scorpions 0)
)
(defrule
    (not
      (players-unit-type-count any-enemy knight-line >= min-detection-units)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal produce-scorpions 0)
    (set-goal produce-mangonels 0)
)
(defrule
    (not
      (players-unit-type-count any-enemy scout-cavalry-line >= min-detection-units)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal produce-scorpions 0)
    (set-goal produce-mangonels 0)
)
(defrule
    (not
      (players-unit-type-count any-enemy camel-line >= min-detection-units)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal produce-scorpions 0)
    (set-goal produce-mangonels 0)
)
(defrule
    (not
      (players-unit-type-count any-enemy battle-elephant-line >= min-detection-units)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal produce-scorpions 0)
    (set-goal produce-mangonels 0)
)
(defrule
    (not
      (players-unit-type-count any-enemy war-elephant-line >= min-detection-units)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal produce-scorpions 0)
    (set-goal produce-mangonels 0)
)
(defrule
    (nand
      (players-unit-type-count any-enemy archer >= min-detection-units)
      (or
        (goal desired-units-per-type 1)
        (and
          (goal bcs-making-infantry 1)
          (and
            (goal bcs-making-ranged 0)
            (goal bcs-making-cavalry 0)
          )
        )
      )
    )
=>
    (up-jump-rule 2)
)
(defrule
    (true)
=>
    (set-goal produce-militia 0)
    (set-goal produce-condottiero 0)
    (set-goal produce-hand-cannoneers 0)
    (set-goal produce-monks 0)
    (set-goal produce-missionaries 0)
)
(defrule
    (goal unique-unit-is-infantry 1)
    (not
      (or
        (civ-selected gothic)
        (or
          (civ-selected malay)
          (or
            (civ-selected celtic)
            (civ-selected bulgarians)
          )
        )
      )
    )
=>
    (set-goal produce-unique-units 0)
)
(defrule
    (nand
      (players-unit-type-count any-enemy chu-ko-nu-line >= min-detection-units)
      (or
        (goal desired-units-per-type 1)
        (and
          (goal bcs-making-infantry 1)
          (and
            (goal bcs-making-ranged 0)
            (goal bcs-making-cavalry 0)
          )
        )
      )
    )
=>
    (up-jump-rule 2)
)
(defrule
    (true)
=>
    (set-goal produce-militia 0)
    (set-goal produce-condottiero 0)
    (set-goal produce-hand-cannoneers 0)
    (set-goal produce-monks 0)
    (set-goal produce-missionaries 0)
)
(defrule
    (goal unique-unit-is-infantry 1)
    (not
      (or
        (civ-selected gothic)
        (or
          (civ-selected malay)
          (or
            (civ-selected celtic)
            (civ-selected bulgarians)
          )
        )
      )
    )
=>
    (set-goal produce-unique-units 0)
)
(defrule
    (nand
      (players-unit-type-count any-enemy plumed-archer-line >= min-detection-units)
      (or
        (goal desired-units-per-type 1)
        (and
          (goal bcs-making-infantry 1)
          (and
            (goal bcs-making-ranged 0)
            (goal bcs-making-cavalry 0)
          )
        )
      )
    )
=>
    (up-jump-rule 2)
)
(defrule
    (true)
=>
    (set-goal produce-militia 0)
    (set-goal produce-condottiero 0)
    (set-goal produce-hand-cannoneers 0)
    (set-goal produce-monks 0)
    (set-goal produce-missionaries 0)
)
(defrule
    (goal unique-unit-is-infantry 1)
    (not
      (or
        (civ-selected gothic)
        (or
          (civ-selected malay)
          (or
            (civ-selected celtic)
            (civ-selected bulgarians)
          )
        )
      )
    )
=>
    (set-goal produce-unique-units 0)
)
(defrule
    (nand
      (players-unit-type-count any-enemy hand-cannoneer >= min-detection-units)
      (or
        (goal desired-units-per-type 1)
        (and
          (goal bcs-making-infantry 1)
          (and
            (goal bcs-making-ranged 0)
            (goal bcs-making-cavalry 0)
          )
        )
      )
    )
=>
    (up-jump-rule 2)
)
(defrule
    (true)
=>
    (set-goal produce-militia 0)
    (set-goal produce-condottiero 0)
)
(defrule
    (goal unique-unit-is-infantry 1)
    (not
      (or
        (civ-selected gothic)
        (or
          (civ-selected malay)
          (or
            (civ-selected celtic)
            (civ-selected bulgarians)
          )
        )
      )
    )
=>
    (set-goal produce-unique-units 0)
)
(defrule
    (nand
      (players-unit-type-count any-enemy scorpion-line >= min-detection-units)
      (or
        (goal desired-units-per-type 1)
        (and
          (goal bcs-making-infantry 1)
          (and
            (goal bcs-making-ranged 0)
            (goal bcs-making-cavalry 0)
          )
        )
      )
    )
=>
    (up-jump-rule 2)
)
(defrule
    (true)
=>
    (set-goal produce-militia 0)
    (set-goal produce-condottiero 0)
)
(defrule
    (goal unique-unit-is-infantry 1)
    (not
      (or
        (civ-selected gothic)
        (or
          (civ-selected malay)
          (or
            (civ-selected celtic)
            (civ-selected bulgarians)
          )
        )
      )
    )
=>
    (set-goal produce-unique-units 0)
)
(defrule
    (nand
      (players-unit-type-count any-enemy jaguar-man-line >= min-detection-units)
      (or
        (goal desired-units-per-type 1)
        (and
          (goal bcs-making-infantry 1)
          (and
            (goal bcs-making-ranged 0)
            (goal bcs-making-cavalry 0)
          )
        )
      )
    )
=>
    (up-jump-rule 2)
)
(defrule
    (true)
=>
    (set-goal produce-militia 0)
    (set-goal produce-condottiero 0)
)
(defrule
    (goal unique-unit-is-infantry 1)
    (not
      (or
        (civ-selected gothic)
        (or
          (civ-selected malay)
          (or
            (civ-selected celtic)
            (civ-selected bulgarians)
          )
        )
      )
    )
=>
    (set-goal produce-unique-units 0)
)
(defrule
    (nand
      (players-unit-type-count any-enemy teutonic-knight-line >= min-detection-units)
      (or
        (goal desired-units-per-type 1)
        (and
          (goal bcs-making-infantry 1)
          (and
            (goal bcs-making-ranged 0)
            (goal bcs-making-cavalry 0)
          )
        )
      )
    )
=>
    (up-jump-rule 2)
)
(defrule
    (true)
=>
    (set-goal produce-militia 0)
    (set-goal produce-condottiero 0)
)
(defrule
    (goal unique-unit-is-infantry 1)
    (not
      (or
        (civ-selected gothic)
        (or
          (civ-selected malay)
          (or
            (civ-selected celtic)
            (civ-selected bulgarians)
          )
        )
      )
    )
=>
    (set-goal produce-unique-units 0)
)
(defrule
    (nand
      (players-unit-type-count any-enemy spearman-line >= min-detection-units)
      (or
        (goal desired-units-per-type 1)
        (and
          (goal bcs-making-cavalry 1)
          (and
            (goal bcs-making-infantry 0)
            (goal bcs-making-ranged 0)
          )
        )
      )
    )
=>
    (up-jump-rule 2)
)
(defrule
    (true)
=>
    (set-goal produce-knights 0)
    (set-goal produce-scouts 0)
    (set-goal produce-battle-elephants 0)
    (set-goal produce-camels 0)
)
(defrule
    (goal unique-unit-is-cavalry 1)
    (goal unique-unit-counters-infantry 0)
    (not
      (civ-selected bulgarians)
    )
=>
    (set-goal produce-unique-units 0)
)
(defrule
    (nand
      (players-unit-type-count any-enemy battle-elephant-line >= min-detection-units)
      (goal desired-units-per-type 1)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (true)
=>
    (set-goal produce-eagles 0)
    (set-goal produce-militia 0)
    (set-goal produce-condottiero 0)
)
(defrule
    (goal unique-unit-is-infantry 1)
    (goal unique-unit-counters-cavalry 0)
=>
    (set-goal produce-unique-units 0)
    (set-goal produce-konniks 0)
)
(defrule
    (true)
=>
    (set-goal produce-scouts 0)
)
(defrule
    (nand
      (players-unit-type-count any-enemy war-elephant-line >= min-detection-units)
      (goal desired-units-per-type 1)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (true)
=>
    (set-goal produce-eagles 0)
    (set-goal produce-militia 0)
    (set-goal produce-condottiero 0)
)
(defrule
    (goal unique-unit-is-infantry 1)
    (goal unique-unit-counters-cavalry 0)
=>
    (set-goal produce-unique-units 0)
    (set-goal produce-konniks 0)
)
(defrule
    (true)
=>
    (set-goal produce-scouts 0)
)
(defrule
    (nand
      (goal do-counter-systems 1)
      (and
        (not
          (goal emergency-trash 1)
        )
        (goal attack-ready 1)
      )
    )
=>
    (up-jump-rule 16)
)
(defrule
    (goal partial-ranged-blacksmith-investment 1)
    (goal produce-genitours 0)
=>
    (set-goal produce-skirmishers 0)
)
(defrule
    (players-unit-type-count target-player skirmisher-line >= min-detection-units)
    (goal produce-knights 0)
    (goal produce-camels 0)
    (goal partial-ranged-blacksmith-investment 1)
    (goal produce-genitours 0)
=>
    (set-goal produce-skirmishers 1)
)
(defrule
    (players-unit-type-count target-player archer-line >= min-detection-units)
    (goal produce-knights 0)
    (goal produce-camels 0)
    (goal partial-ranged-blacksmith-investment 1)
    (goal produce-genitours 0)
=>
    (set-goal produce-skirmishers 1)
)
(defrule
    (players-unit-type-count target-player cavalry-archer-line >= min-detection-units)
    (goal produce-camels 0)
    (goal partial-ranged-blacksmith-investment 1)
    (goal produce-genitours 0)
=>
    (set-goal produce-skirmishers 1)
)
(defrule
    (players-unit-type-count target-player war-wagon-line >= min-detection-units)
    (goal produce-camels 0)
    (goal partial-ranged-blacksmith-investment 1)
    (goal produce-genitours 0)
=>
    (set-goal produce-skirmishers 1)
)
(defrule
    (nand
      (goal partial-ranged-blacksmith-investment 1)
      (goal produce-genitours 0)
    )
=>
    (set-goal produce-skirmishers 0)
)
(defrule
    (goal partial-infantry-blacksmith-investment 1)
    (or
      (current-age == feudal-age)
      (or
        (research-available ri-pikeman)
        (up-research-status c: ri-pikeman >= research-pending)
      )
    )
    (goal produce-camels 0)
=>
    (set-goal produce-spearmen 0)
)
(defrule
    (players-unit-type-count target-player scout-cavalry-line >= min-detection-units)
    (goal partial-infantry-blacksmith-investment 1)
    (or
      (current-age == feudal-age)
      (or
        (research-available ri-pikeman)
        (up-research-status c: ri-pikeman >= research-pending)
      )
    )
    (goal produce-camels 0)
=>
    (set-goal produce-spearmen 1)
)
(defrule
    (players-unit-type-count target-player knight-line >= min-detection-units)
    (goal produce-monks 0)
    (goal partial-infantry-blacksmith-investment 1)
    (or
      (current-age == feudal-age)
      (or
        (research-available ri-pikeman)
        (up-research-status c: ri-pikeman >= research-pending)
      )
    )
    (goal produce-camels 0)
=>
    (set-goal produce-spearmen 1)
)
(defrule
    (players-unit-type-count target-player battle-elephant-line >= min-detection-units)
    (goal produce-monks 0)
    (goal partial-infantry-blacksmith-investment 1)
    (or
      (current-age == feudal-age)
      (or
        (research-available ri-pikeman)
        (up-research-status c: ri-pikeman >= research-pending)
      )
    )
    (goal produce-camels 0)
=>
    (set-goal produce-spearmen 1)
)
(defrule
    (players-unit-type-count target-player camel-line >= min-detection-units)
    (goal produce-monks 0)
    (goal partial-infantry-blacksmith-investment 1)
    (or
      (current-age == feudal-age)
      (or
        (research-available ri-pikeman)
        (up-research-status c: ri-pikeman >= research-pending)
      )
    )
    (goal produce-camels 0)
=>
    (set-goal produce-spearmen 1)
)
(defrule
    (players-unit-type-count target-player war-elephant-line >= min-detection-units)
    (goal produce-monks 0)
    (goal partial-infantry-blacksmith-investment 1)
    (or
      (current-age == feudal-age)
      (or
        (research-available ri-pikeman)
        (up-research-status c: ri-pikeman >= research-pending)
      )
    )
    (goal produce-camels 0)
=>
    (set-goal produce-spearmen 1)
)
(defrule
    (players-unit-type-count target-player cataphract-line >= min-detection-units)
    (goal produce-monks 0)
    (goal partial-infantry-blacksmith-investment 1)
    (or
      (current-age == feudal-age)
      (or
        (research-available ri-pikeman)
        (up-research-status c: ri-pikeman >= research-pending)
      )
    )
    (goal produce-camels 0)
=>
    (set-goal produce-spearmen 1)
)
(defrule
    (nand
      (goal partial-infantry-blacksmith-investment 1)
      (and
        (or
          (current-age == feudal-age)
          (or
            (research-available ri-pikeman)
            (up-research-status c: ri-pikeman >= research-pending)
          )
        )
        (goal produce-camels 0)
      )
    )
=>
    (set-goal produce-spearmen 0)
)
(defrule
    (can-train spearman-line)
    (unit-type-count-total spearman-line < 4)
    (players-unit-type-count target-player scout-cavalry-line >= 2)
    (current-age == feudal-age)
    (goal produce-spearmen 0)
=>
    (train spearman-line)
)
(defrule
    (can-train mangonel-line)
    (unit-type-count-total mangonel-line < 2)
    (or
      (players-unit-type-count target-player scorpion-line >= 1)
      (players-unit-type-count target-player skirmisher-line >= 1)
    )
    (current-age == castle-age)
    (goal produce-mangonels 0)
=>
    (train mangonel-line)
)
(defrule
    (not
      (goal emergency-trash 1)
    )
    (goal attack-ready 1)
=>
    (set-goal no-unit-rule-passes 0)
    (set-goal director-units-selected 0)
    (disable-self)
)
(defrule
    (nand
      (not
        (goal emergency-trash 1)
      )
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal director-units-selected 0)
    (up-modify-goal director-units-selected g:+ produce-archers)
    (up-modify-goal director-units-selected g:+ produce-hand-cannoneers)
    (up-modify-goal director-units-selected g:+ produce-skirmishers)
    (up-modify-goal director-units-selected g:+ produce-cavalry-archers)
    (up-modify-goal director-units-selected g:+ produce-militia)
    (up-modify-goal director-units-selected g:+ produce-spearmen)
    (up-modify-goal director-units-selected g:+ produce-eagles)
    (up-modify-goal director-units-selected g:+ produce-scouts)
    (up-modify-goal director-units-selected g:+ produce-knights)
    (up-modify-goal director-units-selected g:+ produce-camels)
    (up-modify-goal director-units-selected g:+ produce-battle-elephants)
    (up-modify-goal director-units-selected g:+ produce-mangonels)
    (up-modify-goal director-units-selected g:+ produce-scorpions)
    (up-modify-goal director-units-selected g:+ produce-unique-units)
    (up-modify-goal director-units-selected g:+ produce-konniks)
    (up-modify-goal director-units-selected g:+ produce-monks)
    (up-modify-goal director-units-selected g:+ produce-genitours)
    (up-modify-goal director-units-selected g:+ produce-condottiero)
    (up-modify-goal director-units-selected g:+ produce-missionaries)
)
(defrule
    (goal director-units-selected 0)
    (not
      (goal emergency-trash 1)
    )
    (goal attack-ready 1)
=>
    (up-modify-goal no-unit-rule-passes c:+ 1)
)
(defrule
    (not
      (goal director-units-selected 0)
    )
    (not
      (goal emergency-trash 1)
    )
    (goal attack-ready 1)
=>
    (set-goal no-unit-rule-passes 0)
)
(defrule
    (up-compare-goal no-unit-rule-passes c:>= 30)
    (not
      (goal emergency-trash 1)
    )
    (goal attack-ready 1)
=>
    (chat-local-to-self chat-29ea2bba50e4d37d23b48f2d6fe2bb51dd2c79be)
    (set-goal do-counter-systems 0)
)
(defrule
    (not
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 9)
)
(defrule
    (goal attacking 0)
    (town-under-attack)
    (not
      (enemy-buildings-in-town)
    )
=>
    (set-goal produce-battering-rams 0)
    (set-goal produce-trebuchets 0)
    (set-goal produce-cannon-galleons 0)
    (set-goal produce-demolition-ships 0)
)
(defrule
    (nand
      (goal attacking 0)
      (and
        (town-under-attack)
        (not
          (enemy-buildings-in-town)
        )
      )
    )
=>
    (set-goal produce-battering-rams 0)
    (set-goal produce-armored-elephants 0)
    (set-goal produce-trebuchets 0)
    (set-goal produce-cannon-galleons 0)
    (set-goal produce-demolition-ships 0)
)
(defrule
    (current-age == imperial-age)
    (unit-type-count-total cannon-galleon-line < max-cannon-galleons)
    (or
      (research-available ri-cannon-galleon)
      (unit-available cannon-galleon-line)
    )
    (goal water-map 1)
    (building-type-count dock >= 1)
    (nand
      (goal attacking 0)
      (and
        (town-under-attack)
        (not
          (enemy-buildings-in-town)
        )
      )
    )
=>
    (set-goal produce-cannon-galleons 1)
)
(defrule
    (up-compare-goal target-warboat-percentage c:<= 100)
    (up-compare-goal target-warboat-count c:>= 8)
    (unit-type-count-total demolition-ship-line < max-demolition-ships)
    (goal water-map 1)
    (building-type-count dock >= 1)
    (nand
      (goal attacking 0)
      (and
        (town-under-attack)
        (not
          (enemy-buildings-in-town)
        )
      )
    )
=>
    (set-goal produce-demolition-ships 1)
)
(defrule
    (unit-type-count-total armored-elephant-line < max-castle-age-rams)
    (current-age == castle-age)
    (goal good-armored-elephants 1)
    (or
      (military-population >= 20)
      (or
        (enemy-buildings-in-town)
        (goal threat-source castle)
      )
    )
    (or
      (current-age == castle-age)
      (or
        (building-type-count castle == 0)
        (or
          (goal good-battering-rams 1)
          (goal good-armored-elephants 1)
        )
      )
    )
    (nand
      (goal attacking 0)
      (and
        (town-under-attack)
        (not
          (enemy-buildings-in-town)
        )
      )
    )
=>
    (set-goal produce-armored-elephants 1)
)
(defrule
    (unit-type-count-total armored-elephant-line < max-imperial-age-rams)
    (current-age == imperial-age)
    (goal good-armored-elephants 1)
    (or
      (military-population >= 20)
      (or
        (enemy-buildings-in-town)
        (goal threat-source castle)
      )
    )
    (or
      (current-age == castle-age)
      (or
        (building-type-count castle == 0)
        (or
          (goal good-battering-rams 1)
          (goal good-armored-elephants 1)
        )
      )
    )
    (nand
      (goal attacking 0)
      (and
        (town-under-attack)
        (not
          (enemy-buildings-in-town)
        )
      )
    )
=>
    (set-goal produce-armored-elephants 1)
)
(defrule
    (unit-type-count-total battering-ram-line < max-castle-age-rams)
    (current-age == castle-age)
    (not
      (goal good-armored-elephants 1)
    )
    (or
      (military-population >= 20)
      (or
        (enemy-buildings-in-town)
        (goal threat-source castle)
      )
    )
    (or
      (current-age == castle-age)
      (or
        (building-type-count castle == 0)
        (or
          (goal good-battering-rams 1)
          (goal good-armored-elephants 1)
        )
      )
    )
    (nand
      (goal attacking 0)
      (and
        (town-under-attack)
        (not
          (enemy-buildings-in-town)
        )
      )
    )
=>
    (set-goal produce-battering-rams 1)
)
(defrule
    (unit-type-count-total battering-ram-line < max-imperial-age-rams)
    (current-age == imperial-age)
    (not
      (goal good-armored-elephants 1)
    )
    (or
      (military-population >= 20)
      (or
        (enemy-buildings-in-town)
        (goal threat-source castle)
      )
    )
    (or
      (current-age == castle-age)
      (or
        (building-type-count castle == 0)
        (or
          (goal good-battering-rams 1)
          (goal good-armored-elephants 1)
        )
      )
    )
    (nand
      (goal attacking 0)
      (and
        (town-under-attack)
        (not
          (enemy-buildings-in-town)
        )
      )
    )
=>
    (set-goal produce-battering-rams 1)
)
(defrule
    (unit-type-count-total trebuchet-set < max-trebs)
    (up-pending-objects c: trebuchet-set == 0)
    (current-age == imperial-age)
    (not
      (current-age == castle-age)
    )
    (nor
      (building-type-count castle == 0)
      (or
        (goal good-battering-rams 1)
        (goal good-armored-elephants 1)
      )
    )
    (nand
      (goal attacking 0)
      (and
        (town-under-attack)
        (not
          (enemy-buildings-in-town)
        )
      )
    )
=>
    (set-goal produce-trebuchets 1)
)
(defrule
    (not
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (unit-type-count-total transport-ship < 4)
    (goal full-water-map 1)
    (soldier-count > 5)
=>
    (set-goal produce-transport-ships 1)
)
(defrule
    (not
      (unit-type-count-total transport-ship < 4)
    )
    (goal full-water-map 1)
    (soldier-count > 5)
=>
    (set-goal produce-transport-ships 0)
)
(defrule
    (nand
      (goal full-water-map 1)
      (soldier-count > 5)
    )
=>
    (set-goal produce-transport-ships 0)
)
(defrule
    (not
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (true)
=>
    (chat-local-to-self chat-fefcabf59d1c3c3caa349ec6ed9b0d28e70eb966)
    (disable-self)
)
(defrule
    (or
      (up-compare-goal target-military-percentage c:>= 110)
      (up-compare-goal population-space-remaining c:<= 5)
    )
    (military-population >= 8)
    (goal attacking 0)
=>
    (set-goal attacking 1)
)
(defrule
    (up-compare-goal target-military-percentage c:<= 80)
    (goal attacking 1)
    (nand
      (or
        (up-compare-goal target-military-percentage c:>= 110)
        (up-compare-goal population-space-remaining c:<= 5)
      )
      (and
        (military-population >= 8)
        (goal attacking 0)
      )
    )
=>
    (set-goal attacking 0)
)
(defrule
    (not
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 25)
)
(defrule
    (true)
=>
    (chat-local-to-self chat-fc08c9d5dec4bab3540668111e77d2fd114538f8)
    (set-goal 235 0)
    (disable-self)
    (generate-random-number 2)
    (up-get-fact random-number 0 235)
)
(defrule
    (goal 235 1)
=>
    (set-goal balanced-aggressive 1)
    (disable-self)
)
(defrule
    (goal 235 2)
=>
    (set-goal balanced-aggressive 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal aggressive-override 0)
    (set-goal passive-override 0)
)
(defrule
    (true)
=>
    (enable-timer 3 180)
    (disable-self)
)
(defrule
    (timer-triggered 3)
=>
    (set-goal 239 0)
    (generate-random-number 2)
    (up-get-fact random-number 0 239)
)
(defrule
    (goal 239 1)
    (timer-triggered 3)
=>
    (set-goal balanced-aggressive 1)
)
(defrule
    (goal 239 2)
    (timer-triggered 3)
=>
    (set-goal balanced-aggressive 0)
)
(defrule
    (timer-triggered 3)
=>
    (disable-timer 3)
    (enable-timer 3 180)
)
(defrule
    (up-compare-goal target-military-percentage c:> 100)
    (up-compare-goal target-military-percentage c:<= 150)
    (goal attacking 1)
=>
    (set-goal aggressive-override 1)
)
(defrule
    (up-compare-goal target-military-percentage c:> 100)
    (up-compare-goal target-military-percentage c:<= 150)
    (goal attacking 1)
=>
    (enable-timer 4 30)
    (disable-self)
)
(defrule
    (timer-triggered 4)
    (up-compare-goal target-military-percentage c:> 100)
    (up-compare-goal target-military-percentage c:<= 150)
    (goal attacking 1)
=>
    (chat-local-to-self chat-52ae6a85e981cdf086ac3cccf45b963d6202eccd)
    (disable-timer 4)
    (enable-timer 4 30)
)
(defrule
    (up-compare-goal largest-enemy-military-percentage c:>= 200)
    (military-population >= 30)
    (not
      (goal attempted-researches 0)
    )
=>
    (set-goal passive-override 1)
)
(defrule
    (up-compare-goal largest-enemy-military-percentage c:>= 200)
    (military-population >= 30)
    (not
      (goal attempted-researches 0)
    )
=>
    (enable-timer 5 30)
    (disable-self)
)
(defrule
    (timer-triggered 5)
    (up-compare-goal largest-enemy-military-percentage c:>= 200)
    (military-population >= 30)
    (not
      (goal attempted-researches 0)
    )
=>
    (chat-local-to-self chat-ba183a7e2eeae21ba551776d9426e1df24686067)
    (disable-timer 5)
    (enable-timer 5 30)
)
(defrule
    (nand
      (or
        (goal balanced-aggressive 1)
        (goal aggressive-override 1)
      )
      (goal passive-override 0)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal produce-units 1)
    (set-goal do-research 1)
)
(defrule
    (goal produce-militia 1)
    (up-research-status c: ri-man-at-arms < research-pending)
=>
    (enable-timer 6 30)
    (disable-self)
)
(defrule
    (timer-triggered 6)
    (goal produce-militia 1)
    (up-research-status c: ri-man-at-arms < research-pending)
=>
    (chat-local-to-self chat-2d2b74194462d0d4cb99bbd9229a4b903a4d3074)
    (disable-timer 6)
    (enable-timer 6 30)
)
(defrule
    (goal produce-militia 1)
    (up-research-status c: ri-man-at-arms < research-pending)
=>
    (set-goal produce-units 0)
)
(defrule
    (or
      (goal balanced-aggressive 1)
      (goal aggressive-override 1)
    )
    (goal passive-override 0)
=>
    (up-jump-rule 4)
)
(defrule
    (goal produce-units 0)
    (or
      (goal attempted-researches 0)
      (or
        (and
          (goal under-attack 1)
          (goal attacking 0)
        )
        (and
          (up-compare-goal target-military-percentage c:< 100)
          (military-population < 10)
        )
      )
    )
=>
    (chat-local-to-self chat-a373c0fbab909e639a5687e4475b4753c7459701)
)
(defrule
    (or
      (goal attempted-researches 0)
      (or
        (and
          (goal under-attack 1)
          (goal attacking 0)
        )
        (and
          (up-compare-goal target-military-percentage c:< 100)
          (military-population < 10)
        )
      )
    )
=>
    (set-goal produce-units 1)
    (set-goal do-research 1)
)
(defrule
    (goal produce-units 1)
    (not
      (goal attempted-researches 0)
    )
    (nor
      (and
        (goal under-attack 1)
        (goal attacking 0)
      )
      (and
        (up-compare-goal target-military-percentage c:< 100)
        (military-population < 10)
      )
    )
=>
    (chat-local-to-self chat-4a66ee3f7553287adc5b1eced0eceffcc2061b8f)
)
(defrule
    (not
      (goal attempted-researches 0)
    )
    (nor
      (and
        (goal under-attack 1)
        (goal attacking 0)
      )
      (and
        (up-compare-goal target-military-percentage c:< 100)
        (military-population < 10)
      )
    )
=>
    (set-goal produce-units 0)
    (set-goal do-research 1)
)
(defrule
    (nand
      (goal full-water-map 1)
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal allow-land-units 0)
)
(defrule
    (nand
      (goal full-water-map 1)
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal allow-naval-units 1)
)
(defrule
    (nand
      (not
        (goal full-water-map 1)
      )
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal allow-land-units 1)
)
(defrule
    (nand
      (not
        (goal full-water-map 1)
      )
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (true)
=>
    (set-goal allow-naval-units 0)
)
(defrule
    (players-unit-type-count any-enemy fishing-ship > 0)
=>
    (set-goal allow-naval-units 1)
)
(defrule
    (players-unit-type-count any-enemy dock > 0)
=>
    (set-goal allow-naval-units 1)
)
(defrule
    (or
      (players-unit-type-count any-enemy galley-line > 0)
      (players-unit-type-count any-enemy fire-ship-line > 0)
    )
=>
    (set-goal allow-naval-units 1)
)
(defrule
    (up-compare-goal largest-enemy-warboat-percentage c:>= 200)
    (warboat-count >= 10)
=>
    (set-goal allow-naval-units 0)
)
(defrule
    (not
      (goal attack-ready 1)
    )
=>
    (up-jump-rule 8)
)
(defrule
    (true)
=>
    (up-find-player enemy find-closest 240)
    (up-modify-sn sn-target-player-number g:= 240)
    (up-send-scout group-type-land-explore scout-enemy)
    (disable-self)
)
(defrule
    (or
      (not
        (player-in-game target-player)
      )
      (not
        (stance-toward target-player enemy)
      )
    )
=>
    (up-find-player enemy find-closest 240)
    (up-modify-sn sn-target-player-number g:= 240)
    (up-send-scout group-type-land-explore scout-enemy)
)
(defrule
    (strategic-number sn-target-player-number != -1)
    (or
      (not
        (player-in-game target-player)
      )
      (not
        (stance-toward target-player enemy)
      )
    )
=>
    (up-chat-data-to-self "Retargeting to player %d" s: sn-target-player-number)
)
(defrule
    (true)
=>
    (set-goal next-retarget 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal threatening-important 0)
)
(defrule
    (or
      (goal threat-target castle)
      (or
        (goal threat-target town-center)
        (or
          (goal threat-target mining-camp)
          (goal threat-target house)
        )
      )
    )
=>
    (set-goal threatening-important 1)
)
(defrule
    (or
      (goal threat-target barracks)
      (or
        (goal threat-target archery-range)
        (or
          (goal threat-target stable)
          (or
            (goal threat-target siege-workshop)
            (goal threat-target dock)
          )
        )
      )
    )
=>
    (set-goal threatening-important 1)
)
(defrule
    (up-compare-goal threat-player s:!= sn-target-player-number)
    (up-compare-goal threat-player c:>= 1)
    (up-compare-goal threat-player c:<= 8)
    (up-compare-goal game-time-goal g:>= next-retarget)
    (goal threatening-important 1)
=>
    (up-modify-sn sn-target-player-number g:= threat-player)
    (up-modify-sn sn-focus-player-number g:= threat-player)
    (up-reset-unit c: -1)
    (up-retreat-now)
    (up-modify-goal next-retarget g:= game-time-goal)
    (up-modify-goal next-retarget c:+ retarget-interval)
    (up-chat-data-to-self "Retaliating against player %d" g: threat-player)
)
(defrule
    (nand
      (unit-type-count transport-ship > 0)
      (and
        (not
          (goal enemy-players-count 0)
        )
        (goal attack-ready 1)
      )
    )
=>
    (up-jump-rule 5)
)
(defrule
    (strategic-number sn-maximum-town-size > 30)
=>
    (up-modify-sn sn-maximum-town-size s:= sn-minimum-town-size)
)
(defrule
    (goal attacking 1)
=>
    (enable-timer 7 60)
    (disable-self)
)
(defrule
    (timer-triggered 7)
    (goal attacking 1)
=>
    (attack-now)
    (disable-timer 7)
    (enable-timer 7 60)
)
(defrule
    (goal attacking 1)
=>
    (set-goal did-reset 0)
)
(defrule
    (goal did-reset 0)
    (not
      (goal attacking 1)
    )
=>
    (up-reset-unit c: -1)
    (set-goal did-reset 1)
)
(defrule
    (nand
      (not
        (unit-type-count transport-ship > 0)
      )
      (and
        (not
          (goal enemy-players-count 0)
        )
        (goal attack-ready 1)
      )
    )
=>
    (up-jump-rule 3)
)
(defrule
    (strategic-number sn-maximum-town-size > 30)
=>
    (up-modify-sn sn-maximum-town-size s:= sn-minimum-town-size)
)
(defrule
    (goal attacking 1)
=>
    (set-strategic-number sn-number-attack-groups 200)
    (set-strategic-number sn-number-boat-attack-groups 200)
)
(defrule
    (strategic-number sn-number-attack-groups == 200)
    (not
      (goal attacking 1)
    )
=>
    (set-strategic-number sn-number-attack-groups 0)
    (set-strategic-number sn-number-boat-attack-groups 0)
    (up-reset-unit c: -1)
)
(defrule
    (not
      (goal attack-ready 1)
    )
=>
    (set-goal do-research 1)
    (set-goal produce-units 0)
)
(defrule
    (nand
      (goal resign 0)
      (and
        (goal locked-teams 0)
        (or
          (goal team-game 1)
          (goal free-for-all 1)
        )
      )
    )
=>
    (up-jump-rule 426)
)
(defrule
    (true)
=>
    (set-goal want-alliance 0)
    (set-goal accept-alliance-requests 1)
    (set-goal player-1-is-bad-egg 0)
    (set-goal player-1-bad-egg-expires-at -1)
    (set-goal player-1-alliance-request-time-stamp 0)
    (set-goal allied-with-1 0)
    (set-goal tried-alliance-with-1 0)
    (set-goal player-2-is-bad-egg 0)
    (set-goal player-2-bad-egg-expires-at -1)
    (set-goal player-2-alliance-request-time-stamp 0)
    (set-goal allied-with-2 0)
    (set-goal tried-alliance-with-2 0)
    (set-goal player-3-is-bad-egg 0)
    (set-goal player-3-bad-egg-expires-at -1)
    (set-goal player-3-alliance-request-time-stamp 0)
    (set-goal allied-with-3 0)
    (set-goal tried-alliance-with-3 0)
    (set-goal player-4-is-bad-egg 0)
    (set-goal player-4-bad-egg-expires-at -1)
    (set-goal player-4-alliance-request-time-stamp 0)
    (set-goal allied-with-4 0)
    (set-goal tried-alliance-with-4 0)
    (set-goal player-5-is-bad-egg 0)
    (set-goal player-5-bad-egg-expires-at -1)
    (set-goal player-5-alliance-request-time-stamp 0)
    (set-goal allied-with-5 0)
    (set-goal tried-alliance-with-5 0)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal player-6-is-bad-egg 0)
    (set-goal player-6-bad-egg-expires-at -1)
    (set-goal player-6-alliance-request-time-stamp 0)
    (set-goal allied-with-6 0)
    (set-goal tried-alliance-with-6 0)
    (set-goal player-7-is-bad-egg 0)
    (set-goal player-7-bad-egg-expires-at -1)
    (set-goal player-7-alliance-request-time-stamp 0)
    (set-goal allied-with-7 0)
    (set-goal tried-alliance-with-7 0)
    (set-goal player-8-is-bad-egg 0)
    (set-goal player-8-bad-egg-expires-at -1)
    (set-goal player-8-alliance-request-time-stamp 0)
    (set-goal allied-with-8 0)
    (set-goal tried-alliance-with-8 0)
    (set-stance every-enemy neutral)
    (set-goal no-enemies-stamp 0)
    (set-goal chat-betray-player -1)
    (set-goal chat-betrayed-by-player -1)
    (set-goal 289 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 289)
    (disable-self)
)
(defrule
    (not
      (goal 289 1)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (true)
=>
    (chat-local-to-self chat-0b1c1a18f0b679b01cfd555be430b584551a7df2)
    (set-goal team-game 0)
    (set-goal free-for-all 1)
    (disable-self)
)
(defrule
    (up-compare-goal neutral-or-enemy-players-count c:> 0)
    (military-population < 30)
=>
    (set-goal want-alliance 1)
    (set-goal accept-alliance-requests 1)
)
(defrule
    (up-compare-goal neutral-or-enemy-players-count c:>= 2)
    (not
      (military-population < 30)
    )
=>
    (set-goal want-alliance 1)
    (set-goal accept-alliance-requests 1)
)
(defrule
    (goal neutral-or-enemy-players-count 0)
    (not
      (up-compare-goal neutral-or-enemy-players-count c:>= 2)
    )
    (not
      (military-population < 30)
    )
=>
    (set-goal want-alliance -1)
    (set-goal accept-alliance-requests 0)
)
(defrule
    (not
      (up-compare-goal neutral-or-enemy-players-count c:>= 2)
    )
    (not
      (goal neutral-or-enemy-players-count 0)
    )
    (not
      (military-population < 30)
    )
=>
    (set-goal want-alliance 0)
    (set-goal accept-alliance-requests 0)
)
(defrule
    (not
      (goal 289 2)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (true)
=>
    (chat-local-to-self chat-0ed19ef74edde4e6a25b364e1e76b0dd12585260)
    (set-goal team-game 1)
    (set-goal free-for-all 0)
    (disable-self)
)
(defrule
    (up-compare-goal ally-players-count c:== 0)
=>
    (set-goal accept-alliance-requests 1)
    (set-goal want-alliance 1)
)
(defrule
    (up-compare-goal neutral-or-enemy-players-count c:> 2)
    (not
      (up-compare-goal ally-players-count c:== 0)
    )
=>
    (set-goal accept-alliance-requests 1)
    (set-goal want-alliance 0)
)
(defrule
    (goal neutral-or-enemy-players-count 0)
    (up-compare-goal ally-players-count c:>= 2)
    (military-population >= 30)
    (not
      (up-compare-goal ally-players-count c:== 0)
    )
    (not
      (up-compare-goal neutral-or-enemy-players-count c:> 2)
    )
=>
    (set-goal accept-alliance-requests 0)
    (set-goal want-alliance -1)
)
(defrule
    (not
      (up-compare-goal neutral-or-enemy-players-count c:> 2)
    )
    (not
      (up-compare-goal ally-players-count c:== 0)
    )
    (nand
      (goal neutral-or-enemy-players-count 0)
      (and
        (up-compare-goal ally-players-count c:>= 2)
        (military-population >= 30)
      )
    )
=>
    (set-goal accept-alliance-requests 0)
    (set-goal want-alliance 0)
)
(defrule
    (not
      (goal 289 3)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (chat-local-to-self chat-05e870225114ac83ef4fa050a98af6016fa4c572)
    (set-goal team-game 0)
    (set-goal free-for-all 1)
    (disable-self)
)
(defrule
    (up-compare-goal neutral-or-enemy-players-count c:<= 1)
=>
    (set-goal accept-alliance-requests 0)
    (set-goal want-alliance 0)
)
(defrule
    (goal neutral-or-enemy-players-count 0)
    (military-population >= 30)
    (not
      (up-compare-goal neutral-or-enemy-players-count c:<= 1)
    )
=>
    (set-goal accept-alliance-requests 0)
    (set-goal want-alliance -1)
)
(defrule
    (not
      (up-compare-goal neutral-or-enemy-players-count c:<= 1)
    )
    (nand
      (goal neutral-or-enemy-players-count 0)
      (military-population >= 30)
    )
=>
    (set-goal accept-alliance-requests 1)
    (set-goal want-alliance 0)
)
(defrule
    (or
      (not
        (and
          (goal enemy-players-count 0)
          (goal neutral-players-count 0)
        )
      )
      (up-compare-goal population-space-remaining c:> 5)
    )
=>
    (up-modify-goal no-enemies-stamp g:= game-time-goal)
)
(defrule
    (true)
=>
    (up-modify-goal temp g:= game-time-goal)
    (up-modify-goal temp g:- no-enemies-stamp)
)
(defrule
    (nand
      (up-compare-goal temp c:>= allied-victory-timeout)
      (game-time >= 2400)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 290 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 290)
    (disable-self)
)
(defrule
    (goal 290 1)
=>
    (chat-to-all chat-a8d554bee6bdf89cc899a01fc2b99b59b54f26f8)
    (disable-self)
)
(defrule
    (goal 290 2)
=>
    (chat-to-all chat-51fed912c4cfaf31ff9c4a58c80de9135728d8f8)
    (disable-self)
)
(defrule
    (goal 290 3)
=>
    (chat-to-all chat-855ec5486bd3e68f0d5c64a497528881e346d20a)
    (disable-self)
)
(defrule
    (up-compare-goal temp c:>= allied-victory-timeout)
    (game-time >= 2400)
=>
    (set-goal player-1-is-bad-egg 1)
    (set-goal player-2-is-bad-egg 1)
    (set-goal player-3-is-bad-egg 1)
    (set-goal player-4-is-bad-egg 1)
    (set-goal player-5-is-bad-egg 1)
    (set-goal player-6-is-bad-egg 1)
    (set-goal player-7-is-bad-egg 1)
    (set-goal player-8-is-bad-egg 1)
    (set-goal team-game 0)
    (set-goal free-for-all 1)
    (set-goal locked-teams 1)
    (set-stance every-ally enemy)
    (disable-self)
)
(defrule
    (goal want-alliance 1)
=>
    (set-goal 291 0)
    (generate-random-number 8)
    (up-get-fact random-number 0 291)
)
(defrule
    (nand
      (goal 291 1)
      (goal want-alliance 1)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (nand
      (player-in-game 1)
      (and
        (goal player-1-is-bad-egg 0)
        (and
          (not
            (stance-toward 1 ally)
          )
          (goal tried-alliance-with-1 0)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 292 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 292)
)
(defrule
    (goal 292 1)
=>
    (chat-to-player 1 chat-ae0f0f92d6a271b3a396721f9adafc0b3398bda6)
)
(defrule
    (goal 292 2)
=>
    (chat-to-player 1 chat-21f870721f49c52175e60a05dffe0ccc60187af1)
)
(defrule
    (goal 292 3)
=>
    (chat-to-player 1 chat-215e1a2442ffb7fc9dbb2e86ae46e08209378593)
)
(defrule
    (player-in-game 1)
    (goal player-1-is-bad-egg 0)
    (not
      (stance-toward 1 ally)
    )
    (goal tried-alliance-with-1 0)
=>
    (chat-local-to-self chat-95cbd354811d09c43e5aa5da7c1197f4ebf546d9)
    (set-stance 1 ally)
    (up-modify-goal player-1-alliance-request-time-stamp g:= game-time-goal)
)
(defrule
    (nand
      (goal 291 2)
      (goal want-alliance 1)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (nand
      (player-in-game 2)
      (and
        (goal player-2-is-bad-egg 0)
        (and
          (not
            (stance-toward 2 ally)
          )
          (goal tried-alliance-with-2 0)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 293 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 293)
)
(defrule
    (goal 293 1)
=>
    (chat-to-player 2 chat-ae0f0f92d6a271b3a396721f9adafc0b3398bda6)
)
(defrule
    (goal 293 2)
=>
    (chat-to-player 2 chat-21f870721f49c52175e60a05dffe0ccc60187af1)
)
(defrule
    (goal 293 3)
=>
    (chat-to-player 2 chat-215e1a2442ffb7fc9dbb2e86ae46e08209378593)
)
(defrule
    (player-in-game 2)
    (goal player-2-is-bad-egg 0)
    (not
      (stance-toward 2 ally)
    )
    (goal tried-alliance-with-2 0)
=>
    (chat-local-to-self chat-7f6b22d6159d7a0a4c1071f8fd6d6b0f8370520f)
    (set-stance 2 ally)
    (up-modify-goal player-2-alliance-request-time-stamp g:= game-time-goal)
)
(defrule
    (nand
      (goal 291 3)
      (goal want-alliance 1)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (nand
      (player-in-game 3)
      (and
        (goal player-3-is-bad-egg 0)
        (and
          (not
            (stance-toward 3 ally)
          )
          (goal tried-alliance-with-3 0)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 294 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 294)
)
(defrule
    (goal 294 1)
=>
    (chat-to-player 3 chat-ae0f0f92d6a271b3a396721f9adafc0b3398bda6)
)
(defrule
    (goal 294 2)
=>
    (chat-to-player 3 chat-21f870721f49c52175e60a05dffe0ccc60187af1)
)
(defrule
    (goal 294 3)
=>
    (chat-to-player 3 chat-215e1a2442ffb7fc9dbb2e86ae46e08209378593)
)
(defrule
    (player-in-game 3)
    (goal player-3-is-bad-egg 0)
    (not
      (stance-toward 3 ally)
    )
    (goal tried-alliance-with-3 0)
=>
    (chat-local-to-self chat-3d39714454a854157bbdab21123bebef664f0e04)
    (set-stance 3 ally)
    (up-modify-goal player-3-alliance-request-time-stamp g:= game-time-goal)
)
(defrule
    (nand
      (goal 291 4)
      (goal want-alliance 1)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (nand
      (player-in-game 4)
      (and
        (goal player-4-is-bad-egg 0)
        (and
          (not
            (stance-toward 4 ally)
          )
          (goal tried-alliance-with-4 0)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 295 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 295)
)
(defrule
    (goal 295 1)
=>
    (chat-to-player 4 chat-ae0f0f92d6a271b3a396721f9adafc0b3398bda6)
)
(defrule
    (goal 295 2)
=>
    (chat-to-player 4 chat-21f870721f49c52175e60a05dffe0ccc60187af1)
)
(defrule
    (goal 295 3)
=>
    (chat-to-player 4 chat-215e1a2442ffb7fc9dbb2e86ae46e08209378593)
)
(defrule
    (player-in-game 4)
    (goal player-4-is-bad-egg 0)
    (not
      (stance-toward 4 ally)
    )
    (goal tried-alliance-with-4 0)
=>
    (chat-local-to-self chat-50cf04c191209fa0f58e77cde822a9fa6bae413c)
    (set-stance 4 ally)
    (up-modify-goal player-4-alliance-request-time-stamp g:= game-time-goal)
)
(defrule
    (nand
      (goal 291 5)
      (goal want-alliance 1)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (nand
      (player-in-game 5)
      (and
        (goal player-5-is-bad-egg 0)
        (and
          (not
            (stance-toward 5 ally)
          )
          (goal tried-alliance-with-5 0)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 296 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 296)
)
(defrule
    (goal 296 1)
=>
    (chat-to-player 5 chat-ae0f0f92d6a271b3a396721f9adafc0b3398bda6)
)
(defrule
    (goal 296 2)
=>
    (chat-to-player 5 chat-21f870721f49c52175e60a05dffe0ccc60187af1)
)
(defrule
    (goal 296 3)
=>
    (chat-to-player 5 chat-215e1a2442ffb7fc9dbb2e86ae46e08209378593)
)
(defrule
    (player-in-game 5)
    (goal player-5-is-bad-egg 0)
    (not
      (stance-toward 5 ally)
    )
    (goal tried-alliance-with-5 0)
=>
    (chat-local-to-self chat-93661ec66e7c4deca69f3e4b5f60ca098147cdb5)
    (set-stance 5 ally)
    (up-modify-goal player-5-alliance-request-time-stamp g:= game-time-goal)
)
(defrule
    (nand
      (goal 291 6)
      (goal want-alliance 1)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (nand
      (player-in-game 6)
      (and
        (goal player-6-is-bad-egg 0)
        (and
          (not
            (stance-toward 6 ally)
          )
          (goal tried-alliance-with-6 0)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 297 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 297)
)
(defrule
    (goal 297 1)
=>
    (chat-to-player 6 chat-ae0f0f92d6a271b3a396721f9adafc0b3398bda6)
)
(defrule
    (goal 297 2)
=>
    (chat-to-player 6 chat-21f870721f49c52175e60a05dffe0ccc60187af1)
)
(defrule
    (goal 297 3)
=>
    (chat-to-player 6 chat-215e1a2442ffb7fc9dbb2e86ae46e08209378593)
)
(defrule
    (player-in-game 6)
    (goal player-6-is-bad-egg 0)
    (not
      (stance-toward 6 ally)
    )
    (goal tried-alliance-with-6 0)
=>
    (chat-local-to-self chat-353fab865644592490d81cb7a6ae038b34714ddf)
    (set-stance 6 ally)
    (up-modify-goal player-6-alliance-request-time-stamp g:= game-time-goal)
)
(defrule
    (nand
      (goal 291 7)
      (goal want-alliance 1)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (nand
      (player-in-game 7)
      (and
        (goal player-7-is-bad-egg 0)
        (and
          (not
            (stance-toward 7 ally)
          )
          (goal tried-alliance-with-7 0)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 298 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 298)
)
(defrule
    (goal 298 1)
=>
    (chat-to-player 7 chat-ae0f0f92d6a271b3a396721f9adafc0b3398bda6)
)
(defrule
    (goal 298 2)
=>
    (chat-to-player 7 chat-21f870721f49c52175e60a05dffe0ccc60187af1)
)
(defrule
    (goal 298 3)
=>
    (chat-to-player 7 chat-215e1a2442ffb7fc9dbb2e86ae46e08209378593)
)
(defrule
    (player-in-game 7)
    (goal player-7-is-bad-egg 0)
    (not
      (stance-toward 7 ally)
    )
    (goal tried-alliance-with-7 0)
=>
    (chat-local-to-self chat-755ccccd63e8921c5dbcbc9ee32fb74e5cdef1be)
    (set-stance 7 ally)
    (up-modify-goal player-7-alliance-request-time-stamp g:= game-time-goal)
)
(defrule
    (nand
      (goal 291 8)
      (goal want-alliance 1)
    )
=>
    (up-jump-rule 6)
)
(defrule
    (nand
      (player-in-game 8)
      (and
        (goal player-8-is-bad-egg 0)
        (and
          (not
            (stance-toward 8 ally)
          )
          (goal tried-alliance-with-8 0)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 299 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 299)
)
(defrule
    (goal 299 1)
=>
    (chat-to-player 8 chat-ae0f0f92d6a271b3a396721f9adafc0b3398bda6)
)
(defrule
    (goal 299 2)
=>
    (chat-to-player 8 chat-21f870721f49c52175e60a05dffe0ccc60187af1)
)
(defrule
    (goal 299 3)
=>
    (chat-to-player 8 chat-215e1a2442ffb7fc9dbb2e86ae46e08209378593)
)
(defrule
    (player-in-game 8)
    (goal player-8-is-bad-egg 0)
    (not
      (stance-toward 8 ally)
    )
    (goal tried-alliance-with-8 0)
=>
    (chat-local-to-self chat-26025f32da3a0314a95d9151ef900223c3fbd814)
    (set-stance 8 ally)
    (up-modify-goal player-8-alliance-request-time-stamp g:= game-time-goal)
)
(defrule
    (goal enemy-players-count 0)
    (goal want-alliance 0)
=>
    (set-goal 300 0)
    (generate-random-number 8)
    (up-get-fact random-number 0 300)
)
(defrule
    (nand
      (goal 300 1)
      (and
        (goal enemy-players-count 0)
        (goal want-alliance 0)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (player-in-game 1)
    (stance-toward 1 neutral)
=>
    (chat-local-to-self chat-4ec0f4607a8df0a976c0ec084a71cec372eac904)
    (set-stance 1 enemy)
)
(defrule
    (nand
      (goal 300 2)
      (and
        (goal enemy-players-count 0)
        (goal want-alliance 0)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (player-in-game 2)
    (stance-toward 2 neutral)
=>
    (chat-local-to-self chat-8eeed920dbe367e9912ca6974cc93ae6c8145c48)
    (set-stance 2 enemy)
)
(defrule
    (nand
      (goal 300 3)
      (and
        (goal enemy-players-count 0)
        (goal want-alliance 0)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (player-in-game 3)
    (stance-toward 3 neutral)
=>
    (chat-local-to-self chat-0a984a85a19f6f52ad3f72e5780f2db18b2f4728)
    (set-stance 3 enemy)
)
(defrule
    (nand
      (goal 300 4)
      (and
        (goal enemy-players-count 0)
        (goal want-alliance 0)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (player-in-game 4)
    (stance-toward 4 neutral)
=>
    (chat-local-to-self chat-a5ce7b19a86442374b546816584bd68615ae4950)
    (set-stance 4 enemy)
)
(defrule
    (nand
      (goal 300 5)
      (and
        (goal enemy-players-count 0)
        (goal want-alliance 0)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (player-in-game 5)
    (stance-toward 5 neutral)
=>
    (chat-local-to-self chat-af9c8ef690306aab8e0c9f40f9ec80307a6fb13e)
    (set-stance 5 enemy)
)
(defrule
    (nand
      (goal 300 6)
      (and
        (goal enemy-players-count 0)
        (goal want-alliance 0)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (player-in-game 6)
    (stance-toward 6 neutral)
=>
    (chat-local-to-self chat-32084f20d0ded4850e4969abba00fa19b12e208f)
    (set-stance 6 enemy)
)
(defrule
    (nand
      (goal 300 7)
      (and
        (goal enemy-players-count 0)
        (goal want-alliance 0)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (player-in-game 7)
    (stance-toward 7 neutral)
=>
    (chat-local-to-self chat-566aa7f01644ad99857a038cc0d073814a473205)
    (set-stance 7 enemy)
)
(defrule
    (nand
      (goal 300 8)
      (and
        (goal enemy-players-count 0)
        (goal want-alliance 0)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (player-in-game 8)
    (stance-toward 8 neutral)
=>
    (chat-local-to-self chat-54d3097efdeb918de212c08f5fbd8a0d4569560c)
    (set-stance 8 enemy)
)
(defrule
    (goal want-alliance -1)
=>
    (set-goal 301 0)
    (generate-random-number 8)
    (up-get-fact random-number 0 301)
)
(defrule
    (nand
      (goal 301 1)
      (goal want-alliance -1)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (player-in-game 1)
    (goal allied-with-1 1)
=>
    (set-goal chat-betray-player 1)
    (set-stance 1 enemy)
)
(defrule
    (nand
      (player-in-game 1)
      (goal allied-with-1 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-1-is-bad-egg 1)
    (up-modify-goal player-1-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-1-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (player-in-game 1)
    (goal allied-with-1 1)
=>
    (set-goal allied-with-1 0)
)
(defrule
    (nand
      (goal 301 2)
      (goal want-alliance -1)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (player-in-game 2)
    (goal allied-with-2 1)
=>
    (set-goal chat-betray-player 2)
    (set-stance 2 enemy)
)
(defrule
    (nand
      (player-in-game 2)
      (goal allied-with-2 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-2-is-bad-egg 1)
    (up-modify-goal player-2-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-2-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (player-in-game 2)
    (goal allied-with-2 1)
=>
    (set-goal allied-with-2 0)
)
(defrule
    (nand
      (goal 301 3)
      (goal want-alliance -1)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (player-in-game 3)
    (goal allied-with-3 1)
=>
    (set-goal chat-betray-player 3)
    (set-stance 3 enemy)
)
(defrule
    (nand
      (player-in-game 3)
      (goal allied-with-3 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-3-is-bad-egg 1)
    (up-modify-goal player-3-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-3-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (player-in-game 3)
    (goal allied-with-3 1)
=>
    (set-goal allied-with-3 0)
)
(defrule
    (nand
      (goal 301 4)
      (goal want-alliance -1)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (player-in-game 4)
    (goal allied-with-4 1)
=>
    (set-goal chat-betray-player 4)
    (set-stance 4 enemy)
)
(defrule
    (nand
      (player-in-game 4)
      (goal allied-with-4 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-4-is-bad-egg 1)
    (up-modify-goal player-4-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-4-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (player-in-game 4)
    (goal allied-with-4 1)
=>
    (set-goal allied-with-4 0)
)
(defrule
    (nand
      (goal 301 5)
      (goal want-alliance -1)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (player-in-game 5)
    (goal allied-with-5 1)
=>
    (set-goal chat-betray-player 5)
    (set-stance 5 enemy)
)
(defrule
    (nand
      (player-in-game 5)
      (goal allied-with-5 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-5-is-bad-egg 1)
    (up-modify-goal player-5-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-5-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (player-in-game 5)
    (goal allied-with-5 1)
=>
    (set-goal allied-with-5 0)
)
(defrule
    (nand
      (goal 301 6)
      (goal want-alliance -1)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (player-in-game 6)
    (goal allied-with-6 1)
=>
    (set-goal chat-betray-player 6)
    (set-stance 6 enemy)
)
(defrule
    (nand
      (player-in-game 6)
      (goal allied-with-6 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-6-is-bad-egg 1)
    (up-modify-goal player-6-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-6-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (player-in-game 6)
    (goal allied-with-6 1)
=>
    (set-goal allied-with-6 0)
)
(defrule
    (nand
      (goal 301 7)
      (goal want-alliance -1)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (player-in-game 7)
    (goal allied-with-7 1)
=>
    (set-goal chat-betray-player 7)
    (set-stance 7 enemy)
)
(defrule
    (nand
      (player-in-game 7)
      (goal allied-with-7 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-7-is-bad-egg 1)
    (up-modify-goal player-7-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-7-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (player-in-game 7)
    (goal allied-with-7 1)
=>
    (set-goal allied-with-7 0)
)
(defrule
    (nand
      (goal 301 8)
      (goal want-alliance -1)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (player-in-game 8)
    (goal allied-with-8 1)
=>
    (set-goal chat-betray-player 8)
    (set-stance 8 enemy)
)
(defrule
    (nand
      (player-in-game 8)
      (goal allied-with-8 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-8-is-bad-egg 1)
    (up-modify-goal player-8-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-8-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (player-in-game 8)
    (goal allied-with-8 1)
=>
    (set-goal allied-with-8 0)
)
(defrule
    (up-compare-goal game-time-goal g:>= player-1-bad-egg-expires-at)
    (goal player-1-is-bad-egg 1)
    (not
      (goal player-1-bad-egg-expires-at -1)
    )
    (player-in-game 1)
=>
    (set-goal player-1-is-bad-egg 0)
    (set-goal player-1-bad-egg-expires-at -1)
    (chat-local-to-self chat-625aa2158a8e10e2f23af1b781c6c5688fed55e8)
)
(defrule
    (nand
      (goal accept-alliance-requests 1)
      (and
        (or
          (stance-toward 1 enemy)
          (stance-toward 1 neutral)
        )
        (and
          (players-stance 1 ally)
          (and
            (and
              (goal player-1-is-bad-egg 0)
              (goal allied-with-1 0)
            )
            (player-in-game 1)
          )
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 302 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 302)
)
(defrule
    (goal 302 1)
=>
    (chat-to-player 1 chat-a0936c429351330a24a75a7382b6594ea631f840)
)
(defrule
    (goal 302 2)
=>
    (chat-to-player 1 chat-6e4b5a5d9cd840be6824f7209855519c9bf8a732)
)
(defrule
    (goal 302 3)
=>
    (chat-to-player 1 chat-ae022016e19b11fd2b8bb5494d85a16624caea4f)
)
(defrule
    (goal accept-alliance-requests 1)
    (or
      (stance-toward 1 enemy)
      (stance-toward 1 neutral)
    )
    (players-stance 1 ally)
    (goal player-1-is-bad-egg 0)
    (goal allied-with-1 0)
    (player-in-game 1)
=>
    (chat-local-to-self chat-0b496bb36546bfec15f2a89936c356726ea0c985)
    (set-stance 1 ally)
    (set-goal allied-with-1 1)
)
(defrule
    (nand
      (and
        (not
          (stance-toward 1 enemy)
        )
        (not
          (stance-toward 1 neutral)
        )
      )
      (and
        (players-stance 1 ally)
        (and
          (and
            (goal player-1-is-bad-egg 0)
            (goal allied-with-1 0)
          )
          (player-in-game 1)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 303 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 303)
)
(defrule
    (goal 303 1)
=>
    (chat-to-player 1 chat-87b47d886a3bcf4fecf764721e89a5c3f00f218b)
)
(defrule
    (goal 303 2)
=>
    (chat-to-player 1 chat-73443f250f6062de5d7ac5c26f0641c3e391f34d)
)
(defrule
    (goal 303 3)
=>
    (chat-to-player 1 chat-456f0f3ef0322a669d04b16584960dfa36421054)
)
(defrule
    (not
      (stance-toward 1 enemy)
    )
    (not
      (stance-toward 1 neutral)
    )
    (players-stance 1 ally)
    (goal player-1-is-bad-egg 0)
    (goal allied-with-1 0)
    (player-in-game 1)
=>
    (chat-local-to-self chat-c4af4a60de342317bf64acdd14e7654b066abf95)
    (set-goal allied-with-1 1)
)
(defrule
    (goal allied-with-1 1)
    (not
      (players-stance 1 ally)
    )
    (player-in-game 1)
=>
    (set-goal chat-betrayed-by-player 1)
)
(defrule
    (nand
      (and
        (goal allied-with-1 1)
        (not
          (players-stance 1 ally)
        )
      )
      (player-in-game 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-1-is-bad-egg 1)
    (up-modify-goal player-1-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-1-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal allied-with-1 1)
    (not
      (players-stance 1 ally)
    )
    (player-in-game 1)
=>
    (set-goal allied-with-1 0)
    (set-stance 1 enemy)
)
(defrule
    (goal threat-player 1)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 1 enemy)
    )
    (player-in-game 1)
=>
    (chat-local-to-self chat-7e6a680c96f5ebc7c72001bf5a70a615cc4daa7e)
)
(defrule
    (goal allied-with-1 1)
    (goal threat-player 1)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 1 enemy)
    )
    (player-in-game 1)
=>
    (set-goal chat-betrayed-by-player 1)
    (set-goal allied-with-1 0)
)
(defrule
    (nand
      (goal allied-with-1 1)
      (and
        (and
          (goal threat-player 1)
          (and
            (up-compare-goal threat-time c:< 1000)
            (not
              (stance-toward 1 enemy)
            )
          )
        )
        (player-in-game 1)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-1-is-bad-egg 1)
    (up-modify-goal player-1-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-1-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (nand
      (stance-toward 1 ally)
      (and
        (not
          (goal allied-with-1 1)
        )
        (and
          (and
            (goal threat-player 1)
            (and
              (up-compare-goal threat-time c:< 1000)
              (not
                (stance-toward 1 enemy)
              )
            )
          )
          (player-in-game 1)
        )
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-1-is-bad-egg 1)
    (up-modify-goal player-1-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-1-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal threat-player 1)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 1 enemy)
    )
    (player-in-game 1)
=>
    (set-stance 1 enemy)
)
(defrule
    (goal allied-with-1 0)
    (stance-toward 1 ally)
    (goal player-1-is-bad-egg 0)
    (goal tried-alliance-with-1 0)
    (player-in-game 1)
=>
    (up-modify-goal temp g:= game-time-goal)
    (up-modify-goal temp g:- player-1-alliance-request-time-stamp)
)
(defrule
    (nand
      (up-compare-goal temp c:>= alliance-request-timeout)
      (and
        (and
          (goal allied-with-1 0)
          (and
            (stance-toward 1 ally)
            (and
              (goal player-1-is-bad-egg 0)
              (goal tried-alliance-with-1 0)
            )
          )
        )
        (player-in-game 1)
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 304 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 304)
)
(defrule
    (goal 304 1)
=>
    (chat-to-player 1 chat-c139b871360335954087bfe0e7808ac0062bea98)
)
(defrule
    (goal 304 2)
=>
    (chat-to-player 1 chat-705519f70cb48c4e7326f64dfe1bb719a92d85fa)
)
(defrule
    (goal 304 3)
=>
    (chat-to-player 1 chat-c11ce23a13444a91229eb0dad991c757ca58c03f)
)
(defrule
    (up-compare-goal temp c:>= alliance-request-timeout)
    (goal allied-with-1 0)
    (stance-toward 1 ally)
    (goal player-1-is-bad-egg 0)
    (goal tried-alliance-with-1 0)
    (player-in-game 1)
=>
    (chat-local-to-self chat-5f9454d0a28cba01a380875cdd8330bda2cdd9e8)
    (set-stance 1 neutral)
    (set-goal tried-alliance-with-1 1)
)
(defrule
    (players-stance 1 ally)
    (not
      (stance-toward 1 ally)
    )
    (not
      (player-in-game 1)
    )
=>
    (set-stance 1 ally)
)
(defrule
    (up-compare-goal game-time-goal g:>= player-2-bad-egg-expires-at)
    (goal player-2-is-bad-egg 1)
    (not
      (goal player-2-bad-egg-expires-at -1)
    )
    (player-in-game 2)
=>
    (set-goal player-2-is-bad-egg 0)
    (set-goal player-2-bad-egg-expires-at -1)
    (chat-local-to-self chat-cae7444347e8f1878ab694150cf0a449e1b19fbb)
)
(defrule
    (nand
      (goal accept-alliance-requests 1)
      (and
        (or
          (stance-toward 2 enemy)
          (stance-toward 2 neutral)
        )
        (and
          (players-stance 2 ally)
          (and
            (and
              (goal player-2-is-bad-egg 0)
              (goal allied-with-2 0)
            )
            (player-in-game 2)
          )
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 305 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 305)
)
(defrule
    (goal 305 1)
=>
    (chat-to-player 2 chat-a0936c429351330a24a75a7382b6594ea631f840)
)
(defrule
    (goal 305 2)
=>
    (chat-to-player 2 chat-6e4b5a5d9cd840be6824f7209855519c9bf8a732)
)
(defrule
    (goal 305 3)
=>
    (chat-to-player 2 chat-ae022016e19b11fd2b8bb5494d85a16624caea4f)
)
(defrule
    (goal accept-alliance-requests 1)
    (or
      (stance-toward 2 enemy)
      (stance-toward 2 neutral)
    )
    (players-stance 2 ally)
    (goal player-2-is-bad-egg 0)
    (goal allied-with-2 0)
    (player-in-game 2)
=>
    (chat-local-to-self chat-4d94c32dded366a0ead5a964f450f4dbe7115836)
    (set-stance 2 ally)
    (set-goal allied-with-2 1)
)
(defrule
    (nand
      (and
        (not
          (stance-toward 2 enemy)
        )
        (not
          (stance-toward 2 neutral)
        )
      )
      (and
        (players-stance 2 ally)
        (and
          (and
            (goal player-2-is-bad-egg 0)
            (goal allied-with-2 0)
          )
          (player-in-game 2)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 306 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 306)
)
(defrule
    (goal 306 1)
=>
    (chat-to-player 2 chat-87b47d886a3bcf4fecf764721e89a5c3f00f218b)
)
(defrule
    (goal 306 2)
=>
    (chat-to-player 2 chat-73443f250f6062de5d7ac5c26f0641c3e391f34d)
)
(defrule
    (goal 306 3)
=>
    (chat-to-player 2 chat-456f0f3ef0322a669d04b16584960dfa36421054)
)
(defrule
    (not
      (stance-toward 2 enemy)
    )
    (not
      (stance-toward 2 neutral)
    )
    (players-stance 2 ally)
    (goal player-2-is-bad-egg 0)
    (goal allied-with-2 0)
    (player-in-game 2)
=>
    (chat-local-to-self chat-a57c75786a340d4b260054050994d55241080470)
    (set-goal allied-with-2 1)
)
(defrule
    (goal allied-with-2 1)
    (not
      (players-stance 2 ally)
    )
    (player-in-game 2)
=>
    (set-goal chat-betrayed-by-player 2)
)
(defrule
    (nand
      (and
        (goal allied-with-2 1)
        (not
          (players-stance 2 ally)
        )
      )
      (player-in-game 2)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-2-is-bad-egg 1)
    (up-modify-goal player-2-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-2-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal allied-with-2 1)
    (not
      (players-stance 2 ally)
    )
    (player-in-game 2)
=>
    (set-goal allied-with-2 0)
    (set-stance 2 enemy)
)
(defrule
    (goal threat-player 2)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 2 enemy)
    )
    (player-in-game 2)
=>
    (chat-local-to-self chat-fd31965fd7bd8017f4bc4ce2e429ae212acef5dc)
)
(defrule
    (goal allied-with-2 1)
    (goal threat-player 2)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 2 enemy)
    )
    (player-in-game 2)
=>
    (set-goal chat-betrayed-by-player 2)
    (set-goal allied-with-2 0)
)
(defrule
    (nand
      (goal allied-with-2 1)
      (and
        (and
          (goal threat-player 2)
          (and
            (up-compare-goal threat-time c:< 1000)
            (not
              (stance-toward 2 enemy)
            )
          )
        )
        (player-in-game 2)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-2-is-bad-egg 1)
    (up-modify-goal player-2-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-2-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (nand
      (stance-toward 2 ally)
      (and
        (not
          (goal allied-with-2 1)
        )
        (and
          (and
            (goal threat-player 2)
            (and
              (up-compare-goal threat-time c:< 1000)
              (not
                (stance-toward 2 enemy)
              )
            )
          )
          (player-in-game 2)
        )
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-2-is-bad-egg 1)
    (up-modify-goal player-2-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-2-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal threat-player 2)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 2 enemy)
    )
    (player-in-game 2)
=>
    (set-stance 2 enemy)
)
(defrule
    (goal allied-with-2 0)
    (stance-toward 2 ally)
    (goal player-2-is-bad-egg 0)
    (goal tried-alliance-with-2 0)
    (player-in-game 2)
=>
    (up-modify-goal temp g:= game-time-goal)
    (up-modify-goal temp g:- player-2-alliance-request-time-stamp)
)
(defrule
    (nand
      (up-compare-goal temp c:>= alliance-request-timeout)
      (and
        (and
          (goal allied-with-2 0)
          (and
            (stance-toward 2 ally)
            (and
              (goal player-2-is-bad-egg 0)
              (goal tried-alliance-with-2 0)
            )
          )
        )
        (player-in-game 2)
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 307 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 307)
)
(defrule
    (goal 307 1)
=>
    (chat-to-player 2 chat-c139b871360335954087bfe0e7808ac0062bea98)
)
(defrule
    (goal 307 2)
=>
    (chat-to-player 2 chat-705519f70cb48c4e7326f64dfe1bb719a92d85fa)
)
(defrule
    (goal 307 3)
=>
    (chat-to-player 2 chat-c11ce23a13444a91229eb0dad991c757ca58c03f)
)
(defrule
    (up-compare-goal temp c:>= alliance-request-timeout)
    (goal allied-with-2 0)
    (stance-toward 2 ally)
    (goal player-2-is-bad-egg 0)
    (goal tried-alliance-with-2 0)
    (player-in-game 2)
=>
    (chat-local-to-self chat-0ae2f37c329f1f5e07ad495f3ee3dc7c463ad180)
    (set-stance 2 neutral)
    (set-goal tried-alliance-with-2 1)
)
(defrule
    (players-stance 2 ally)
    (not
      (stance-toward 2 ally)
    )
    (not
      (player-in-game 2)
    )
=>
    (set-stance 2 ally)
)
(defrule
    (up-compare-goal game-time-goal g:>= player-3-bad-egg-expires-at)
    (goal player-3-is-bad-egg 1)
    (not
      (goal player-3-bad-egg-expires-at -1)
    )
    (player-in-game 3)
=>
    (set-goal player-3-is-bad-egg 0)
    (set-goal player-3-bad-egg-expires-at -1)
    (chat-local-to-self chat-8594f65dab922519b58986ad1f5c4853490f706e)
)
(defrule
    (nand
      (goal accept-alliance-requests 1)
      (and
        (or
          (stance-toward 3 enemy)
          (stance-toward 3 neutral)
        )
        (and
          (players-stance 3 ally)
          (and
            (and
              (goal player-3-is-bad-egg 0)
              (goal allied-with-3 0)
            )
            (player-in-game 3)
          )
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 308 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 308)
)
(defrule
    (goal 308 1)
=>
    (chat-to-player 3 chat-a0936c429351330a24a75a7382b6594ea631f840)
)
(defrule
    (goal 308 2)
=>
    (chat-to-player 3 chat-6e4b5a5d9cd840be6824f7209855519c9bf8a732)
)
(defrule
    (goal 308 3)
=>
    (chat-to-player 3 chat-ae022016e19b11fd2b8bb5494d85a16624caea4f)
)
(defrule
    (goal accept-alliance-requests 1)
    (or
      (stance-toward 3 enemy)
      (stance-toward 3 neutral)
    )
    (players-stance 3 ally)
    (goal player-3-is-bad-egg 0)
    (goal allied-with-3 0)
    (player-in-game 3)
=>
    (chat-local-to-self chat-4da2fe72f310c312c3e753e125861365b995725c)
    (set-stance 3 ally)
    (set-goal allied-with-3 1)
)
(defrule
    (nand
      (and
        (not
          (stance-toward 3 enemy)
        )
        (not
          (stance-toward 3 neutral)
        )
      )
      (and
        (players-stance 3 ally)
        (and
          (and
            (goal player-3-is-bad-egg 0)
            (goal allied-with-3 0)
          )
          (player-in-game 3)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 309 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 309)
)
(defrule
    (goal 309 1)
=>
    (chat-to-player 3 chat-87b47d886a3bcf4fecf764721e89a5c3f00f218b)
)
(defrule
    (goal 309 2)
=>
    (chat-to-player 3 chat-73443f250f6062de5d7ac5c26f0641c3e391f34d)
)
(defrule
    (goal 309 3)
=>
    (chat-to-player 3 chat-456f0f3ef0322a669d04b16584960dfa36421054)
)
(defrule
    (not
      (stance-toward 3 enemy)
    )
    (not
      (stance-toward 3 neutral)
    )
    (players-stance 3 ally)
    (goal player-3-is-bad-egg 0)
    (goal allied-with-3 0)
    (player-in-game 3)
=>
    (chat-local-to-self chat-ee3a57429acd2b5c46c5efe0509ac7ba8df94c79)
    (set-goal allied-with-3 1)
)
(defrule
    (goal allied-with-3 1)
    (not
      (players-stance 3 ally)
    )
    (player-in-game 3)
=>
    (set-goal chat-betrayed-by-player 3)
)
(defrule
    (nand
      (and
        (goal allied-with-3 1)
        (not
          (players-stance 3 ally)
        )
      )
      (player-in-game 3)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-3-is-bad-egg 1)
    (up-modify-goal player-3-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-3-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal allied-with-3 1)
    (not
      (players-stance 3 ally)
    )
    (player-in-game 3)
=>
    (set-goal allied-with-3 0)
    (set-stance 3 enemy)
)
(defrule
    (goal threat-player 3)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 3 enemy)
    )
    (player-in-game 3)
=>
    (chat-local-to-self chat-1062b2c8150cadf4f44729f3bf5a41ddcda43f06)
)
(defrule
    (goal allied-with-3 1)
    (goal threat-player 3)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 3 enemy)
    )
    (player-in-game 3)
=>
    (set-goal chat-betrayed-by-player 3)
    (set-goal allied-with-3 0)
)
(defrule
    (nand
      (goal allied-with-3 1)
      (and
        (and
          (goal threat-player 3)
          (and
            (up-compare-goal threat-time c:< 1000)
            (not
              (stance-toward 3 enemy)
            )
          )
        )
        (player-in-game 3)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-3-is-bad-egg 1)
    (up-modify-goal player-3-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-3-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (nand
      (stance-toward 3 ally)
      (and
        (not
          (goal allied-with-3 1)
        )
        (and
          (and
            (goal threat-player 3)
            (and
              (up-compare-goal threat-time c:< 1000)
              (not
                (stance-toward 3 enemy)
              )
            )
          )
          (player-in-game 3)
        )
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-3-is-bad-egg 1)
    (up-modify-goal player-3-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-3-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal threat-player 3)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 3 enemy)
    )
    (player-in-game 3)
=>
    (set-stance 3 enemy)
)
(defrule
    (goal allied-with-3 0)
    (stance-toward 3 ally)
    (goal player-3-is-bad-egg 0)
    (goal tried-alliance-with-3 0)
    (player-in-game 3)
=>
    (up-modify-goal temp g:= game-time-goal)
    (up-modify-goal temp g:- player-3-alliance-request-time-stamp)
)
(defrule
    (nand
      (up-compare-goal temp c:>= alliance-request-timeout)
      (and
        (and
          (goal allied-with-3 0)
          (and
            (stance-toward 3 ally)
            (and
              (goal player-3-is-bad-egg 0)
              (goal tried-alliance-with-3 0)
            )
          )
        )
        (player-in-game 3)
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 310 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 310)
)
(defrule
    (goal 310 1)
=>
    (chat-to-player 3 chat-c139b871360335954087bfe0e7808ac0062bea98)
)
(defrule
    (goal 310 2)
=>
    (chat-to-player 3 chat-705519f70cb48c4e7326f64dfe1bb719a92d85fa)
)
(defrule
    (goal 310 3)
=>
    (chat-to-player 3 chat-c11ce23a13444a91229eb0dad991c757ca58c03f)
)
(defrule
    (up-compare-goal temp c:>= alliance-request-timeout)
    (goal allied-with-3 0)
    (stance-toward 3 ally)
    (goal player-3-is-bad-egg 0)
    (goal tried-alliance-with-3 0)
    (player-in-game 3)
=>
    (chat-local-to-self chat-3390d0fa3590638e3b866f872aa0d98d2e33dd5a)
    (set-stance 3 neutral)
    (set-goal tried-alliance-with-3 1)
)
(defrule
    (players-stance 3 ally)
    (not
      (stance-toward 3 ally)
    )
    (not
      (player-in-game 3)
    )
=>
    (set-stance 3 ally)
)
(defrule
    (up-compare-goal game-time-goal g:>= player-4-bad-egg-expires-at)
    (goal player-4-is-bad-egg 1)
    (not
      (goal player-4-bad-egg-expires-at -1)
    )
    (player-in-game 4)
=>
    (set-goal player-4-is-bad-egg 0)
    (set-goal player-4-bad-egg-expires-at -1)
    (chat-local-to-self chat-abf508ba3a4719c6a1adfd5aad724b36f94116ea)
)
(defrule
    (nand
      (goal accept-alliance-requests 1)
      (and
        (or
          (stance-toward 4 enemy)
          (stance-toward 4 neutral)
        )
        (and
          (players-stance 4 ally)
          (and
            (and
              (goal player-4-is-bad-egg 0)
              (goal allied-with-4 0)
            )
            (player-in-game 4)
          )
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 311 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 311)
)
(defrule
    (goal 311 1)
=>
    (chat-to-player 4 chat-a0936c429351330a24a75a7382b6594ea631f840)
)
(defrule
    (goal 311 2)
=>
    (chat-to-player 4 chat-6e4b5a5d9cd840be6824f7209855519c9bf8a732)
)
(defrule
    (goal 311 3)
=>
    (chat-to-player 4 chat-ae022016e19b11fd2b8bb5494d85a16624caea4f)
)
(defrule
    (goal accept-alliance-requests 1)
    (or
      (stance-toward 4 enemy)
      (stance-toward 4 neutral)
    )
    (players-stance 4 ally)
    (goal player-4-is-bad-egg 0)
    (goal allied-with-4 0)
    (player-in-game 4)
=>
    (chat-local-to-self chat-44b7511ff94bc36a35a4d972c0c9e42942081e6d)
    (set-stance 4 ally)
    (set-goal allied-with-4 1)
)
(defrule
    (nand
      (and
        (not
          (stance-toward 4 enemy)
        )
        (not
          (stance-toward 4 neutral)
        )
      )
      (and
        (players-stance 4 ally)
        (and
          (and
            (goal player-4-is-bad-egg 0)
            (goal allied-with-4 0)
          )
          (player-in-game 4)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 312 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 312)
)
(defrule
    (goal 312 1)
=>
    (chat-to-player 4 chat-87b47d886a3bcf4fecf764721e89a5c3f00f218b)
)
(defrule
    (goal 312 2)
=>
    (chat-to-player 4 chat-73443f250f6062de5d7ac5c26f0641c3e391f34d)
)
(defrule
    (goal 312 3)
=>
    (chat-to-player 4 chat-456f0f3ef0322a669d04b16584960dfa36421054)
)
(defrule
    (not
      (stance-toward 4 enemy)
    )
    (not
      (stance-toward 4 neutral)
    )
    (players-stance 4 ally)
    (goal player-4-is-bad-egg 0)
    (goal allied-with-4 0)
    (player-in-game 4)
=>
    (chat-local-to-self chat-7f0cbcd84755dad6a892d7bdaa7aee6699da2b3f)
    (set-goal allied-with-4 1)
)
(defrule
    (goal allied-with-4 1)
    (not
      (players-stance 4 ally)
    )
    (player-in-game 4)
=>
    (set-goal chat-betrayed-by-player 4)
)
(defrule
    (nand
      (and
        (goal allied-with-4 1)
        (not
          (players-stance 4 ally)
        )
      )
      (player-in-game 4)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-4-is-bad-egg 1)
    (up-modify-goal player-4-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-4-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal allied-with-4 1)
    (not
      (players-stance 4 ally)
    )
    (player-in-game 4)
=>
    (set-goal allied-with-4 0)
    (set-stance 4 enemy)
)
(defrule
    (goal threat-player 4)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 4 enemy)
    )
    (player-in-game 4)
=>
    (chat-local-to-self chat-e83a4ecd69f3c41b09a0a1236e7aa0581ac00f34)
)
(defrule
    (goal allied-with-4 1)
    (goal threat-player 4)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 4 enemy)
    )
    (player-in-game 4)
=>
    (set-goal chat-betrayed-by-player 4)
    (set-goal allied-with-4 0)
)
(defrule
    (nand
      (goal allied-with-4 1)
      (and
        (and
          (goal threat-player 4)
          (and
            (up-compare-goal threat-time c:< 1000)
            (not
              (stance-toward 4 enemy)
            )
          )
        )
        (player-in-game 4)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-4-is-bad-egg 1)
    (up-modify-goal player-4-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-4-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (nand
      (stance-toward 4 ally)
      (and
        (not
          (goal allied-with-4 1)
        )
        (and
          (and
            (goal threat-player 4)
            (and
              (up-compare-goal threat-time c:< 1000)
              (not
                (stance-toward 4 enemy)
              )
            )
          )
          (player-in-game 4)
        )
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-4-is-bad-egg 1)
    (up-modify-goal player-4-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-4-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal threat-player 4)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 4 enemy)
    )
    (player-in-game 4)
=>
    (set-stance 4 enemy)
)
(defrule
    (goal allied-with-4 0)
    (stance-toward 4 ally)
    (goal player-4-is-bad-egg 0)
    (goal tried-alliance-with-4 0)
    (player-in-game 4)
=>
    (up-modify-goal temp g:= game-time-goal)
    (up-modify-goal temp g:- player-4-alliance-request-time-stamp)
)
(defrule
    (nand
      (up-compare-goal temp c:>= alliance-request-timeout)
      (and
        (and
          (goal allied-with-4 0)
          (and
            (stance-toward 4 ally)
            (and
              (goal player-4-is-bad-egg 0)
              (goal tried-alliance-with-4 0)
            )
          )
        )
        (player-in-game 4)
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 313 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 313)
)
(defrule
    (goal 313 1)
=>
    (chat-to-player 4 chat-c139b871360335954087bfe0e7808ac0062bea98)
)
(defrule
    (goal 313 2)
=>
    (chat-to-player 4 chat-705519f70cb48c4e7326f64dfe1bb719a92d85fa)
)
(defrule
    (goal 313 3)
=>
    (chat-to-player 4 chat-c11ce23a13444a91229eb0dad991c757ca58c03f)
)
(defrule
    (up-compare-goal temp c:>= alliance-request-timeout)
    (goal allied-with-4 0)
    (stance-toward 4 ally)
    (goal player-4-is-bad-egg 0)
    (goal tried-alliance-with-4 0)
    (player-in-game 4)
=>
    (chat-local-to-self chat-76b4999be9f61799040a3ad99ff3b989f6d00007)
    (set-stance 4 neutral)
    (set-goal tried-alliance-with-4 1)
)
(defrule
    (players-stance 4 ally)
    (not
      (stance-toward 4 ally)
    )
    (not
      (player-in-game 4)
    )
=>
    (set-stance 4 ally)
)
(defrule
    (up-compare-goal game-time-goal g:>= player-5-bad-egg-expires-at)
    (goal player-5-is-bad-egg 1)
    (not
      (goal player-5-bad-egg-expires-at -1)
    )
    (player-in-game 5)
=>
    (set-goal player-5-is-bad-egg 0)
    (set-goal player-5-bad-egg-expires-at -1)
    (chat-local-to-self chat-e5e799bb57b080e85534d5c5d7946731946daf70)
)
(defrule
    (nand
      (goal accept-alliance-requests 1)
      (and
        (or
          (stance-toward 5 enemy)
          (stance-toward 5 neutral)
        )
        (and
          (players-stance 5 ally)
          (and
            (and
              (goal player-5-is-bad-egg 0)
              (goal allied-with-5 0)
            )
            (player-in-game 5)
          )
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 314 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 314)
)
(defrule
    (goal 314 1)
=>
    (chat-to-player 5 chat-a0936c429351330a24a75a7382b6594ea631f840)
)
(defrule
    (goal 314 2)
=>
    (chat-to-player 5 chat-6e4b5a5d9cd840be6824f7209855519c9bf8a732)
)
(defrule
    (goal 314 3)
=>
    (chat-to-player 5 chat-ae022016e19b11fd2b8bb5494d85a16624caea4f)
)
(defrule
    (goal accept-alliance-requests 1)
    (or
      (stance-toward 5 enemy)
      (stance-toward 5 neutral)
    )
    (players-stance 5 ally)
    (goal player-5-is-bad-egg 0)
    (goal allied-with-5 0)
    (player-in-game 5)
=>
    (chat-local-to-self chat-aad65329038f71ebf68e6a1d065bca65e7e03140)
    (set-stance 5 ally)
    (set-goal allied-with-5 1)
)
(defrule
    (nand
      (and
        (not
          (stance-toward 5 enemy)
        )
        (not
          (stance-toward 5 neutral)
        )
      )
      (and
        (players-stance 5 ally)
        (and
          (and
            (goal player-5-is-bad-egg 0)
            (goal allied-with-5 0)
          )
          (player-in-game 5)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 315 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 315)
)
(defrule
    (goal 315 1)
=>
    (chat-to-player 5 chat-87b47d886a3bcf4fecf764721e89a5c3f00f218b)
)
(defrule
    (goal 315 2)
=>
    (chat-to-player 5 chat-73443f250f6062de5d7ac5c26f0641c3e391f34d)
)
(defrule
    (goal 315 3)
=>
    (chat-to-player 5 chat-456f0f3ef0322a669d04b16584960dfa36421054)
)
(defrule
    (not
      (stance-toward 5 enemy)
    )
    (not
      (stance-toward 5 neutral)
    )
    (players-stance 5 ally)
    (goal player-5-is-bad-egg 0)
    (goal allied-with-5 0)
    (player-in-game 5)
=>
    (chat-local-to-self chat-349f79ea82b90a83246236380d1215e02744cbe1)
    (set-goal allied-with-5 1)
)
(defrule
    (goal allied-with-5 1)
    (not
      (players-stance 5 ally)
    )
    (player-in-game 5)
=>
    (set-goal chat-betrayed-by-player 5)
)
(defrule
    (nand
      (and
        (goal allied-with-5 1)
        (not
          (players-stance 5 ally)
        )
      )
      (player-in-game 5)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-5-is-bad-egg 1)
    (up-modify-goal player-5-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-5-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal allied-with-5 1)
    (not
      (players-stance 5 ally)
    )
    (player-in-game 5)
=>
    (set-goal allied-with-5 0)
    (set-stance 5 enemy)
)
(defrule
    (goal threat-player 5)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 5 enemy)
    )
    (player-in-game 5)
=>
    (chat-local-to-self chat-f120f59c5092ae5e71f5b3e761c95b0594d41efc)
)
(defrule
    (goal allied-with-5 1)
    (goal threat-player 5)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 5 enemy)
    )
    (player-in-game 5)
=>
    (set-goal chat-betrayed-by-player 5)
    (set-goal allied-with-5 0)
)
(defrule
    (nand
      (goal allied-with-5 1)
      (and
        (and
          (goal threat-player 5)
          (and
            (up-compare-goal threat-time c:< 1000)
            (not
              (stance-toward 5 enemy)
            )
          )
        )
        (player-in-game 5)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-5-is-bad-egg 1)
    (up-modify-goal player-5-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-5-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (nand
      (stance-toward 5 ally)
      (and
        (not
          (goal allied-with-5 1)
        )
        (and
          (and
            (goal threat-player 5)
            (and
              (up-compare-goal threat-time c:< 1000)
              (not
                (stance-toward 5 enemy)
              )
            )
          )
          (player-in-game 5)
        )
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-5-is-bad-egg 1)
    (up-modify-goal player-5-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-5-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal threat-player 5)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 5 enemy)
    )
    (player-in-game 5)
=>
    (set-stance 5 enemy)
)
(defrule
    (goal allied-with-5 0)
    (stance-toward 5 ally)
    (goal player-5-is-bad-egg 0)
    (goal tried-alliance-with-5 0)
    (player-in-game 5)
=>
    (up-modify-goal temp g:= game-time-goal)
    (up-modify-goal temp g:- player-5-alliance-request-time-stamp)
)
(defrule
    (nand
      (up-compare-goal temp c:>= alliance-request-timeout)
      (and
        (and
          (goal allied-with-5 0)
          (and
            (stance-toward 5 ally)
            (and
              (goal player-5-is-bad-egg 0)
              (goal tried-alliance-with-5 0)
            )
          )
        )
        (player-in-game 5)
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 316 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 316)
)
(defrule
    (goal 316 1)
=>
    (chat-to-player 5 chat-c139b871360335954087bfe0e7808ac0062bea98)
)
(defrule
    (goal 316 2)
=>
    (chat-to-player 5 chat-705519f70cb48c4e7326f64dfe1bb719a92d85fa)
)
(defrule
    (goal 316 3)
=>
    (chat-to-player 5 chat-c11ce23a13444a91229eb0dad991c757ca58c03f)
)
(defrule
    (up-compare-goal temp c:>= alliance-request-timeout)
    (goal allied-with-5 0)
    (stance-toward 5 ally)
    (goal player-5-is-bad-egg 0)
    (goal tried-alliance-with-5 0)
    (player-in-game 5)
=>
    (chat-local-to-self chat-125cdd96447018887b75673fc9b99fd92f05bac9)
    (set-stance 5 neutral)
    (set-goal tried-alliance-with-5 1)
)
(defrule
    (players-stance 5 ally)
    (not
      (stance-toward 5 ally)
    )
    (not
      (player-in-game 5)
    )
=>
    (set-stance 5 ally)
)
(defrule
    (up-compare-goal game-time-goal g:>= player-6-bad-egg-expires-at)
    (goal player-6-is-bad-egg 1)
    (not
      (goal player-6-bad-egg-expires-at -1)
    )
    (player-in-game 6)
=>
    (set-goal player-6-is-bad-egg 0)
    (set-goal player-6-bad-egg-expires-at -1)
    (chat-local-to-self chat-3bc7aa8c06652eb2594dce3bad6b029ce0b326e2)
)
(defrule
    (nand
      (goal accept-alliance-requests 1)
      (and
        (or
          (stance-toward 6 enemy)
          (stance-toward 6 neutral)
        )
        (and
          (players-stance 6 ally)
          (and
            (and
              (goal player-6-is-bad-egg 0)
              (goal allied-with-6 0)
            )
            (player-in-game 6)
          )
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 317 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 317)
)
(defrule
    (goal 317 1)
=>
    (chat-to-player 6 chat-a0936c429351330a24a75a7382b6594ea631f840)
)
(defrule
    (goal 317 2)
=>
    (chat-to-player 6 chat-6e4b5a5d9cd840be6824f7209855519c9bf8a732)
)
(defrule
    (goal 317 3)
=>
    (chat-to-player 6 chat-ae022016e19b11fd2b8bb5494d85a16624caea4f)
)
(defrule
    (goal accept-alliance-requests 1)
    (or
      (stance-toward 6 enemy)
      (stance-toward 6 neutral)
    )
    (players-stance 6 ally)
    (goal player-6-is-bad-egg 0)
    (goal allied-with-6 0)
    (player-in-game 6)
=>
    (chat-local-to-self chat-43d4565c80b77922e63818fd0a889f4835a27abc)
    (set-stance 6 ally)
    (set-goal allied-with-6 1)
)
(defrule
    (nand
      (and
        (not
          (stance-toward 6 enemy)
        )
        (not
          (stance-toward 6 neutral)
        )
      )
      (and
        (players-stance 6 ally)
        (and
          (and
            (goal player-6-is-bad-egg 0)
            (goal allied-with-6 0)
          )
          (player-in-game 6)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 318 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 318)
)
(defrule
    (goal 318 1)
=>
    (chat-to-player 6 chat-87b47d886a3bcf4fecf764721e89a5c3f00f218b)
)
(defrule
    (goal 318 2)
=>
    (chat-to-player 6 chat-73443f250f6062de5d7ac5c26f0641c3e391f34d)
)
(defrule
    (goal 318 3)
=>
    (chat-to-player 6 chat-456f0f3ef0322a669d04b16584960dfa36421054)
)
(defrule
    (not
      (stance-toward 6 enemy)
    )
    (not
      (stance-toward 6 neutral)
    )
    (players-stance 6 ally)
    (goal player-6-is-bad-egg 0)
    (goal allied-with-6 0)
    (player-in-game 6)
=>
    (chat-local-to-self chat-242ed4d43b83f84d1413e44e905c2b9a166f4104)
    (set-goal allied-with-6 1)
)
(defrule
    (goal allied-with-6 1)
    (not
      (players-stance 6 ally)
    )
    (player-in-game 6)
=>
    (set-goal chat-betrayed-by-player 6)
)
(defrule
    (nand
      (and
        (goal allied-with-6 1)
        (not
          (players-stance 6 ally)
        )
      )
      (player-in-game 6)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-6-is-bad-egg 1)
    (up-modify-goal player-6-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-6-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal allied-with-6 1)
    (not
      (players-stance 6 ally)
    )
    (player-in-game 6)
=>
    (set-goal allied-with-6 0)
    (set-stance 6 enemy)
)
(defrule
    (goal threat-player 6)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 6 enemy)
    )
    (player-in-game 6)
=>
    (chat-local-to-self chat-53567c58d5c94e135fe952436954bf043a31e01f)
)
(defrule
    (goal allied-with-6 1)
    (goal threat-player 6)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 6 enemy)
    )
    (player-in-game 6)
=>
    (set-goal chat-betrayed-by-player 6)
    (set-goal allied-with-6 0)
)
(defrule
    (nand
      (goal allied-with-6 1)
      (and
        (and
          (goal threat-player 6)
          (and
            (up-compare-goal threat-time c:< 1000)
            (not
              (stance-toward 6 enemy)
            )
          )
        )
        (player-in-game 6)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-6-is-bad-egg 1)
    (up-modify-goal player-6-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-6-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (nand
      (stance-toward 6 ally)
      (and
        (not
          (goal allied-with-6 1)
        )
        (and
          (and
            (goal threat-player 6)
            (and
              (up-compare-goal threat-time c:< 1000)
              (not
                (stance-toward 6 enemy)
              )
            )
          )
          (player-in-game 6)
        )
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-6-is-bad-egg 1)
    (up-modify-goal player-6-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-6-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal threat-player 6)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 6 enemy)
    )
    (player-in-game 6)
=>
    (set-stance 6 enemy)
)
(defrule
    (goal allied-with-6 0)
    (stance-toward 6 ally)
    (goal player-6-is-bad-egg 0)
    (goal tried-alliance-with-6 0)
    (player-in-game 6)
=>
    (up-modify-goal temp g:= game-time-goal)
    (up-modify-goal temp g:- player-6-alliance-request-time-stamp)
)
(defrule
    (nand
      (up-compare-goal temp c:>= alliance-request-timeout)
      (and
        (and
          (goal allied-with-6 0)
          (and
            (stance-toward 6 ally)
            (and
              (goal player-6-is-bad-egg 0)
              (goal tried-alliance-with-6 0)
            )
          )
        )
        (player-in-game 6)
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 319 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 319)
)
(defrule
    (goal 319 1)
=>
    (chat-to-player 6 chat-c139b871360335954087bfe0e7808ac0062bea98)
)
(defrule
    (goal 319 2)
=>
    (chat-to-player 6 chat-705519f70cb48c4e7326f64dfe1bb719a92d85fa)
)
(defrule
    (goal 319 3)
=>
    (chat-to-player 6 chat-c11ce23a13444a91229eb0dad991c757ca58c03f)
)
(defrule
    (up-compare-goal temp c:>= alliance-request-timeout)
    (goal allied-with-6 0)
    (stance-toward 6 ally)
    (goal player-6-is-bad-egg 0)
    (goal tried-alliance-with-6 0)
    (player-in-game 6)
=>
    (chat-local-to-self chat-1769508a0087b10ac1737e5d2e2f7d8ef6109642)
    (set-stance 6 neutral)
    (set-goal tried-alliance-with-6 1)
)
(defrule
    (players-stance 6 ally)
    (not
      (stance-toward 6 ally)
    )
    (not
      (player-in-game 6)
    )
=>
    (set-stance 6 ally)
)
(defrule
    (up-compare-goal game-time-goal g:>= player-7-bad-egg-expires-at)
    (goal player-7-is-bad-egg 1)
    (not
      (goal player-7-bad-egg-expires-at -1)
    )
    (player-in-game 7)
=>
    (set-goal player-7-is-bad-egg 0)
    (set-goal player-7-bad-egg-expires-at -1)
    (chat-local-to-self chat-394d0dfc698bda587775c81bb0f30b0d5526a13f)
)
(defrule
    (nand
      (goal accept-alliance-requests 1)
      (and
        (or
          (stance-toward 7 enemy)
          (stance-toward 7 neutral)
        )
        (and
          (players-stance 7 ally)
          (and
            (and
              (goal player-7-is-bad-egg 0)
              (goal allied-with-7 0)
            )
            (player-in-game 7)
          )
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 320 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 320)
)
(defrule
    (goal 320 1)
=>
    (chat-to-player 7 chat-a0936c429351330a24a75a7382b6594ea631f840)
)
(defrule
    (goal 320 2)
=>
    (chat-to-player 7 chat-6e4b5a5d9cd840be6824f7209855519c9bf8a732)
)
(defrule
    (goal 320 3)
=>
    (chat-to-player 7 chat-ae022016e19b11fd2b8bb5494d85a16624caea4f)
)
(defrule
    (goal accept-alliance-requests 1)
    (or
      (stance-toward 7 enemy)
      (stance-toward 7 neutral)
    )
    (players-stance 7 ally)
    (goal player-7-is-bad-egg 0)
    (goal allied-with-7 0)
    (player-in-game 7)
=>
    (chat-local-to-self chat-0d53ad97300dc104338e8d21b46b4754e07ce204)
    (set-stance 7 ally)
    (set-goal allied-with-7 1)
)
(defrule
    (nand
      (and
        (not
          (stance-toward 7 enemy)
        )
        (not
          (stance-toward 7 neutral)
        )
      )
      (and
        (players-stance 7 ally)
        (and
          (and
            (goal player-7-is-bad-egg 0)
            (goal allied-with-7 0)
          )
          (player-in-game 7)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 321 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 321)
)
(defrule
    (goal 321 1)
=>
    (chat-to-player 7 chat-87b47d886a3bcf4fecf764721e89a5c3f00f218b)
)
(defrule
    (goal 321 2)
=>
    (chat-to-player 7 chat-73443f250f6062de5d7ac5c26f0641c3e391f34d)
)
(defrule
    (goal 321 3)
=>
    (chat-to-player 7 chat-456f0f3ef0322a669d04b16584960dfa36421054)
)
(defrule
    (not
      (stance-toward 7 enemy)
    )
    (not
      (stance-toward 7 neutral)
    )
    (players-stance 7 ally)
    (goal player-7-is-bad-egg 0)
    (goal allied-with-7 0)
    (player-in-game 7)
=>
    (chat-local-to-self chat-8087453fdc70a35c4d48192914c94b262bd716aa)
    (set-goal allied-with-7 1)
)
(defrule
    (goal allied-with-7 1)
    (not
      (players-stance 7 ally)
    )
    (player-in-game 7)
=>
    (set-goal chat-betrayed-by-player 7)
)
(defrule
    (nand
      (and
        (goal allied-with-7 1)
        (not
          (players-stance 7 ally)
        )
      )
      (player-in-game 7)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-7-is-bad-egg 1)
    (up-modify-goal player-7-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-7-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal allied-with-7 1)
    (not
      (players-stance 7 ally)
    )
    (player-in-game 7)
=>
    (set-goal allied-with-7 0)
    (set-stance 7 enemy)
)
(defrule
    (goal threat-player 7)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 7 enemy)
    )
    (player-in-game 7)
=>
    (chat-local-to-self chat-4ed8c17a5c5ebe44478b112d0504cf7503a6feb4)
)
(defrule
    (goal allied-with-7 1)
    (goal threat-player 7)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 7 enemy)
    )
    (player-in-game 7)
=>
    (set-goal chat-betrayed-by-player 7)
    (set-goal allied-with-7 0)
)
(defrule
    (nand
      (goal allied-with-7 1)
      (and
        (and
          (goal threat-player 7)
          (and
            (up-compare-goal threat-time c:< 1000)
            (not
              (stance-toward 7 enemy)
            )
          )
        )
        (player-in-game 7)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-7-is-bad-egg 1)
    (up-modify-goal player-7-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-7-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (nand
      (stance-toward 7 ally)
      (and
        (not
          (goal allied-with-7 1)
        )
        (and
          (and
            (goal threat-player 7)
            (and
              (up-compare-goal threat-time c:< 1000)
              (not
                (stance-toward 7 enemy)
              )
            )
          )
          (player-in-game 7)
        )
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-7-is-bad-egg 1)
    (up-modify-goal player-7-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-7-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal threat-player 7)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 7 enemy)
    )
    (player-in-game 7)
=>
    (set-stance 7 enemy)
)
(defrule
    (goal allied-with-7 0)
    (stance-toward 7 ally)
    (goal player-7-is-bad-egg 0)
    (goal tried-alliance-with-7 0)
    (player-in-game 7)
=>
    (up-modify-goal temp g:= game-time-goal)
    (up-modify-goal temp g:- player-7-alliance-request-time-stamp)
)
(defrule
    (nand
      (up-compare-goal temp c:>= alliance-request-timeout)
      (and
        (and
          (goal allied-with-7 0)
          (and
            (stance-toward 7 ally)
            (and
              (goal player-7-is-bad-egg 0)
              (goal tried-alliance-with-7 0)
            )
          )
        )
        (player-in-game 7)
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 322 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 322)
)
(defrule
    (goal 322 1)
=>
    (chat-to-player 7 chat-c139b871360335954087bfe0e7808ac0062bea98)
)
(defrule
    (goal 322 2)
=>
    (chat-to-player 7 chat-705519f70cb48c4e7326f64dfe1bb719a92d85fa)
)
(defrule
    (goal 322 3)
=>
    (chat-to-player 7 chat-c11ce23a13444a91229eb0dad991c757ca58c03f)
)
(defrule
    (up-compare-goal temp c:>= alliance-request-timeout)
    (goal allied-with-7 0)
    (stance-toward 7 ally)
    (goal player-7-is-bad-egg 0)
    (goal tried-alliance-with-7 0)
    (player-in-game 7)
=>
    (chat-local-to-self chat-fb4127402bce408b590abd4f83a508462a0ab9b6)
    (set-stance 7 neutral)
    (set-goal tried-alliance-with-7 1)
)
(defrule
    (players-stance 7 ally)
    (not
      (stance-toward 7 ally)
    )
    (not
      (player-in-game 7)
    )
=>
    (set-stance 7 ally)
)
(defrule
    (up-compare-goal game-time-goal g:>= player-8-bad-egg-expires-at)
    (goal player-8-is-bad-egg 1)
    (not
      (goal player-8-bad-egg-expires-at -1)
    )
    (player-in-game 8)
=>
    (set-goal player-8-is-bad-egg 0)
    (set-goal player-8-bad-egg-expires-at -1)
    (chat-local-to-self chat-eff6100e64480d30af47207c5d14fa0bb2446c86)
)
(defrule
    (nand
      (goal accept-alliance-requests 1)
      (and
        (or
          (stance-toward 8 enemy)
          (stance-toward 8 neutral)
        )
        (and
          (players-stance 8 ally)
          (and
            (and
              (goal player-8-is-bad-egg 0)
              (goal allied-with-8 0)
            )
            (player-in-game 8)
          )
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 323 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 323)
)
(defrule
    (goal 323 1)
=>
    (chat-to-player 8 chat-a0936c429351330a24a75a7382b6594ea631f840)
)
(defrule
    (goal 323 2)
=>
    (chat-to-player 8 chat-6e4b5a5d9cd840be6824f7209855519c9bf8a732)
)
(defrule
    (goal 323 3)
=>
    (chat-to-player 8 chat-ae022016e19b11fd2b8bb5494d85a16624caea4f)
)
(defrule
    (goal accept-alliance-requests 1)
    (or
      (stance-toward 8 enemy)
      (stance-toward 8 neutral)
    )
    (players-stance 8 ally)
    (goal player-8-is-bad-egg 0)
    (goal allied-with-8 0)
    (player-in-game 8)
=>
    (chat-local-to-self chat-50513f1a2be7088d01afd3ec816114c2691b9152)
    (set-stance 8 ally)
    (set-goal allied-with-8 1)
)
(defrule
    (nand
      (and
        (not
          (stance-toward 8 enemy)
        )
        (not
          (stance-toward 8 neutral)
        )
      )
      (and
        (players-stance 8 ally)
        (and
          (and
            (goal player-8-is-bad-egg 0)
            (goal allied-with-8 0)
          )
          (player-in-game 8)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 324 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 324)
)
(defrule
    (goal 324 1)
=>
    (chat-to-player 8 chat-87b47d886a3bcf4fecf764721e89a5c3f00f218b)
)
(defrule
    (goal 324 2)
=>
    (chat-to-player 8 chat-73443f250f6062de5d7ac5c26f0641c3e391f34d)
)
(defrule
    (goal 324 3)
=>
    (chat-to-player 8 chat-456f0f3ef0322a669d04b16584960dfa36421054)
)
(defrule
    (not
      (stance-toward 8 enemy)
    )
    (not
      (stance-toward 8 neutral)
    )
    (players-stance 8 ally)
    (goal player-8-is-bad-egg 0)
    (goal allied-with-8 0)
    (player-in-game 8)
=>
    (chat-local-to-self chat-fa3751e319cbe5cacd139c7a1562fa43f2572540)
    (set-goal allied-with-8 1)
)
(defrule
    (goal allied-with-8 1)
    (not
      (players-stance 8 ally)
    )
    (player-in-game 8)
=>
    (set-goal chat-betrayed-by-player 8)
)
(defrule
    (nand
      (and
        (goal allied-with-8 1)
        (not
          (players-stance 8 ally)
        )
      )
      (player-in-game 8)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-8-is-bad-egg 1)
    (up-modify-goal player-8-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-8-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal allied-with-8 1)
    (not
      (players-stance 8 ally)
    )
    (player-in-game 8)
=>
    (set-goal allied-with-8 0)
    (set-stance 8 enemy)
)
(defrule
    (goal threat-player 8)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 8 enemy)
    )
    (player-in-game 8)
=>
    (chat-local-to-self chat-0f45c15df8f4b98f45e76a193f81ee06c4264160)
)
(defrule
    (goal allied-with-8 1)
    (goal threat-player 8)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 8 enemy)
    )
    (player-in-game 8)
=>
    (set-goal chat-betrayed-by-player 8)
    (set-goal allied-with-8 0)
)
(defrule
    (nand
      (goal allied-with-8 1)
      (and
        (and
          (goal threat-player 8)
          (and
            (up-compare-goal threat-time c:< 1000)
            (not
              (stance-toward 8 enemy)
            )
          )
        )
        (player-in-game 8)
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-8-is-bad-egg 1)
    (up-modify-goal player-8-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-8-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (nand
      (stance-toward 8 ally)
      (and
        (not
          (goal allied-with-8 1)
        )
        (and
          (and
            (goal threat-player 8)
            (and
              (up-compare-goal threat-time c:< 1000)
              (not
                (stance-toward 8 enemy)
              )
            )
          )
          (player-in-game 8)
        )
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (set-goal player-8-is-bad-egg 1)
    (up-modify-goal player-8-bad-egg-expires-at g:= game-time-goal)
    (up-modify-goal player-8-bad-egg-expires-at c:+ bad-egg-expiry)
)
(defrule
    (goal threat-player 8)
    (up-compare-goal threat-time c:< 1000)
    (not
      (stance-toward 8 enemy)
    )
    (player-in-game 8)
=>
    (set-stance 8 enemy)
)
(defrule
    (goal allied-with-8 0)
    (stance-toward 8 ally)
    (goal player-8-is-bad-egg 0)
    (goal tried-alliance-with-8 0)
    (player-in-game 8)
=>
    (up-modify-goal temp g:= game-time-goal)
    (up-modify-goal temp g:- player-8-alliance-request-time-stamp)
)
(defrule
    (nand
      (up-compare-goal temp c:>= alliance-request-timeout)
      (and
        (and
          (goal allied-with-8 0)
          (and
            (stance-toward 8 ally)
            (and
              (goal player-8-is-bad-egg 0)
              (goal tried-alliance-with-8 0)
            )
          )
        )
        (player-in-game 8)
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 325 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 325)
)
(defrule
    (goal 325 1)
=>
    (chat-to-player 8 chat-c139b871360335954087bfe0e7808ac0062bea98)
)
(defrule
    (goal 325 2)
=>
    (chat-to-player 8 chat-705519f70cb48c4e7326f64dfe1bb719a92d85fa)
)
(defrule
    (goal 325 3)
=>
    (chat-to-player 8 chat-c11ce23a13444a91229eb0dad991c757ca58c03f)
)
(defrule
    (up-compare-goal temp c:>= alliance-request-timeout)
    (goal allied-with-8 0)
    (stance-toward 8 ally)
    (goal player-8-is-bad-egg 0)
    (goal tried-alliance-with-8 0)
    (player-in-game 8)
=>
    (chat-local-to-self chat-a59989c36f66486bdb677b966bef4ab9aa0bca61)
    (set-stance 8 neutral)
    (set-goal tried-alliance-with-8 1)
)
(defrule
    (players-stance 8 ally)
    (not
      (stance-toward 8 ally)
    )
    (not
      (player-in-game 8)
    )
=>
    (set-stance 8 ally)
)
(defrule
    (goal chat-betrayed-by-player -1)
=>
    (up-jump-rule 12)
)
(defrule
    (true)
=>
    (set-goal 326 0)
    (generate-random-number 11)
    (up-get-fact random-number 0 326)
)
(defrule
    (goal 326 1)
=>
    (up-chat-data-to-all "Really %d?" g: chat-betrayed-by-player)
)
(defrule
    (goal 326 2)
=>
    (up-chat-data-to-all "I thought we were friends, player %d!" g: chat-betrayed-by-player)
)
(defrule
    (goal 326 3)
=>
    (up-chat-data-to-all "Player %d! You backstabber!" g: chat-betrayed-by-player)
)
(defrule
    (goal 326 4)
=>
    (up-chat-data-to-all "Player %d? What gives?!" g: chat-betrayed-by-player)
)
(defrule
    (goal 326 5)
=>
    (up-chat-data-to-all "I knew you were a bad egg, player %d." g: chat-betrayed-by-player)
)
(defrule
    (goal 326 6)
=>
    (up-chat-data-to-all "Player %d? But why?" g: chat-betrayed-by-player)
)
(defrule
    (goal 326 7)
=>
    (up-chat-data-to-all "Alright, player %d, bring it on!!" g: chat-betrayed-by-player)
)
(defrule
    (goal 326 8)
=>
    (up-chat-data-to-all "Don't bite off more than you can chew, player %d..." g: chat-betrayed-by-player)
)
(defrule
    (goal 326 9)
=>
    (up-chat-data-to-all "Why me, player %d?" g: chat-betrayed-by-player)
)
(defrule
    (goal 326 10)
=>
    (up-chat-data-to-all "Why now, player %d?" g: chat-betrayed-by-player)
)
(defrule
    (goal 326 11)
=>
    (up-chat-data-to-all "Shame. We could've been best frends, player %d." g: chat-betrayed-by-player)
)
(defrule
    (not
      (goal chat-betrayed-by-player -1)
    )
=>
    (set-goal chat-betrayed-by-player -1)
)
(defrule
    (goal chat-betray-player -1)
=>
    (up-jump-rule 11)
)
(defrule
    (true)
=>
    (set-goal 327 0)
    (generate-random-number 10)
    (up-get-fact random-number 0 327)
)
(defrule
    (goal 327 1)
=>
    (up-chat-data-to-all "It could never have worked between us, player %d." g: chat-betray-player)
)
(defrule
    (goal 327 2)
=>
    (up-chat-data-to-all "I've had enough of you, player %d." g: chat-betray-player)
)
(defrule
    (goal 327 3)
=>
    (up-chat-data-to-all "You aren't needed anymore player %d." g: chat-betray-player)
)
(defrule
    (goal 327 4)
=>
    (up-chat-data-to-all "Time to die, player %d!" g: chat-betray-player)
)
(defrule
    (goal 327 5)
=>
    (up-chat-data-to-all "Player %d, we're done." g: chat-betray-player)
)
(defrule
    (goal 327 6)
=>
    (up-chat-data-to-all "Your days are numbered, player %d!" g: chat-betray-player)
)
(defrule
    (goal 327 7)
=>
    (up-chat-data-to-all "I'm sorry about this, player %d." g: chat-betray-player)
)
(defrule
    (goal 327 8)
=>
    (chat-to-all chat-24431b28ab67d3f626c364c93d8846158d17db36)
)
(defrule
    (goal 327 9)
=>
    (chat-to-all chat-515042920fb0d9bf0d0b9d82f7026f465ea6d162)
)
(defrule
    (goal 327 10)
=>
    (chat-to-all chat-ace1e65c7cd0e3b09613b3464a22b026da9f8238)
)
(defrule
    (not
      (goal chat-betray-player -1)
    )
=>
    (set-goal chat-betray-player -1)
)
(defrule
    (true)
=>
    (set-stance my-player-number ally)
)
(defrule
    (goal resign 1)
    (nand
      (goal resign 0)
      (and
        (goal locked-teams 0)
        (or
          (goal team-game 1)
          (goal free-for-all 1)
        )
      )
    )
=>
    (set-stance every-enemy ally)
    (set-stance every-neutral ally)
)
(defrule
    (goal good-fire-ships 1)
    (taunt-detected any-ally 34)
=>
    (set-goal produce-fire-ships 1)
)
(defrule
    (not
      (goal good-fire-ships 1)
    )
    (taunt-detected any-ally 34)
=>
    (set-goal produce-galleys 1)
)
(defrule
    (not
      (taunt-detected any-ally 34)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 328 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 328)
)
(defrule
    (goal 328 1)
=>
    (chat-to-player every-ally chat-d70e126bdbfa17c210e069ec4095fd43cf3c84ec)
)
(defrule
    (goal 328 2)
=>
    (chat-to-player every-ally chat-240eb2776efd751ff3abc7e50068b9d40675aba1)
)
(defrule
    (goal 328 3)
=>
    (chat-to-player every-ally chat-59b165c02042977bdaf7087bdf3887eb9f20a828)
)
(defrule
    (taunt-detected any-ally 34)
=>
    (acknowledge-taunt this-any-ally 34)
)
(defrule
    (goal full-water-map 0)
    (taunt-detected any-ally 35)
=>
    (set-goal produce-fire-ships 0)
    (set-goal produce-galleys 0)
)
(defrule
    (nand
      (goal full-water-map 0)
      (taunt-detected any-ally 35)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 329 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 329)
)
(defrule
    (goal 329 1)
=>
    (chat-to-player every-ally chat-d70e126bdbfa17c210e069ec4095fd43cf3c84ec)
)
(defrule
    (goal 329 2)
=>
    (chat-to-player every-ally chat-240eb2776efd751ff3abc7e50068b9d40675aba1)
)
(defrule
    (goal 329 3)
=>
    (chat-to-player every-ally chat-59b165c02042977bdaf7087bdf3887eb9f20a828)
)
(defrule
    (nand
      (not
        (goal full-water-map 0)
      )
      (taunt-detected any-ally 35)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 330 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 330)
)
(defrule
    (goal 330 1)
=>
    (chat-to-player every-ally chat-adce784ed342763397f2d5c5567de3da43ad274c)
)
(defrule
    (goal 330 2)
=>
    (chat-to-player every-ally chat-39c49ff4279bb5160e5406ffd1627ea17127aab9)
)
(defrule
    (goal 330 3)
=>
    (chat-to-player every-ally chat-4f5a3f8e7707db677e3935f1ab3f9fa22019323e)
)
(defrule
    (taunt-detected any-ally 35)
=>
    (acknowledge-taunt this-any-ally 35)
)
(defrule
    (goal resign 1)
    (or
      (and
        (building-type-count castle == 0)
        (building-type-count town-center == 0)
      )
      (goal team-game 1)
    )
=>
    (resign)
)
(defrule
    (unit-type-count villager < 10)
    (population-cap >= 75)
    (game-time >= 1800)
=>
    (set-goal resign 1)
)
(defrule
    (goal full-water-map 1)
    (warboat-count == 0)
    (game-time >= 1800)
=>
    (set-goal resign 1)
)
(defrule
    (goal resign 1)
    (goal team-game 0)
=>
    (delete-building castle)
    (delete-building town-center)
)
(defrule
    (not
      (taunt-detected any-ally 42)
    )
=>
    (up-jump-rule 7)
)
(defrule
    (up-research-status c: feudal-age < research-pending)
=>
    (chat-to-player every-ally chat-3157faa10ad8f4349ca9a0f430e2020480a2924d)
)
(defrule
    (up-research-status c: feudal-age == research-pending)
    (not
      (up-research-status c: feudal-age < research-pending)
    )
=>
    (chat-to-player every-ally chat-8c1add5792f06349834823be7af5388dd18dc6e5)
)
(defrule
    (up-research-status c: castle-age < research-pending)
    (not
      (up-research-status c: feudal-age < research-pending)
    )
    (not
      (up-research-status c: feudal-age == research-pending)
    )
=>
    (chat-to-player every-ally chat-1b168fc75d0dccead31debc6304ae90e62b85346)
)
(defrule
    (up-research-status c: castle-age == research-pending)
    (not
      (up-research-status c: feudal-age == research-pending)
    )
    (not
      (up-research-status c: feudal-age < research-pending)
    )
    (not
      (up-research-status c: castle-age < research-pending)
    )
=>
    (chat-to-player every-ally chat-8e47476ff2d44144fef9f4c3b25acadc9b58ade1)
)
(defrule
    (up-research-status c: imperial-age < research-pending)
    (not
      (up-research-status c: castle-age < research-pending)
    )
    (not
      (up-research-status c: feudal-age < research-pending)
    )
    (not
      (up-research-status c: feudal-age == research-pending)
    )
    (not
      (up-research-status c: castle-age == research-pending)
    )
=>
    (chat-to-player every-ally chat-3e71608742dd8317c17d7aad90031f4ca2f4e31e)
)
(defrule
    (up-research-status c: imperial-age == research-pending)
    (not
      (up-research-status c: castle-age == research-pending)
    )
    (not
      (up-research-status c: feudal-age == research-pending)
    )
    (not
      (up-research-status c: feudal-age < research-pending)
    )
    (not
      (up-research-status c: castle-age < research-pending)
    )
    (not
      (up-research-status c: imperial-age < research-pending)
    )
=>
    (chat-to-player every-ally chat-6aa194c8364dcbf888b9f71dddead1b65e2a18b1)
)
(defrule
    (not
      (up-research-status c: imperial-age < research-pending)
    )
    (not
      (up-research-status c: castle-age < research-pending)
    )
    (not
      (up-research-status c: feudal-age < research-pending)
    )
    (not
      (up-research-status c: feudal-age == research-pending)
    )
    (not
      (up-research-status c: castle-age == research-pending)
    )
    (not
      (up-research-status c: imperial-age == research-pending)
    )
=>
    (chat-to-player every-ally chat-5020f05cec7992e87bfff7f3806503ffd09fabb4)
)
(defrule
    (taunt-detected any-ally 42)
=>
    (acknowledge-taunt this-any-ally 42)
)
(defrule
    (nand
      (goal water-map 0)
      (taunt-detected any-enemy 34)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 331 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 331)
)
(defrule
    (goal 331 1)
=>
    (chat-to-all chat-96d6c00acaea47ba19980829b2fd9456b0f6bc20)
)
(defrule
    (goal 331 2)
=>
    (chat-to-all chat-aba9a618839083a1fc344dc2d94aaa3aac5d8a7b)
)
(defrule
    (goal 331 3)
=>
    (chat-to-all chat-c4920c37e39cb5df2dc2ae05b30a0bd92a835105)
)
(defrule
    (taunt-detected any-enemy 34)
=>
    (acknowledge-taunt this-any-enemy 34)
)
(defrule
    (nand
      (goal full-water-map 1)
      (taunt-detected any-enemy 35)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 332 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 332)
)
(defrule
    (goal 332 1)
=>
    (chat-to-all chat-96d6c00acaea47ba19980829b2fd9456b0f6bc20)
)
(defrule
    (goal 332 2)
=>
    (chat-to-all chat-aba9a618839083a1fc344dc2d94aaa3aac5d8a7b)
)
(defrule
    (goal 332 3)
=>
    (chat-to-all chat-c4920c37e39cb5df2dc2ae05b30a0bd92a835105)
)
(defrule
    (taunt-detected any-enemy 35)
=>
    (acknowledge-taunt this-any-enemy 35)
)
(defrule
    (not
      (taunt-detected any-enemy 38)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 333 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 333)
)
(defrule
    (goal 333 1)
=>
    (chat-to-all chat-96d6c00acaea47ba19980829b2fd9456b0f6bc20)
)
(defrule
    (goal 333 2)
=>
    (chat-to-all chat-aba9a618839083a1fc344dc2d94aaa3aac5d8a7b)
)
(defrule
    (goal 333 3)
=>
    (chat-to-all chat-c4920c37e39cb5df2dc2ae05b30a0bd92a835105)
)
(defrule
    (taunt-detected any-enemy 38)
=>
    (acknowledge-taunt this-any-enemy 38)
)
(defrule
    (not
      (game-time < 5)
    )
=>
    (up-jump-rule 14)
)
(defrule
    (or
      (goal free-for-all 1)
      (goal team-game 1)
    )
=>
    (set-goal 334 0)
    (generate-random-number 4)
    (up-get-fact random-number 0 334)
    (disable-self)
)
(defrule
    (goal 334 1)
    (or
      (goal free-for-all 1)
      (goal team-game 1)
    )
=>
    (chat-to-all chat-0c828eb15d2a93d63913170c9c76265baa71917f)
    (disable-self)
)
(defrule
    (goal free-for-all 1)
    (goal 334 2)
    (or
      (goal free-for-all 1)
      (goal team-game 1)
    )
=>
    (chat-to-all chat-c19d910ae0af1d7a0109c0695c694cb1ea6d76ce)
    (disable-self)
)
(defrule
    (not
      (goal free-for-all 1)
    )
    (goal 334 2)
    (or
      (goal free-for-all 1)
      (goal team-game 1)
    )
=>
    (chat-to-all chat-c1a91b91f6684242f1d97269a22c358daf5c4c7c)
    (disable-self)
)
(defrule
    (goal 334 3)
    (or
      (goal free-for-all 1)
      (goal team-game 1)
    )
=>
    (chat-to-all chat-c1a2c8283f88d733961d6b4365e9be13d623d2ed)
    (disable-self)
)
(defrule
    (goal 334 4)
    (or
      (goal free-for-all 1)
      (goal team-game 1)
    )
=>
    (chat-to-all chat-34a4e982ab21b1135e32998f31b988f2e721aa37)
    (disable-self)
)
(defrule
    (not
      (goal free-for-all 1)
    )
    (not
      (goal team-game 1)
    )
=>
    (set-goal 335 0)
    (generate-random-number 7)
    (up-get-fact random-number 0 335)
    (disable-self)
)
(defrule
    (goal 335 1)
    (not
      (goal free-for-all 1)
    )
    (not
      (goal team-game 1)
    )
=>
    (chat-to-all chat-4b2d225e68bb2a07009be46ed0e20152c08e55aa)
    (disable-self)
)
(defrule
    (goal 335 2)
    (not
      (goal free-for-all 1)
    )
    (not
      (goal team-game 1)
    )
=>
    (chat-to-all chat-3d0ebcbcac2c3738090ce9627d7d67ce721988cb)
    (disable-self)
)
(defrule
    (goal 335 3)
    (not
      (goal free-for-all 1)
    )
    (not
      (goal team-game 1)
    )
=>
    (chat-to-all chat-a7a3d544f2e165ee5b1d0c26d4ff3e158cca81a1)
    (disable-self)
)
(defrule
    (goal 335 4)
    (not
      (goal free-for-all 1)
    )
    (not
      (goal team-game 1)
    )
=>
    (chat-to-all chat-f5dc299365d92f463b51850f4998d15a1ccea957)
    (disable-self)
)
(defrule
    (goal 335 5)
    (not
      (goal free-for-all 1)
    )
    (not
      (goal team-game 1)
    )
=>
    (chat-to-all chat-352a6728c4532105f53a668dfbd418be5cb3fd10)
    (disable-self)
)
(defrule
    (goal 335 6)
    (not
      (goal free-for-all 1)
    )
    (not
      (goal team-game 1)
    )
=>
    (chat-to-all chat-8e30d6aac813417d581bd798bb4422107881ac34)
    (disable-self)
)
(defrule
    (goal 335 7)
    (not
      (goal free-for-all 1)
    )
    (not
      (goal team-game 1)
    )
=>
    (chat-to-all chat-8503ede3ea63ea360679c1a7bb9c6feb415c1aeb)
    (disable-self)
)
(defrule
    (nand
      (game-time >= 60)
      (and
        (game-time < 120)
        (and
          (goal neutral-or-enemy-players-count 0)
          (goal locked-teams 1)
        )
      )
    )
=>
    (up-jump-rule 7)
)
(defrule
    (goal team-game 1)
=>
    (set-goal 336 0)
    (generate-random-number 2)
    (up-get-fact random-number 0 336)
    (disable-self)
)
(defrule
    (goal 336 1)
    (goal team-game 1)
=>
    (chat-to-all chat-54ceebfc9eedd7e5470e1bf52d52982ae8466606)
    (disable-self)
)
(defrule
    (goal 336 2)
    (goal team-game 1)
=>
    (chat-to-all chat-407f29f6af78f4b121f2dcc95bc1802f5565e1e0)
    (disable-self)
)
(defrule
    (not
      (goal team-game 1)
    )
=>
    (set-goal 337 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 337)
    (disable-self)
)
(defrule
    (goal 337 1)
    (not
      (goal team-game 1)
    )
=>
    (chat-to-all chat-c44ed845a6ff3c2ffb3ab515fa52338d12f60525)
    (disable-self)
)
(defrule
    (goal 337 2)
    (not
      (goal team-game 1)
    )
=>
    (chat-to-all chat-81efecdd5c82a2660ad0c59f815946bef2f13f88)
    (disable-self)
)
(defrule
    (goal 337 3)
    (not
      (goal team-game 1)
    )
=>
    (chat-to-all chat-a3be6ee65fab627be24ec41da7725a025c510c56)
    (disable-self)
)
(defrule
    (goal locked-teams 1)
=>
    (enable-timer 8 1800)
    (disable-self)
)
(defrule
    (nand
      (goal free-for-all 1)
      (and
        (up-compare-goal score-percentage c:<= 70)
        (and
          (timer-triggered 8)
          (goal locked-teams 1)
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 338 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 338)
    (disable-self)
)
(defrule
    (goal 338 1)
=>
    (chat-to-all chat-6e3caf41f579a199863e77aba43701a14a104135)
    (disable-self)
)
(defrule
    (goal 338 2)
=>
    (chat-to-all chat-07fbe50aef0a19edc7a165a23218530a51375911)
    (disable-self)
)
(defrule
    (goal 338 3)
=>
    (chat-to-all chat-8cfad1992442d65d54a87d6db94bf15a1791fd14)
    (disable-self)
)
(defrule
    (nand
      (goal team-game 1)
      (and
        (not
          (goal free-for-all 1)
        )
        (and
          (up-compare-goal score-percentage c:<= 70)
          (and
            (timer-triggered 8)
            (goal locked-teams 1)
          )
        )
      )
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 339 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 339)
    (disable-self)
)
(defrule
    (goal 339 1)
=>
    (chat-to-all chat-148fc18afce1ba1e4bf765ce58284107bababfe7)
    (disable-self)
)
(defrule
    (goal 339 2)
=>
    (chat-to-all chat-3af0b005d375f748321b4a41fcecc1aae4aefaf6)
    (disable-self)
)
(defrule
    (goal 339 3)
=>
    (chat-to-all chat-38e831846ef26cbdaacad9bf5e7250fc188a6c32)
    (disable-self)
)
(defrule
    (nand
      (not
        (goal free-for-all 1)
      )
      (and
        (not
          (goal team-game 1)
        )
        (and
          (up-compare-goal score-percentage c:<= 70)
          (and
            (timer-triggered 8)
            (goal locked-teams 1)
          )
        )
      )
    )
=>
    (up-jump-rule 6)
)
(defrule
    (true)
=>
    (set-goal 340 0)
    (generate-random-number 5)
    (up-get-fact random-number 0 340)
    (disable-self)
)
(defrule
    (goal 340 1)
=>
    (chat-to-all chat-19634ee5b0c18ded8ea33b3ae8dd61089f1b8332)
    (disable-self)
)
(defrule
    (goal 340 2)
=>
    (chat-to-all chat-27daacbab2622883f44b817a5b7a32ce0d4a0daa)
    (disable-self)
)
(defrule
    (goal 340 3)
=>
    (chat-to-all chat-2b4241267e3b903ad08c41a2e2e065b1e18d6217)
    (disable-self)
)
(defrule
    (goal 340 4)
=>
    (chat-to-all chat-2e540e7a93e8a2c16dd2db03a61f281bd71d44a6)
    (disable-self)
)
(defrule
    (goal 340 5)
=>
    (chat-to-all chat-785d57ccabb15e87d9006519033209d563547b10)
    (disable-self)
)
(defrule
    (nand
      (goal free-for-all 1)
      (and
        (up-compare-goal score-percentage c:>= 140)
        (and
          (not
            (up-compare-goal score-percentage c:<= 70)
          )
          (and
            (timer-triggered 8)
            (goal locked-teams 1)
          )
        )
      )
    )
=>
    (up-jump-rule 3)
)
(defrule
    (true)
=>
    (set-goal 341 0)
    (generate-random-number 2)
    (up-get-fact random-number 0 341)
    (disable-self)
)
(defrule
    (goal 341 1)
=>
    (chat-to-all chat-64380c78099f9d606c5717d5cd64375f7af9b1b1)
    (disable-self)
)
(defrule
    (goal 341 2)
=>
    (chat-to-all chat-7d06b793b137e11ecd1977e0a7e00d7e063fc5d2)
    (disable-self)
)
(defrule
    (nand
      (goal team-game 1)
      (and
        (not
          (goal free-for-all 1)
        )
        (and
          (up-compare-goal score-percentage c:>= 140)
          (and
            (not
              (up-compare-goal score-percentage c:<= 70)
            )
            (and
              (timer-triggered 8)
              (goal locked-teams 1)
            )
          )
        )
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (chat-to-all chat-4d11f67974ce3ca3532c23088d775e38fb8c3735)
    (disable-self)
)
(defrule
    (nand
      (not
        (goal free-for-all 1)
      )
      (and
        (not
          (goal team-game 1)
        )
        (and
          (up-compare-goal score-percentage c:>= 140)
          (and
            (not
              (up-compare-goal score-percentage c:<= 70)
            )
            (and
              (timer-triggered 8)
              (goal locked-teams 1)
            )
          )
        )
      )
    )
=>
    (up-jump-rule 1)
)
(defrule
    (true)
=>
    (chat-to-all chat-5d312d4a59392d3794263192a8821782d3d2b8f1)
    (disable-self)
)
(defrule
    (nand
      (and
        (up-compare-goal largest-enemy-military-percentage c:<= 50)
        (goal attacking 0)
      )
      (and
        (military-population >= 20)
        (and
          (timer-triggered 8)
          (goal locked-teams 1)
        )
      )
    )
=>
    (up-jump-rule 8)
)
(defrule
    (true)
=>
    (set-goal 342 0)
    (generate-random-number 6)
    (up-get-fact random-number 0 342)
    (disable-self)
)
(defrule
    (goal 342 1)
=>
    (chat-to-all chat-e9532672b85a1beb284e4e03bceb633880370346)
    (disable-self)
)
(defrule
    (goal 342 2)
=>
    (chat-to-all chat-0ecbe33a40e3a01167989f50032df37ff257587f)
    (disable-self)
)
(defrule
    (goal 342 3)
=>
    (chat-to-all chat-961c2deda7b66bdb5f5e299c7782fbb4da858a1b)
    (disable-self)
)
(defrule
    (goal 342 4)
=>
    (chat-to-all chat-51fc69ba67d089e91a8fca0c10c2534cd01e61e3)
    (disable-self)
)
(defrule
    (or
      (goal team-game 1)
      (goal free-for-all 1)
    )
    (goal 342 5)
=>
    (chat-to-all chat-8ce4eeee4ffed6c3f3b1db90374ebfcde5700522)
    (disable-self)
)
(defrule
    (not
      (goal team-game 1)
    )
    (not
      (goal free-for-all 1)
    )
    (goal 342 5)
=>
    (chat-to-all chat-eaa2467d642e1a4eb5a8d9106ae62d43146b2a2e)
    (disable-self)
)
(defrule
    (goal 342 6)
=>
    (chat-to-all chat-b6df83614ca4dbd79ddb8598e07cc0b0d02b7e84)
    (disable-self)
)
(defrule
    (nand
      (goal attacking 1)
      (and
        (up-compare-goal largest-enemy-military-percentage c:>= 170)
        (and
          (nand
            (up-compare-goal largest-enemy-military-percentage c:<= 50)
            (goal attacking 0)
          )
          (and
            (military-population >= 20)
            (and
              (timer-triggered 8)
              (goal locked-teams 1)
            )
          )
        )
      )
    )
=>
    (up-jump-rule 12)
)
(defrule
    (true)
=>
    (set-goal 343 0)
    (generate-random-number 8)
    (up-get-fact random-number 0 343)
    (disable-self)
)
(defrule
    (or
      (goal team-game 1)
      (goal free-for-all 1)
    )
    (goal 343 1)
=>
    (chat-to-all chat-6ede43a29bcd9bae6087d5d2d82447536ed824ce)
    (disable-self)
)
(defrule
    (not
      (goal team-game 1)
    )
    (not
      (goal free-for-all 1)
    )
    (goal 343 1)
=>
    (chat-to-all chat-a95fb62cb0053175f353ba1288f8d2d234b09f01)
    (disable-self)
)
(defrule
    (goal 343 2)
=>
    (chat-to-all chat-f3d1912b990b10acb7343d585e19bc2241d2c1c3)
    (disable-self)
)
(defrule
    (or
      (goal team-game 1)
      (goal free-for-all 1)
    )
    (goal 343 3)
=>
    (chat-to-all chat-f5bd8413755fcb04dd7e0a8b597a929cf19c17a7)
    (disable-self)
)
(defrule
    (not
      (goal team-game 1)
    )
    (not
      (goal free-for-all 1)
    )
    (goal 343 3)
=>
    (chat-to-all chat-6d95d94755acaedd03e97615b28c41909ac4230b)
    (disable-self)
)
(defrule
    (goal 343 4)
=>
    (chat-to-all chat-83694dc1c91d4874c26ac8bc2ecea836aead3ce2)
    (disable-self)
)
(defrule
    (goal 343 5)
=>
    (chat-to-all chat-10cbe05e84d9c7317507462818d034f774765349)
    (disable-self)
)
(defrule
    (goal 343 6)
=>
    (chat-to-all chat-735d0d536d636678c4a8895adb4b86ec7b62a486)
    (disable-self)
)
(defrule
    (goal team-game 1)
    (goal 343 7)
=>
    (chat-to-all chat-3ce3c2bac686e227e9a22ec034d350f77befc77c)
    (disable-self)
)
(defrule
    (not
      (goal team-game 1)
    )
    (goal 343 7)
=>
    (chat-to-all chat-e3e25ce529666447cfcdc1517c952205c85ae301)
    (disable-self)
)
(defrule
    (goal 343 8)
=>
    (chat-to-all chat-8b07e683b6a8a2be05e5fa0983ac1162cbb86b70)
    (disable-self)
)
(defrule
    (nand
      (not
        (goal attacking 1)
      )
      (and
        (up-compare-goal largest-enemy-military-percentage c:>= 170)
        (and
          (nand
            (up-compare-goal largest-enemy-military-percentage c:<= 50)
            (goal attacking 0)
          )
          (and
            (military-population >= 20)
            (and
              (timer-triggered 8)
              (goal locked-teams 1)
            )
          )
        )
      )
    )
=>
    (up-jump-rule 7)
)
(defrule
    (true)
=>
    (set-goal 344 0)
    (generate-random-number 5)
    (up-get-fact random-number 0 344)
    (disable-self)
)
(defrule
    (or
      (goal team-game 1)
      (goal free-for-all 1)
    )
    (goal 344 1)
=>
    (chat-to-all chat-5ff49d06db6d9da4b3d8576ad8c7200426baa045)
    (disable-self)
)
(defrule
    (not
      (goal team-game 1)
    )
    (not
      (goal free-for-all 1)
    )
    (goal 344 1)
=>
    (chat-to-all chat-2e1e4d4524c3a7b32d06e7a0f47dde021d92eea9)
    (disable-self)
)
(defrule
    (goal 344 2)
=>
    (chat-to-all chat-bc024c7f06f28ebe926a8bc05620b507a71db22c)
    (disable-self)
)
(defrule
    (goal 344 3)
=>
    (chat-to-all chat-fda0087cd235c1ddfbec157a739e406b8df7e9c6)
    (disable-self)
)
(defrule
    (goal 344 4)
=>
    (chat-to-all chat-74a9cde05529e14835c25fda908d5d7619760bb8)
    (disable-self)
)
(defrule
    (goal 344 5)
=>
    (chat-to-all chat-b68a42add4208a6c61dc94dc77aff979411df768)
    (disable-self)
)
(defrule
    (not
      (goal resign 1)
    )
=>
    (up-jump-rule 5)
)
(defrule
    (true)
=>
    (set-goal 345 0)
    (generate-random-number 4)
    (up-get-fact random-number 0 345)
    (disable-self)
)
(defrule
    (goal 345 1)
=>
    (chat-to-all chat-abff28fcabfdd0b5dbf2f25ec16d71cd700ceba0)
    (disable-self)
)
(defrule
    (goal 345 2)
=>
    (chat-to-all chat-e224508cbf520f93d798247d758574cec6bbd53e)
    (disable-self)
)
(defrule
    (goal 345 3)
=>
    (chat-to-all chat-0fd729c917031e72165260ea46645b93da7953fb)
    (disable-self)
)
(defrule
    (goal 345 4)
=>
    (chat-to-all chat-3b79e38c69b431d2a0cf2ee8e393dcaf1c582f75)
    (disable-self)
)
(defrule
    (not
      (up-research-status c: castle-age == research-pending)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 346 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 346)
    (disable-self)
)
(defrule
    (goal 346 1)
=>
    (chat-to-allies chat-da0510cbce82adf42730cc776c097ced4769ef84)
    (disable-self)
)
(defrule
    (goal 346 2)
=>
    (chat-to-allies chat-3f53f5f3fede916e304e8d1841050694cc36a6a0)
    (disable-self)
)
(defrule
    (goal 346 3)
=>
    (chat-to-allies chat-6ceeb449e5d4dccf41ce23aa49e4a25fd5d58182)
    (disable-self)
)
(defrule
    (nand
      (goal attacking 0)
      (and
        (goal threat-source watch-tower)
        (and
          (current-age == feudal-age)
          (enemy-buildings-in-town)
        )
      )
    )
=>
    (up-jump-rule 7)
)
(defrule
    (true)
=>
    (set-goal 347 0)
    (generate-random-number 5)
    (up-get-fact random-number 0 347)
    (disable-self)
)
(defrule
    (goal 347 1)
=>
    (chat-to-all chat-c9d0a992bee2534cc3036d84862a2fca61e96673)
    (disable-self)
)
(defrule
    (goal team-game 1)
    (goal 347 2)
=>
    (chat-to-all chat-fa0929c4c5ee827d7c95b20bfee567236a3dbaeb)
    (disable-self)
)
(defrule
    (not
      (goal team-game 1)
    )
    (goal 347 2)
=>
    (chat-to-all chat-994b2d17a26b32564ea254679b1a01fc834304d7)
    (disable-self)
)
(defrule
    (goal 347 3)
=>
    (chat-to-all chat-c0f45c97d40bc07b3efd507b6eeff5ff0c829214)
    (disable-self)
)
(defrule
    (goal 347 4)
=>
    (chat-to-all chat-796082ad792e39c9e35f9d12504b7da4d7825edf)
    (disable-self)
)
(defrule
    (goal 347 5)
=>
    (chat-to-all chat-32ed7d56f6e3169a4469afaac177b2bb4f6c212d)
    (disable-self)
)
(defrule
    (game-time < 60)
    (building-type-count town-center == 0)
=>
    (set-strategic-number sn-wood-gatherer-percentage 100)
    (set-strategic-number sn-food-gatherer-percentage 0)
    (set-strategic-number sn-gold-gatherer-percentage 0)
    (set-strategic-number sn-stone-gatherer-percentage 0)
    (disable-self)
)
(defrule
    (can-build-with-escrow town-center)
    (up-pending-objects c: town-center < 5)
    (building-type-count-total town-center < 1)
=>
    (release-escrow wood)
    (release-escrow stone)
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (up-research-status c: feudal-age < research-pending)
    (building-type-count town-center > 0)
=>
    (set-strategic-number sn-wood-gatherer-percentage 20)
    (set-strategic-number sn-food-gatherer-percentage 80)
    (set-strategic-number sn-gold-gatherer-percentage 0)
    (set-strategic-number sn-stone-gatherer-percentage 0)
    (disable-self)
)
(defrule
    (civilian-population >= 15)
    (up-research-status c: feudal-age < research-pending)
    (building-type-count town-center > 0)
=>
    (set-strategic-number sn-wood-gatherer-percentage 25)
    (set-strategic-number sn-food-gatherer-percentage 75)
    (set-strategic-number sn-gold-gatherer-percentage 0)
    (set-strategic-number sn-stone-gatherer-percentage 0)
    (disable-self)
)
(defrule
    (civilian-population >= 18)
    (up-research-status c: feudal-age < research-pending)
    (building-type-count town-center > 0)
=>
    (set-strategic-number sn-wood-gatherer-percentage 30)
    (set-strategic-number sn-food-gatherer-percentage 70)
    (set-strategic-number sn-gold-gatherer-percentage 0)
    (set-strategic-number sn-stone-gatherer-percentage 0)
    (disable-self)
)
(defrule
    (not
      (up-research-status c: feudal-age < research-pending)
    )
    (building-type-count town-center > 0)
=>
    (set-strategic-number sn-wood-gatherer-percentage 43)
    (set-strategic-number sn-food-gatherer-percentage 43)
    (set-strategic-number sn-gold-gatherer-percentage 14)
    (set-strategic-number sn-stone-gatherer-percentage 0)
    (disable-self)
)
(defrule
    (dropsite-min-distance live-boar != -1)
    (unit-type-count villager >= 8)
    (building-type-count town-center > 0)
=>
    (set-strategic-number sn-enable-boar-hunting 2)
    (set-strategic-number sn-minimum-number-hunters 1)
    (set-strategic-number sn-minimum-boar-lure-group-size 1)
    (set-strategic-number sn-minimum-boar-hunt-group-size 1)
    (set-strategic-number sn-maximum-hunt-drop-distance 48)
)
(defrule
    (dropsite-min-distance live-boar == -1)
    (unit-type-count villager >= 8)
    (building-type-count town-center > 0)
=>
    (set-strategic-number sn-enable-boar-hunting 1)
    (set-strategic-number sn-minimum-number-hunters 0)
    (set-strategic-number sn-minimum-boar-lure-group-size 0)
    (set-strategic-number sn-minimum-boar-hunt-group-size 0)
    (set-strategic-number sn-maximum-hunt-drop-distance 8)
)
(defrule
    (dropsite-min-distance live-boar < 4)
    (dropsite-min-distance live-boar >= 0)
    (unit-type-count villager >= 8)
    (building-type-count town-center > 0)
=>
    (up-request-hunters c: 8)
)
(defrule
    (food-amount < 50)
    (up-pending-objects c: villager <= 1)
    (unit-type-count villager >= 8)
    (building-type-count town-center > 0)
=>
    (up-drop-resources c: boar-food 10)
)
(defrule
    (can-build monastery)
    (up-pending-objects c: monastery < 5)
    (building-type-count-total monastery < 1)
    (building-type-count town-center > 0)
=>
    (build monastery)
    (set-goal 365 1)
)
(defrule
    (can-train monk)
    (unit-type-count-total monk-set < 1)
    (building-type-count town-center > 0)
=>
    (train monk)
)
(defrule
    (population-headroom != 0)
    (up-pending-objects c: house < 2)
    (can-build house)
    (housing-headroom < 5)
    (up-research-status c: feudal-age < research-pending)
    (building-type-count town-center > 0)
=>
    (build house)
    (set-goal 365 1)
)
(defrule
    (population-headroom != 0)
    (up-pending-objects c: house < 2)
    (can-build house)
    (housing-headroom < 20)
    (not
      (up-research-status c: feudal-age < research-pending)
    )
    (building-type-count town-center > 0)
=>
    (build house)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal 348 0)
    (disable-self)
)
(defrule
    (or
      (and
        (dropsite-min-distance wood > 2)
        (resource-found wood)
      )
      (and
        (game-time >= 60)
        (building-type-count-total lumber-camp == 0)
      )
    )
    (up-pending-objects c: lumber-camp == 0)
    (can-build lumber-camp)
    (dropsite-min-distance wood != 255)
    (game-time > 60)
    (building-type-count town-center > 0)
=>
    (build lumber-camp)
    (set-goal 348 1)
)
(defrule
    (goal 348 1)
    (game-time > 60)
    (building-type-count town-center > 0)
=>
    (up-modify-sn sn-camp-max-distance c:+ 1)
)
(defrule
    (true)
=>
    (set-goal 348 0)
)
(defrule
    (building-type-count lumber-camp >= 1)
    (building-type-count town-center > 0)
=>
    (set-goal 240 0)
    (up-get-fact building-type-count-total town-center 349)
    (up-modify-goal 349 c:* 9)
    (up-modify-goal 240 g:+ 349)
    (up-get-fact building-type-count-total mill 349)
    (up-modify-goal 349 c:* 6)
    (up-modify-goal 240 g:+ 349)
    (up-get-fact building-type-count-total farm 349)
)
(defrule
    (or
      (building-type-count-total mill == 0)
      (and
        (not
          (civ-selected khmer)
        )
        (up-compare-goal 349 g:>= 240)
      )
    )
    (or
      (resource-found food)
      (and
        (not
          (civ-selected khmer)
        )
        (game-time >= 60)
      )
    )
    (can-build mill)
    (building-type-count lumber-camp >= 1)
    (building-type-count town-center > 0)
=>
    (build mill)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (current-age >= castle-age)
    (up-compare-goal town-center-count g:< desired-town-centers)
    (building-type-count town-center > 0)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (stone-amount < 100)
    (can-buy-commodity stone)
    (strategic-number sn-stone-gatherer-percentage == 0)
    (current-age >= castle-age)
    (up-compare-goal town-center-count g:< desired-town-centers)
    (building-type-count town-center > 0)
=>
    (buy-commodity stone)
)
(defrule
    (can-build town-center)
    (up-pending-objects c: town-center < 5)
    (up-compare-goal town-center-count g:< desired-town-centers)
    (building-type-count town-center > 0)
=>
    (build town-center)
    (set-goal 365 1)
)
(defrule
    (up-pending-objects c: castle == 0)
    (building-type-count town-center > 0)
=>
    (set-goal 350 0)
    (generate-random-number 2)
    (up-get-fact random-number 0 350)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
    (goal 350 1)
    (up-pending-objects c: castle == 0)
    (building-type-count town-center > 0)
=>
    (build castle)
    (set-goal 365 1)
)
(defrule
    (can-build castle)
    (up-pending-objects c: castle < 5)
    (goal attacking 1)
    (goal 350 2)
    (up-pending-objects c: castle == 0)
    (building-type-count town-center > 0)
=>
    (build-forward castle)
)
(defrule
    (true)
=>
    (set-goal 351 0)
    (disable-self)
)
(defrule
    (or
      (dropsite-min-distance gold > 3)
      (and
        (unit-type-count 579 == 0)
        (and
          (unit-type-count 581 == 0)
          (strategic-number sn-gold-gatherer-percentage > 0)
        )
      )
    )
    (resource-found gold)
    (up-pending-objects c: mining-camp == 0)
    (can-build mining-camp)
    (dropsite-min-distance gold != 255)
    (strategic-number sn-gold-gatherer-percentage > 0)
    (building-type-count town-center > 0)
=>
    (build mining-camp)
    (set-goal 351 1)
)
(defrule
    (dropsite-min-distance stone > 3)
    (resource-found stone)
    (up-pending-objects c: mining-camp == 0)
    (can-build mining-camp)
    (dropsite-min-distance stone != 255)
    (strategic-number sn-stone-gatherer-percentage > 0)
    (building-type-count town-center > 0)
=>
    (build mining-camp)
    (set-goal 351 1)
)
(defrule
    (goal 351 1)
    (building-type-count town-center > 0)
=>
    (up-modify-sn sn-camp-max-distance c:+ 4)
)
(defrule
    (true)
=>
    (set-goal 351 0)
)
(defrule
    (wood-amount >= 150)
    (up-pending-objects c: farm == 0)
    (up-research-status c: feudal-age < research-pending)
    (building-type-count town-center > 0)
=>
    (up-get-fact unit-type-count villager 349)
    (up-modify-goal 349 s:* sn-food-gatherer-percentage)
    (up-modify-goal 349 c:/ 100)
    (up-get-fact building-type-count-total farm 240)
)
(defrule
    (up-compare-goal 240 g:< 349)
    (can-build farm)
    (wood-amount >= 150)
    (up-pending-objects c: farm == 0)
    (up-research-status c: feudal-age < research-pending)
    (building-type-count town-center > 0)
=>
    (build farm)
)
(defrule
    (up-research-status c: ri-horse-collar != research-pending)
    (up-research-status c: ri-heavy-plow != research-pending)
    (up-research-status c: ri-crop-rotation != research-pending)
    (or
      (wood-amount >= 200)
      (building-type-count-total farm < 6)
    )
    (or
      (research-completed ri-horse-collar)
      (food-amount < 75)
    )
    (not
      (up-research-status c: feudal-age < research-pending)
    )
    (building-type-count town-center > 0)
=>
    (up-get-fact unit-type-count villager 349)
    (up-modify-goal 349 s:* sn-food-gatherer-percentage)
    (up-modify-goal 349 c:/ 100)
    (up-get-fact building-type-count-total farm 240)
)
(defrule
    (up-compare-goal 240 g:< 349)
    (can-build farm)
    (up-research-status c: ri-horse-collar != research-pending)
    (up-research-status c: ri-heavy-plow != research-pending)
    (up-research-status c: ri-crop-rotation != research-pending)
    (or
      (wood-amount >= 200)
      (building-type-count-total farm < 6)
    )
    (or
      (research-completed ri-horse-collar)
      (food-amount < 75)
    )
    (not
      (up-research-status c: feudal-age < research-pending)
    )
    (building-type-count town-center > 0)
=>
    (build farm)
)
(defrule
    (nand
      (current-age >= feudal-age)
      (or
        (building-type-count town-center > 0)
        (game-time >= 8)
      )
    )
=>
    (up-jump-rule 130)
)
(defrule
    (can-build market)
    (up-pending-objects c: market < 5)
    (building-type-count-total market < 1)
    (wood-amount > 200)
=>
    (build market)
    (set-goal 365 1)
)
(defrule
    (true)
=>
    (set-goal did-tribute 0)
)
(defrule
    (not
      (goal team-game 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (up-allied-resource-amount any-ally wood < wood-threshold)
    (up-compare-goal non-escrowed-wood c:> max-wood)
=>
    (tribute-to-player this-any-ally wood 100)
    (set-goal did-tribute 1)
    (chat-local-to-self chat-c16cc99892e60a495525ca01fdef862c1af9487e)
)
(defrule
    (not
      (goal team-game 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (up-allied-resource-amount any-ally food < food-threshold)
    (up-compare-goal non-escrowed-food c:> max-food)
=>
    (tribute-to-player this-any-ally food 100)
    (set-goal did-tribute 1)
    (chat-local-to-self chat-ccdd2139b41000710da3064889e4b1ae35562704)
)
(defrule
    (not
      (goal team-game 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (up-allied-resource-amount any-ally gold < gold-threshold)
    (up-compare-goal non-escrowed-gold c:> max-gold)
=>
    (tribute-to-player this-any-ally gold 100)
    (set-goal did-tribute 1)
    (chat-local-to-self chat-c8395566c9f14bcc1ba9ca2f7a7ef0841786ca33)
)
(defrule
    (not
      (goal team-game 1)
    )
=>
    (up-jump-rule 1)
)
(defrule
    (up-allied-resource-amount any-ally stone < stone-threshold)
    (up-compare-goal non-escrowed-stone c:> max-stone)
=>
    (tribute-to-player this-any-ally stone 100)
    (set-goal did-tribute 1)
    (chat-local-to-self chat-0d406058bc76910a3af52fb117012d201c5bd292)
)
(defrule
    (not
      (goal team-game 1)
    )
=>
    (up-jump-rule 12)
)
(defrule
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (building-type-count market >= 1)
    (taunt-detected any-ally 3)
=>
    (tribute-to-player this-any-ally food 100)
    (set-goal did-tribute 1)
)
(defrule
    (nand
      (and
        (up-compare-goal non-escrowed-food c:> food-threshold)
        (building-type-count market >= 1)
      )
      (taunt-detected any-ally 3)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 353 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 353)
)
(defrule
    (goal 353 1)
=>
    (chat-to-player every-ally chat-d70e126bdbfa17c210e069ec4095fd43cf3c84ec)
)
(defrule
    (goal 353 2)
=>
    (chat-to-player every-ally chat-240eb2776efd751ff3abc7e50068b9d40675aba1)
)
(defrule
    (goal 353 3)
=>
    (chat-to-player every-ally chat-59b165c02042977bdaf7087bdf3887eb9f20a828)
)
(defrule
    (nand
      (nand
        (up-compare-goal non-escrowed-food c:> food-threshold)
        (building-type-count market >= 1)
      )
      (taunt-detected any-ally 3)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 354 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 354)
)
(defrule
    (goal 354 1)
=>
    (chat-to-player every-ally chat-adce784ed342763397f2d5c5567de3da43ad274c)
)
(defrule
    (goal 354 2)
=>
    (chat-to-player every-ally chat-39c49ff4279bb5160e5406ffd1627ea17127aab9)
)
(defrule
    (goal 354 3)
=>
    (chat-to-player every-ally chat-4f5a3f8e7707db677e3935f1ab3f9fa22019323e)
)
(defrule
    (taunt-detected any-ally 3)
=>
    (acknowledge-taunt this-any-ally 3)
)
(defrule
    (not
      (goal team-game 1)
    )
=>
    (up-jump-rule 12)
)
(defrule
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (building-type-count market >= 1)
    (taunt-detected any-ally 4)
=>
    (tribute-to-player this-any-ally wood 100)
    (set-goal did-tribute 1)
)
(defrule
    (nand
      (and
        (up-compare-goal non-escrowed-wood c:> wood-threshold)
        (building-type-count market >= 1)
      )
      (taunt-detected any-ally 4)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 355 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 355)
)
(defrule
    (goal 355 1)
=>
    (chat-to-player every-ally chat-d70e126bdbfa17c210e069ec4095fd43cf3c84ec)
)
(defrule
    (goal 355 2)
=>
    (chat-to-player every-ally chat-240eb2776efd751ff3abc7e50068b9d40675aba1)
)
(defrule
    (goal 355 3)
=>
    (chat-to-player every-ally chat-59b165c02042977bdaf7087bdf3887eb9f20a828)
)
(defrule
    (nand
      (nand
        (up-compare-goal non-escrowed-wood c:> wood-threshold)
        (building-type-count market >= 1)
      )
      (taunt-detected any-ally 4)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 356 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 356)
)
(defrule
    (goal 356 1)
=>
    (chat-to-player every-ally chat-adce784ed342763397f2d5c5567de3da43ad274c)
)
(defrule
    (goal 356 2)
=>
    (chat-to-player every-ally chat-39c49ff4279bb5160e5406ffd1627ea17127aab9)
)
(defrule
    (goal 356 3)
=>
    (chat-to-player every-ally chat-4f5a3f8e7707db677e3935f1ab3f9fa22019323e)
)
(defrule
    (taunt-detected any-ally 4)
=>
    (acknowledge-taunt this-any-ally 4)
)
(defrule
    (not
      (goal team-game 1)
    )
=>
    (up-jump-rule 12)
)
(defrule
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (building-type-count market >= 1)
    (taunt-detected any-ally 5)
=>
    (tribute-to-player this-any-ally gold 100)
    (set-goal did-tribute 1)
)
(defrule
    (nand
      (and
        (up-compare-goal non-escrowed-gold c:> gold-threshold)
        (building-type-count market >= 1)
      )
      (taunt-detected any-ally 5)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 357 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 357)
)
(defrule
    (goal 357 1)
=>
    (chat-to-player every-ally chat-d70e126bdbfa17c210e069ec4095fd43cf3c84ec)
)
(defrule
    (goal 357 2)
=>
    (chat-to-player every-ally chat-240eb2776efd751ff3abc7e50068b9d40675aba1)
)
(defrule
    (goal 357 3)
=>
    (chat-to-player every-ally chat-59b165c02042977bdaf7087bdf3887eb9f20a828)
)
(defrule
    (nand
      (nand
        (up-compare-goal non-escrowed-gold c:> gold-threshold)
        (building-type-count market >= 1)
      )
      (taunt-detected any-ally 5)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 358 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 358)
)
(defrule
    (goal 358 1)
=>
    (chat-to-player every-ally chat-adce784ed342763397f2d5c5567de3da43ad274c)
)
(defrule
    (goal 358 2)
=>
    (chat-to-player every-ally chat-39c49ff4279bb5160e5406ffd1627ea17127aab9)
)
(defrule
    (goal 358 3)
=>
    (chat-to-player every-ally chat-4f5a3f8e7707db677e3935f1ab3f9fa22019323e)
)
(defrule
    (taunt-detected any-ally 5)
=>
    (acknowledge-taunt this-any-ally 5)
)
(defrule
    (not
      (goal team-game 1)
    )
=>
    (up-jump-rule 12)
)
(defrule
    (up-compare-goal non-escrowed-stone c:> stone-threshold)
    (building-type-count market >= 1)
    (taunt-detected any-ally 6)
=>
    (tribute-to-player this-any-ally stone 100)
    (set-goal did-tribute 1)
)
(defrule
    (nand
      (and
        (up-compare-goal non-escrowed-stone c:> stone-threshold)
        (building-type-count market >= 1)
      )
      (taunt-detected any-ally 6)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 359 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 359)
)
(defrule
    (goal 359 1)
=>
    (chat-to-player every-ally chat-d70e126bdbfa17c210e069ec4095fd43cf3c84ec)
)
(defrule
    (goal 359 2)
=>
    (chat-to-player every-ally chat-240eb2776efd751ff3abc7e50068b9d40675aba1)
)
(defrule
    (goal 359 3)
=>
    (chat-to-player every-ally chat-59b165c02042977bdaf7087bdf3887eb9f20a828)
)
(defrule
    (nand
      (nand
        (up-compare-goal non-escrowed-stone c:> stone-threshold)
        (building-type-count market >= 1)
      )
      (taunt-detected any-ally 6)
    )
=>
    (up-jump-rule 4)
)
(defrule
    (true)
=>
    (set-goal 360 0)
    (generate-random-number 3)
    (up-get-fact random-number 0 360)
)
(defrule
    (goal 360 1)
=>
    (chat-to-player every-ally chat-adce784ed342763397f2d5c5567de3da43ad274c)
)
(defrule
    (goal 360 2)
=>
    (chat-to-player every-ally chat-39c49ff4279bb5160e5406ffd1627ea17127aab9)
)
(defrule
    (goal 360 3)
=>
    (chat-to-player every-ally chat-4f5a3f8e7707db677e3935f1ab3f9fa22019323e)
)
(defrule
    (taunt-detected any-ally 6)
=>
    (acknowledge-taunt this-any-ally 6)
)
(defrule
    (or
      (goal team-game 0)
      (goal did-tribute 0)
    )
=>
    (up-get-fact resource-amount wood 349)
    (up-get-fact escrow-amount wood 240)
    (up-modify-goal 349 g:- 240)
    (up-get-fact resource-amount food 361)
    (up-get-fact escrow-amount food 240)
    (up-modify-goal 361 g:- 240)
    (up-get-fact resource-amount gold 362)
    (up-get-fact escrow-amount gold 240)
    (up-modify-goal 362 g:- 240)
)
(defrule
    (up-compare-goal 349 c:> max-gold)
    (can-sell-commodity wood)
    (up-compare-goal 362 c:< max-gold)
    (or
      (goal team-game 0)
      (goal did-tribute 0)
    )
=>
    (sell-commodity wood)
)
(defrule
    (up-compare-goal 361 c:> max-gold)
    (can-sell-commodity food)
    (up-compare-goal 362 c:< max-gold)
    (or
      (goal team-game 0)
      (goal did-tribute 0)
    )
=>
    (sell-commodity food)
)
(defrule
    (up-compare-goal 349 c:< max-gold)
    (up-compare-goal 362 c:> max-gold)
    (can-buy-commodity wood)
    (or
      (goal team-game 0)
      (goal did-tribute 0)
    )
=>
    (buy-commodity wood)
)
(defrule
    (up-compare-goal 361 c:< max-gold)
    (up-compare-goal 362 c:> max-gold)
    (can-buy-commodity food)
    (or
      (goal team-game 0)
      (goal did-tribute 0)
    )
=>
    (buy-commodity food)
)
(defrule
    (goal under-attack 1)
=>
    (up-get-fact resource-amount wood 361)
    (up-get-fact escrow-amount wood 362)
    (up-modify-goal 361 g:- 362)
    (up-get-fact resource-amount food 349)
    (up-get-fact escrow-amount food 362)
    (up-modify-goal 349 g:- 362)
    (up-get-fact resource-amount gold 240)
    (up-get-fact escrow-amount gold 362)
    (up-modify-goal 240 g:- 362)
)
(defrule
    (up-compare-goal 361 c:> gold-threshold)
    (can-sell-commodity wood)
    (up-compare-goal 240 c:< gold-threshold)
    (goal under-attack 1)
=>
    (sell-commodity wood)
)
(defrule
    (up-compare-goal 349 c:> gold-threshold)
    (can-sell-commodity food)
    (up-compare-goal 240 c:< gold-threshold)
    (goal under-attack 1)
=>
    (sell-commodity food)
)
(defrule
    (up-compare-goal 361 c:< gold-threshold)
    (up-compare-goal 240 c:> gold-threshold)
    (can-buy-commodity wood)
    (goal under-attack 1)
=>
    (buy-commodity wood)
)
(defrule
    (up-compare-goal 349 c:< gold-threshold)
    (up-compare-goal 240 c:> gold-threshold)
    (can-buy-commodity food)
    (goal under-attack 1)
=>
    (buy-commodity food)
)
(defrule
    (commodity-buying-price wood <= excellent-wood-price)
    (or
      (up-compare-goal non-escrowed-wood c:< wood-threshold)
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (wood-amount < half-max-wood)
    (not
      (goal under-attack 1)
    )
=>
    (chat-local-to-self chat-751b5928087d11eba65985a66c3803e65d9dae20)
)
(defrule
    (can-buy-commodity wood)
    (commodity-buying-price wood <= excellent-wood-price)
    (or
      (up-compare-goal non-escrowed-wood c:< wood-threshold)
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (wood-amount < half-max-wood)
    (not
      (goal under-attack 1)
    )
=>
    (buy-commodity wood)
)
(defrule
    (commodity-buying-price food <= excellent-food-price)
    (or
      (up-compare-goal non-escrowed-food c:< food-threshold)
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (food-amount < half-max-food)
    (not
      (goal under-attack 1)
    )
=>
    (chat-local-to-self chat-799ebc2e18e5acaa96f2916b700be42ad0a64dba)
)
(defrule
    (can-buy-commodity food)
    (commodity-buying-price food <= excellent-food-price)
    (or
      (up-compare-goal non-escrowed-food c:< food-threshold)
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (food-amount < half-max-food)
    (not
      (goal under-attack 1)
    )
=>
    (buy-commodity food)
)
(defrule
    (commodity-selling-price wood >= excellent-wood-sell-price)
    (or
      (up-compare-goal non-escrowed-wood c:> wood-threshold)
      (up-compare-goal non-escrowed-gold c:< gold-threshold)
    )
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (gold-amount < half-max-gold)
    (not
      (goal under-attack 1)
    )
=>
    (chat-local-to-self chat-2cd1cb794480bb23192fb8a01b286cdde2b1ac70)
)
(defrule
    (can-sell-commodity wood)
    (commodity-selling-price wood >= excellent-wood-sell-price)
    (or
      (up-compare-goal non-escrowed-wood c:> wood-threshold)
      (up-compare-goal non-escrowed-gold c:< gold-threshold)
    )
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (gold-amount < half-max-gold)
    (not
      (goal under-attack 1)
    )
=>
    (sell-commodity wood)
)
(defrule
    (commodity-selling-price food >= excellent-food-sell-price)
    (or
      (up-compare-goal non-escrowed-food c:> food-threshold)
      (up-compare-goal non-escrowed-gold c:< gold-threshold)
    )
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (gold-amount < half-max-gold)
    (not
      (goal under-attack 1)
    )
=>
    (chat-local-to-self chat-44c30f3a793150391847d49ba872e9cee87b8bea)
)
(defrule
    (can-sell-commodity food)
    (commodity-selling-price food >= excellent-food-sell-price)
    (or
      (up-compare-goal non-escrowed-food c:> food-threshold)
      (up-compare-goal non-escrowed-gold c:< gold-threshold)
    )
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (gold-amount < half-max-gold)
    (not
      (goal under-attack 1)
    )
=>
    (sell-commodity food)
)
(defrule
    (commodity-buying-price wood <= good-wood-price)
    (up-compare-goal non-escrowed-wood c:< wood-threshold)
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (not
      (goal under-attack 1)
    )
=>
    (chat-local-to-self chat-c62715314a567434688ed360f54f41ec310888de)
)
(defrule
    (can-buy-commodity wood)
    (commodity-buying-price wood <= good-wood-price)
    (up-compare-goal non-escrowed-wood c:< wood-threshold)
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (not
      (goal under-attack 1)
    )
=>
    (buy-commodity wood)
)
(defrule
    (commodity-buying-price food <= good-food-price)
    (up-compare-goal non-escrowed-food c:< food-threshold)
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (not
      (goal under-attack 1)
    )
=>
    (chat-local-to-self chat-21c85db3b3664127b620546345848989c1926b4a)
)
(defrule
    (can-buy-commodity food)
    (commodity-buying-price food <= good-food-price)
    (up-compare-goal non-escrowed-food c:< food-threshold)
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (not
      (goal under-attack 1)
    )
=>
    (buy-commodity food)
)
(defrule
    (commodity-selling-price wood >= good-wood-sell-price)
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (not
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (not
      (goal under-attack 1)
    )
=>
    (chat-local-to-self chat-875edfa23fa1b4599a86404c2d08b0d801758fc4)
)
(defrule
    (can-sell-commodity wood)
    (commodity-selling-price wood >= good-wood-sell-price)
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (not
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (not
      (goal under-attack 1)
    )
=>
    (sell-commodity wood)
)
(defrule
    (commodity-selling-price food >= good-food-sell-price)
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (not
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (not
      (goal under-attack 1)
    )
=>
    (chat-local-to-self chat-116f9ef6361a9063fd3ee3fbe9cc61f87fcdc777)
)
(defrule
    (can-sell-commodity food)
    (commodity-selling-price food >= good-food-sell-price)
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (not
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (not
      (goal under-attack 1)
    )
=>
    (sell-commodity food)
)
(defrule
    (true)
=>
    (enable-timer 9 60)
    (disable-self)
)
(defrule
    (not
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (chat-local-to-self chat-34f8609760258d82ecc3e0146f981c1ec0725afb)
)
(defrule
    (strategic-number sn-wood-gatherer-percentage >= 2)
    (strategic-number sn-food-gatherer-percentage >= 2)
    (strategic-number sn-gold-gatherer-percentage <= 96)
    (not
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (up-modify-sn sn-wood-gatherer-percentage c:- 2)
    (up-modify-sn sn-food-gatherer-percentage c:- 2)
    (up-modify-sn sn-gold-gatherer-percentage c:+ 4)
)
(defrule
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (not
      (up-compare-goal non-escrowed-food c:> food-threshold)
    )
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (chat-local-to-self chat-19b22c4216400b4ac44cedd180de15040bba208a)
)
(defrule
    (strategic-number sn-wood-gatherer-percentage >= 2)
    (strategic-number sn-gold-gatherer-percentage >= 2)
    (strategic-number sn-food-gatherer-percentage <= 96)
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (not
      (up-compare-goal non-escrowed-food c:> food-threshold)
    )
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (up-modify-sn sn-wood-gatherer-percentage c:- 2)
    (up-modify-sn sn-gold-gatherer-percentage c:- 2)
    (up-modify-sn sn-food-gatherer-percentage c:+ 4)
)
(defrule
    (not
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (not
      (up-compare-goal non-escrowed-food c:> food-threshold)
    )
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (chat-local-to-self chat-7f1eda05222ecfc6817de23caf16247e9200bb91)
)
(defrule
    (strategic-number sn-wood-gatherer-percentage >= 4)
    (strategic-number sn-food-gatherer-percentage <= 98)
    (strategic-number sn-gold-gatherer-percentage <= 98)
    (not
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (not
      (up-compare-goal non-escrowed-food c:> food-threshold)
    )
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (up-modify-sn sn-wood-gatherer-percentage c:- 4)
    (up-modify-sn sn-food-gatherer-percentage c:+ 2)
    (up-modify-sn sn-gold-gatherer-percentage c:+ 2)
)
(defrule
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (not
      (up-compare-goal non-escrowed-wood c:> wood-threshold)
    )
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (chat-local-to-self chat-852bc71dbe1d5f015c304fd5abc8ff06a003dc65)
)
(defrule
    (strategic-number sn-food-gatherer-percentage >= 2)
    (strategic-number sn-gold-gatherer-percentage >= 2)
    (strategic-number sn-wood-gatherer-percentage <= 96)
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (not
      (up-compare-goal non-escrowed-wood c:> wood-threshold)
    )
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (up-modify-sn sn-food-gatherer-percentage c:- 2)
    (up-modify-sn sn-gold-gatherer-percentage c:- 2)
    (up-modify-sn sn-wood-gatherer-percentage c:+ 4)
)
(defrule
    (not
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (not
      (up-compare-goal non-escrowed-wood c:> wood-threshold)
    )
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (chat-local-to-self chat-bd7c8904ccd4165da66d7d9cecb51f8500c6890b)
)
(defrule
    (strategic-number sn-food-gatherer-percentage >= 4)
    (strategic-number sn-wood-gatherer-percentage <= 98)
    (strategic-number sn-gold-gatherer-percentage <= 98)
    (not
      (up-compare-goal non-escrowed-gold c:> gold-threshold)
    )
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (not
      (up-compare-goal non-escrowed-wood c:> wood-threshold)
    )
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (up-modify-sn sn-food-gatherer-percentage c:- 4)
    (up-modify-sn sn-wood-gatherer-percentage c:+ 2)
    (up-modify-sn sn-gold-gatherer-percentage c:+ 2)
)
(defrule
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (not
      (up-compare-goal non-escrowed-food c:> food-threshold)
    )
    (not
      (up-compare-goal non-escrowed-wood c:> wood-threshold)
    )
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (chat-local-to-self chat-822e28c24c9ecfade87e50563a2fda287b1d3e41)
)
(defrule
    (strategic-number sn-gold-gatherer-percentage >= 4)
    (strategic-number sn-wood-gatherer-percentage <= 98)
    (strategic-number sn-food-gatherer-percentage <= 98)
    (up-compare-goal non-escrowed-gold c:> gold-threshold)
    (not
      (up-compare-goal non-escrowed-food c:> food-threshold)
    )
    (not
      (up-compare-goal non-escrowed-wood c:> wood-threshold)
    )
    (dropsite-min-distance gold >= 0)
    (timer-triggered 9)
=>
    (up-modify-sn sn-gold-gatherer-percentage c:- 4)
    (up-modify-sn sn-wood-gatherer-percentage c:+ 2)
    (up-modify-sn sn-food-gatherer-percentage c:+ 2)
)
(defrule
    (not
      (up-compare-goal non-escrowed-food c:> food-threshold)
    )
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (not
      (dropsite-min-distance gold >= 0)
    )
    (timer-triggered 9)
=>
    (chat-local-to-self chat-d94b5a6ca271d8c89b20340814572189d3edf11b)
)
(defrule
    (strategic-number sn-wood-gatherer-percentage >= 4)
    (strategic-number sn-food-gatherer-percentage <= 96)
    (not
      (up-compare-goal non-escrowed-food c:> food-threshold)
    )
    (up-compare-goal non-escrowed-wood c:> wood-threshold)
    (not
      (dropsite-min-distance gold >= 0)
    )
    (timer-triggered 9)
=>
    (up-modify-sn sn-wood-gatherer-percentage c:- 4)
    (up-modify-sn sn-food-gatherer-percentage c:+ 4)
)
(defrule
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (not
      (up-compare-goal non-escrowed-wood c:> wood-threshold)
    )
    (not
      (dropsite-min-distance gold >= 0)
    )
    (timer-triggered 9)
=>
    (chat-local-to-self chat-5910be933cb49a20786061b35fa87af01792653d)
)
(defrule
    (strategic-number sn-food-gatherer-percentage >= 4)
    (strategic-number sn-wood-gatherer-percentage <= 96)
    (up-compare-goal non-escrowed-food c:> food-threshold)
    (not
      (up-compare-goal non-escrowed-wood c:> wood-threshold)
    )
    (not
      (dropsite-min-distance gold >= 0)
    )
    (timer-triggered 9)
=>
    (up-modify-sn sn-food-gatherer-percentage c:- 4)
    (up-modify-sn sn-wood-gatherer-percentage c:+ 4)
)
(defrule
    (timer-triggered 9)
=>
    (disable-timer 9)
    (enable-timer 9 60)
)
(defrule
    (strategic-number sn-wood-gatherer-percentage < minimum-wood-gatherer-percentage)
=>
    (chat-local-to-self chat-7a235c0422e15153261184195d5b73a1f30f9281)
)
(defrule
    (strategic-number sn-food-gatherer-percentage >= 1)
    (strategic-number sn-gold-gatherer-percentage >= 1)
    (strategic-number sn-wood-gatherer-percentage <= 98)
    (strategic-number sn-wood-gatherer-percentage < minimum-wood-gatherer-percentage)
=>
    (up-modify-sn sn-food-gatherer-percentage c:- 1)
    (up-modify-sn sn-gold-gatherer-percentage c:- 1)
    (up-modify-sn sn-wood-gatherer-percentage c:+ 2)
)
(defrule
    (strategic-number sn-food-gatherer-percentage < minimum-food-gatherer-percentage)
=>
    (chat-local-to-self chat-b68108b9246231bd0dcba3f02d73a21fd94239a8)
)
(defrule
    (strategic-number sn-wood-gatherer-percentage >= 1)
    (strategic-number sn-gold-gatherer-percentage >= 1)
    (strategic-number sn-food-gatherer-percentage <= 98)
    (strategic-number sn-food-gatherer-percentage < minimum-food-gatherer-percentage)
=>
    (up-modify-sn sn-wood-gatherer-percentage c:- 1)
    (up-modify-sn sn-gold-gatherer-percentage c:- 1)
    (up-modify-sn sn-food-gatherer-percentage c:+ 2)
)
(defrule
    (strategic-number sn-gold-gatherer-percentage < minimum-gold-gatherer-percentage)
    (dropsite-min-distance gold >= 0)
=>
    (chat-local-to-self chat-7c910559fb331f99581145a809d8a7f4c80a3f40)
)
(defrule
    (strategic-number sn-wood-gatherer-percentage >= 1)
    (strategic-number sn-food-gatherer-percentage >= 1)
    (strategic-number sn-gold-gatherer-percentage <= 98)
    (strategic-number sn-gold-gatherer-percentage < minimum-gold-gatherer-percentage)
    (dropsite-min-distance gold >= 0)
=>
    (up-modify-sn sn-wood-gatherer-percentage c:- 1)
    (up-modify-sn sn-food-gatherer-percentage c:- 1)
    (up-modify-sn sn-gold-gatherer-percentage c:+ 2)
)
(defrule
    (not
      (dropsite-min-distance gold >= 0)
    )
=>
    (chat-local-to-self chat-4419ac64cf698a06e303ef2add9e74b240d800d5)
    (disable-self)
)
(defrule
    (strategic-number sn-gold-gatherer-percentage >= 1)
    (strategic-number sn-wood-gatherer-percentage <= 99)
    (not
      (dropsite-min-distance gold >= 0)
    )
=>
    (up-modify-sn sn-gold-gatherer-percentage c:- 1)
    (up-modify-sn sn-wood-gatherer-percentage c:+ 1)
)
(defrule
    (strategic-number sn-gold-gatherer-percentage >= 1)
    (strategic-number sn-food-gatherer-percentage <= 99)
    (not
      (dropsite-min-distance gold >= 0)
    )
=>
    (up-modify-sn sn-gold-gatherer-percentage c:- 1)
    (up-modify-sn sn-food-gatherer-percentage c:+ 1)
)
(defrule
    (not
      (goal do-stone-mining 1)
    )
=>
    (up-jump-rule 3)
)
(defrule
    (strategic-number sn-wood-gatherer-percentage >= 1)
    (strategic-number sn-stone-gatherer-percentage <= 99)
    (strategic-number sn-stone-gatherer-percentage < 8)
=>
    (up-modify-sn sn-wood-gatherer-percentage c:- 1)
    (up-modify-sn sn-stone-gatherer-percentage c:+ 1)
)
(defrule
    (strategic-number sn-food-gatherer-percentage >= 1)
    (strategic-number sn-stone-gatherer-percentage <= 99)
    (strategic-number sn-stone-gatherer-percentage < 8)
=>
    (up-modify-sn sn-food-gatherer-percentage c:- 1)
    (up-modify-sn sn-stone-gatherer-percentage c:+ 1)
)
(defrule
    (strategic-number sn-gold-gatherer-percentage >= 1)
    (strategic-number sn-stone-gatherer-percentage <= 99)
    (strategic-number sn-stone-gatherer-percentage < 8)
=>
    (up-modify-sn sn-gold-gatherer-percentage c:- 1)
    (up-modify-sn sn-stone-gatherer-percentage c:+ 1)
)
(defrule
    (goal do-stone-mining 1)
=>
    (up-jump-rule 3)
)
(defrule
    (strategic-number sn-stone-gatherer-percentage >= 1)
    (strategic-number sn-wood-gatherer-percentage <= 99)
    (strategic-number sn-stone-gatherer-percentage > 0)
=>
    (up-modify-sn sn-stone-gatherer-percentage c:- 1)
    (up-modify-sn sn-wood-gatherer-percentage c:+ 1)
)
(defrule
    (strategic-number sn-stone-gatherer-percentage >= 1)
    (strategic-number sn-food-gatherer-percentage <= 99)
    (strategic-number sn-stone-gatherer-percentage > 0)
=>
    (up-modify-sn sn-stone-gatherer-percentage c:- 1)
    (up-modify-sn sn-food-gatherer-percentage c:+ 1)
)
(defrule
    (strategic-number sn-stone-gatherer-percentage >= 1)
    (strategic-number sn-gold-gatherer-percentage <= 99)
    (strategic-number sn-stone-gatherer-percentage > 0)
=>
    (up-modify-sn sn-stone-gatherer-percentage c:- 1)
    (up-modify-sn sn-gold-gatherer-percentage c:+ 1)
)
(defrule
    (true)
=>
    (set-goal 363 0)
)
(defrule
    (up-compare-goal desired-trade-carts g:< max-desired-trade-carts)
=>
    (set-goal 363 1)
)
(defrule
    (goal 363 1)
=>
    (enable-timer 10 300)
    (disable-self)
)
(defrule
    (timer-triggered 10)
    (goal 363 1)
=>
    (set-goal 364 0)
)
(defrule
    (up-compare-goal total-trade-carts g:>= desired-trade-carts)
    (up-compare-goal non-escrowed-gold c:<= gold-threshold)
    (timer-triggered 10)
    (goal 363 1)
=>
    (set-goal 364 1)
)
(defrule
    (goal 364 1)
    (timer-triggered 10)
    (goal 363 1)
=>
    (up-modify-goal desired-trade-carts c:+ 5)
    (up-modify-goal desired-trade-carts g:min max-desired-trade-carts)
    (chat-local-to-self chat-9c1fa295fbd8be460841820389f2c1c66e60be8c)
)
(defrule
    (timer-triggered 10)
    (goal 363 1)
=>
    (disable-timer 10)
    (enable-timer 10 300)
)
(defrule
    (strategic-number sn-maximum-town-size <= 30)
=>
    (set-strategic-number sn-maximum-town-size 30)
    (set-strategic-number sn-minimum-town-size 8)
    (set-strategic-number sn-safe-town-size 30)
    (set-goal 366 0)
    (disable-self)
)
(defrule
    (strategic-number sn-maximum-town-size <= 30)
=>
    (up-modify-sn sn-maximum-town-size c:+ 4)
    (up-modify-sn sn-maximum-town-size c:min 30)
    (set-strategic-number sn-minimum-town-size 8)
    (set-strategic-number sn-safe-town-size 30)
)
(defrule
    (goal 365 0)
    (strategic-number sn-maximum-town-size <= 30)
=>
    (set-goal 366 0)
)
(defrule
    (goal 365 1)
    (goal 366 0)
    (strategic-number sn-maximum-town-size <= 30)
=>
    (up-modify-sn sn-maximum-town-size s:= sn-minimum-town-size)
    (set-goal 366 1)
)
(defrule
    (strategic-number sn-maximum-town-size <= 30)
=>
    (set-goal 365 0)
)
(defrule
    (true)
=>
    (enable-timer 11 60)
    (disable-self)
)
(defrule
    (goal research-level importance-critical)
    (timer-triggered 11)
=>
    (chat-local-to-self chat-02a44b954882b7be12972680db2dfdb8d3573037)
)
(defrule
    (goal research-level importance-high)
    (timer-triggered 11)
=>
    (chat-local-to-self chat-84675dc7c0b9c4fa2bae6118449907b7018c7fcd)
)
(defrule
    (goal research-level importance-medium)
    (timer-triggered 11)
=>
    (chat-local-to-self chat-ebae1d86c02c2920af25f66bb982462bf689d398)
)
(defrule
    (goal research-level importance-low)
    (timer-triggered 11)
=>
    (chat-local-to-self chat-b8998735697e4cd38237f8411e4d40e06cbbc790)
)
(defrule
    (timer-triggered 11)
=>
    (disable-timer 11)
    (enable-timer 11 60)
)
