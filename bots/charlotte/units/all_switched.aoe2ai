load "units/villager.aoe2ai"
#if goal produce-trade-carts 1
  load "units/trade_cart.aoe2ai"
#end if
#if goal water-map 1
  load "units/fishing_ship.aoe2ai"
#end if

#do once
  goal old-produce-units = 0
  goal trained-unit = 0 // unused
  goal current-unit-amount = 0
  goal expected-units-per-type = 0
#end do

#if wood-amount >= wood-unit-threshold
  goal enough-wood = 1
#else
  goal enough-wood = 0
#end if

#if food-amount >= food-unit-threshold
  goal enough-food = 1
#else
  goal enough-food = 0
#end if

#if gold-amount >= gold-unit-threshold
  goal enough-gold = 1
#else
  goal enough-gold = 0
#end if

#if goal attacking 0 and town-under-attack// or current-age == feudal-age
  goal enough-wood = 1
  goal enough-food = 1
  goal enough-gold = 1
#end if

goal total-type-production = 0

#if goal enough-wood 1 and goal enough-gold 1
  @up-modify-goal total-type-production g:+ produce-archers
  @up-modify-goal total-type-production g:+ produce-cavalry-archers
  @up-modify-goal total-type-production g:+ produce-battering-rams
  @up-modify-goal total-type-production g:+ produce-mangonels
  @up-modify-goal total-type-production g:+ produce-scorpions
  @up-modify-goal total-type-production g:+ produce-bombard-cannons
  @up-modify-goal total-type-production g:+ produce-trebuchets
  @up-modify-goal total-type-production g:+ produce-galleys
  @up-modify-goal total-type-production g:+ produce-fire-ships
  @up-modify-goal total-type-production g:+ produce-cannon-galleons
#end if

#if goal enough-food 1 and goal enough-gold 1
  #if unit-available hand-cannoneer
    @up-modify-goal total-type-production g:+ produce-hand-cannoneers
  #end if
  @up-modify-goal total-type-production g:+ produce-militia
  @up-modify-goal total-type-production g:+ produce-eagles
  @up-modify-goal total-type-production g:+ produce-knights
  @up-modify-goal total-type-production g:+ produce-camels
  @up-modify-goal total-type-production g:+ produce-battle-elephants
#end if

#if goal enough-food 1
  @up-modify-goal total-type-production g:+ produce-scouts
#end if

#if goal enough-wood 1 and goal enough-food 1
  @up-modify-goal total-type-production g:+ produce-skirmishers
  @up-modify-goal total-type-production g:+ produce-spearmen
#end if

#if goal enough-wood 1 and goal enough-food 1 and goal enough-gold 1 and (building-type-count castle >= 2 or goal desired-units 1)
  @up-modify-goal total-type-production g:+ produce-unique-units
#end if

#if goal enough-gold 1
  @up-modify-goal total-type-production g:+ produce-monks
#end if

@up-get-fact military-population 0 expected-units-per-type
@up-modify-goal expected-units-per-type g:/ total-type-production

load "units/prerequisites.aoe2ai"

#subroutine load-unit
  #if goal {production_goal} 1 and unit-available {unit}
    @up-modify-goal old-produce-units g:= produce-units
    
    @up-get-fact unit-type-count {unit} current-unit-amount
    #if up-compare-goal current-unit-amount g:> expected-units-per-type
      goal produce-units = 0
    #end if
    
    load "{unit_path}"
    @up-modify-goal produce-units g:= old-produce-units
  #end if
#end subroutine

call load-unit(production_goal="produce-archers",unit="archer-line",unit_path="units/archer.aoe2ai")
call load-unit(production_goal="produce-hand-cannoneers",unit="hand-cannoneer",unit_path="units/hand_cannoneer.aoe2ai")
call load-unit(production_goal="produce-skirmishers",unit="skirmisher-line",unit_path="units/skirmisher.aoe2ai")
call load-unit(production_goal="produce-cavalry-archers",unit="cavalry-archer-line",unit_path="units/cavalry_archer.aoe2ai")

call load-unit(production_goal="produce-militia",unit="militiaman-line",unit_path="units/militia.aoe2ai")
call load-unit(production_goal="produce-spearmen",unit="spearman-line",unit_path="units/spearman.aoe2ai")
call load-unit(production_goal="produce-eagles",unit="eagle-warrior-line",unit_path="units/eagle_warrior.aoe2ai")

call load-unit(production_goal="produce-scouts",unit="scout-cavalry-line",unit_path="units/scout_cavalry.aoe2ai")
call load-unit(production_goal="produce-knights",unit="knight-line",unit_path="units/knight.aoe2ai")
call load-unit(production_goal="produce-camels",unit="camel-line",unit_path="units/camel.aoe2ai")
call load-unit(production_goal="produce-battle-elephants",unit="battle-elephant-line",unit_path="units/battle_elephant.aoe2ai")

call load-unit(production_goal="produce-battering-rams",unit="battering-ram-line",unit_path="units/battering_ram.aoe2ai")
call load-unit(production_goal="produce-mangonels",unit="mangonel-line",unit_path="units/mangonel.aoe2ai")
call load-unit(production_goal="produce-scorpions",unit="scorpion-line",unit_path="units/scorpion.aoe2ai")
call load-unit(production_goal="produce-bombard-cannons",unit="bombard-cannon",unit_path="units/bombard_cannon.aoe2ai")

call load-unit(production_goal="produce-trebuchets",unit="trebuchet-set",unit_path="units/trebuchet.aoe2ai")
call load-unit(production_goal="produce-unique-units",unit="my-unique-unit-line",unit_path="units/unique_unit.aoe2ai")

call load-unit(production_goal="produce-monks",unit="monk-set",unit_path="units/monk.aoe2ai")

call load-unit(production_goal="produce-galleys",unit="galley-line",unit_path="units/galley.aoe2ai")
call load-unit(production_goal="produce-fire-ships",unit="fire-ship-line",unit_path="units/fire_ship.aoe2ai")
call load-unit(production_goal="produce-cannon-galleons",unit="cannon-galleon-line",unit_path="units/cannon_galleon.aoe2ai")
